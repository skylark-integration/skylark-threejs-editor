{"version":3,"sources":["History.js"],"names":["define","Commands","History","editor","this","undos","redos","lastCmdTime","Date","idCounter","historyDisabled","config","scope","signals","startPlayer","add","stopPlayer","prototype","execute","cmd","optionalName","lastCmd","length","timeDifference","getTime","isUpdatableCmd","updatable","object","type","script","attributeName","update","push","id","name","undefined","inMemory","getKey","json","toJSON","historyChanged","dispatch","undo","pop","fromJSON","alert","redo","history","i","hasOwnProperty","cmdJSON","clear","goToState","sceneGraphChanged","active","enableSerialization"],"mappings":"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","file":"../History.js","sourcesContent":["define([\n    './commands/Commands'\n], function (Commands) {\n    'use strict';\n    var History = function (editor) {\n        this.editor = editor;\n        this.undos = [];\n        this.redos = [];\n        this.lastCmdTime = new Date();\n        this.idCounter = 0;\n        this.historyDisabled = false;\n        this.config = editor.config;\n        var scope = this;\n        this.editor.signals.startPlayer.add(function () {\n            scope.historyDisabled = true;\n        });\n        this.editor.signals.stopPlayer.add(function () {\n            scope.historyDisabled = false;\n        });\n    };\n    History.prototype = {\n        execute: function (cmd, optionalName) {\n            var lastCmd = this.undos[this.undos.length - 1];\n            var timeDifference = new Date().getTime() - this.lastCmdTime.getTime();\n            var isUpdatableCmd = lastCmd && lastCmd.updatable && cmd.updatable && lastCmd.object === cmd.object && lastCmd.type === cmd.type && lastCmd.script === cmd.script && lastCmd.attributeName === cmd.attributeName;\n            if (isUpdatableCmd && cmd.type === 'SetScriptValueCommand') {\n                lastCmd.update(cmd);\n                cmd = lastCmd;\n            } else if (isUpdatableCmd && timeDifference < 500) {\n                lastCmd.update(cmd);\n                cmd = lastCmd;\n            } else {\n                this.undos.push(cmd);\n                cmd.id = ++this.idCounter;\n            }\n            cmd.name = optionalName !== undefined ? optionalName : cmd.name;\n            cmd.execute();\n            cmd.inMemory = true;\n            if (this.config.getKey('settings/history')) {\n                cmd.json = cmd.toJSON();\n            }\n            this.lastCmdTime = new Date();\n            this.redos = [];\n            this.editor.signals.historyChanged.dispatch(cmd);\n        },\n        undo: function () {\n            if (this.historyDisabled) {\n                alert('Undo/Redo disabled while scene is playing.');\n                return;\n            }\n            var cmd = undefined;\n            if (this.undos.length > 0) {\n                cmd = this.undos.pop();\n                if (cmd.inMemory === false) {\n                    cmd.fromJSON(cmd.json);\n                }\n            }\n            if (cmd !== undefined) {\n                cmd.undo();\n                this.redos.push(cmd);\n                this.editor.signals.historyChanged.dispatch(cmd);\n            }\n            return cmd;\n        },\n        redo: function () {\n            if (this.historyDisabled) {\n                alert('Undo/Redo disabled while scene is playing.');\n                return;\n            }\n            var cmd = undefined;\n            if (this.redos.length > 0) {\n                cmd = this.redos.pop();\n                if (cmd.inMemory === false) {\n                    cmd.fromJSON(cmd.json);\n                }\n            }\n            if (cmd !== undefined) {\n                cmd.execute();\n                this.undos.push(cmd);\n                this.editor.signals.historyChanged.dispatch(cmd);\n            }\n            return cmd;\n        },\n        toJSON: function () {\n            var history = {};\n            history.undos = [];\n            history.redos = [];\n            if (!this.config.getKey('settings/history')) {\n                return history;\n            }\n            for (var i = 0; i < this.undos.length; i++) {\n                if (this.undos[i].hasOwnProperty('json')) {\n                    history.undos.push(this.undos[i].json);\n                }\n            }\n            for (var i = 0; i < this.redos.length; i++) {\n                if (this.redos[i].hasOwnProperty('json')) {\n                    history.redos.push(this.redos[i].json);\n                }\n            }\n            return history;\n        },\n        fromJSON: function (json) {\n            if (json === undefined)\n                return;\n            for (var i = 0; i < json.undos.length; i++) {\n                var cmdJSON = json.undos[i];\n                var cmd = new Commands[cmdJSON.type](this.editor);\n                cmd.json = cmdJSON;\n                cmd.id = cmdJSON.id;\n                cmd.name = cmdJSON.name;\n                this.undos.push(cmd);\n                this.idCounter = cmdJSON.id > this.idCounter ? cmdJSON.id : this.idCounter;\n            }\n            for (var i = 0; i < json.redos.length; i++) {\n                var cmdJSON = json.redos[i];\n                var cmd = new Commands[cmdJSON.type](this.editor);\n                cmd.json = cmdJSON;\n                cmd.id = cmdJSON.id;\n                cmd.name = cmdJSON.name;\n                this.redos.push(cmd);\n                this.idCounter = cmdJSON.id > this.idCounter ? cmdJSON.id : this.idCounter;\n            }\n            this.editor.signals.historyChanged.dispatch(this.undos[this.undos.length - 1]);\n        },\n        clear: function () {\n            this.undos = [];\n            this.redos = [];\n            this.idCounter = 0;\n            this.editor.signals.historyChanged.dispatch();\n        },\n        goToState: function (id) {\n            if (this.historyDisabled) {\n                alert('Undo/Redo disabled while scene is playing.');\n                return;\n            }\n            this.editor.signals.sceneGraphChanged.active = false;\n            this.editor.signals.historyChanged.active = false;\n            var cmd = this.undos.length > 0 ? this.undos[this.undos.length - 1] : undefined;\n            if (cmd === undefined || id > cmd.id) {\n                cmd = this.redo();\n                while (cmd !== undefined && id > cmd.id) {\n                    cmd = this.redo();\n                }\n            } else {\n                while (true) {\n                    cmd = this.undos[this.undos.length - 1];\n                    if (cmd === undefined || id === cmd.id)\n                        break;\n                    this.undo();\n                }\n            }\n            this.editor.signals.sceneGraphChanged.active = true;\n            this.editor.signals.historyChanged.active = true;\n            this.editor.signals.sceneGraphChanged.dispatch();\n            this.editor.signals.historyChanged.dispatch(cmd);\n        },\n        enableSerialization: function (id) {\n            this.goToState(-1);\n            this.editor.signals.sceneGraphChanged.active = false;\n            this.editor.signals.historyChanged.active = false;\n            var cmd = this.redo();\n            while (cmd !== undefined) {\n                if (!cmd.hasOwnProperty('json')) {\n                    cmd.json = cmd.toJSON();\n                }\n                cmd = this.redo();\n            }\n            this.editor.signals.sceneGraphChanged.active = true;\n            this.editor.signals.historyChanged.active = true;\n            this.goToState(id);\n        }\n    };\n    return History;\n});"]}