{"version":3,"sources":["sideitems/geometry/ExtrudeGeometry.js"],"names":["define","THREE","mrdoobui","SetGeometryCommand","editor","object","strings","container","UIRow","parameters","geometry","options","curveSegments","undefined","steps","depth","bevelThickness","bevelSize","bevelOffset","bevelSegments","curveSegmentsRow","UIInteger","onChange","update","setRange","Infinity","add","UIText","getKey","setWidth","stepsRow","depthRow","UINumber","enabledRow","enabled","UICheckbox","bevelEnabled","thicknessRow","thickness","sizeRow","size","offsetRow","offset","segmentsRow","segments","button","UIButton","onClick","execute","ShapeBufferGeometry","shapes","setMarginLeft","ExtrudeBufferGeometry","getValue"],"mappings":"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","file":"../../../sideitems/geometry/ExtrudeGeometry.js","sourcesContent":["define([\n    'skylark-threejs',\n    'skylark-mrdoobui',\n    '../../commands/SetGeometryCommand'\n], function (THREE, mrdoobui, SetGeometryCommand) {\n    'use strict';\n    var SidebarGeometryExtrudeGeometry = function (editor, object) {\n        var strings = editor.strings;\n        var container = new mrdoobui.UIRow();\n        var geometry = object.geometry;\n        var parameters = geometry.parameters;\n        var options = parameters.options;\n        options.curveSegments = options.curveSegments != undefined ? options.curveSegments : 12;\n        options.steps = options.steps != undefined ? options.steps : 1;\n        options.depth = options.depth != undefined ? options.depth : 100;\n        options.bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n        options.bevelSize = options.bevelSize !== undefined ? options.bevelSize : 4;\n        options.bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n        options.bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n        var curveSegmentsRow = new mrdoobui.UIRow();\n        var curveSegments = new mrdoobui.UIInteger(options.curveSegments).onChange(update).setRange(1, Infinity);\n        curveSegmentsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/curveSegments')).setWidth('90px'));\n        curveSegmentsRow.add(curveSegments);\n        container.add(curveSegmentsRow);\n        var stepsRow = new mrdoobui.UIRow();\n        var steps = new mrdoobui.UIInteger(options.steps).onChange(update).setRange(1, Infinity);\n        stepsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/steps')).setWidth('90px'));\n        stepsRow.add(steps);\n        container.add(stepsRow);\n        var depthRow = new mrdoobui.UIRow();\n        var depth = new mrdoobui.UINumber(options.depth).onChange(update).setRange(1, Infinity);\n        depthRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/depth')).setWidth('90px'));\n        depthRow.add(depth);\n        container.add(depthRow);\n        var enabledRow = new mrdoobui.UIRow();\n        var enabled = new mrdoobui.UICheckbox(options.bevelEnabled).onChange(update);\n        enabledRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/bevelEnabled')).setWidth('90px'));\n        enabledRow.add(enabled);\n        container.add(enabledRow);\n        if (options.bevelEnabled === true) {\n            var thicknessRow = new mrdoobui.UIRow();\n            var thickness = new mrdoobui.UINumber(options.bevelThickness).onChange(update);\n            thicknessRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/bevelThickness')).setWidth('90px'));\n            thicknessRow.add(thickness);\n            container.add(thicknessRow);\n            var sizeRow = new mrdoobui.UIRow();\n            var size = new mrdoobui.UINumber(options.bevelSize).onChange(update);\n            sizeRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/bevelSize')).setWidth('90px'));\n            sizeRow.add(size);\n            container.add(sizeRow);\n            var offsetRow = new mrdoobui.UIRow();\n            var offset = new mrdoobui.UINumber(options.bevelOffset).onChange(update);\n            offsetRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/bevelOffset')).setWidth('90px'));\n            offsetRow.add(offset);\n            container.add(offsetRow);\n            var segmentsRow = new mrdoobui.UIRow();\n            var segments = new mrdoobui.UIInteger(options.bevelSegments).onChange(update).setRange(0, Infinity);\n            segmentsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/geometry/extrude_geometry/bevelSegments')).setWidth('90px'));\n            segmentsRow.add(segments);\n            container.add(segmentsRow);\n        }\n        var button = new mrdoobui.UIButton(strings.getKey('sidebar/geometry/extrude_geometry/shape')).onClick(toShape).setWidth('90px').setMarginLeft('90px');\n        container.add(button);\n        function update() {\n            editor.execute(new SetGeometryCommand(editor, object, new THREE.ExtrudeBufferGeometry(parameters.shapes, {\n                curveSegments: curveSegments.getValue(),\n                steps: steps.getValue(),\n                depth: depth.getValue(),\n                bevelEnabled: enabled.getValue(),\n                bevelThickness: thickness !== undefined ? thickness.getValue() : options.bevelThickness,\n                bevelSize: size !== undefined ? size.getValue() : options.bevelSize,\n                bevelOffset: offset !== undefined ? offset.getValue() : options.bevelOffset,\n                bevelSegments: segments !== undefined ? segments.getValue() : options.bevelSegments\n            })));\n        }\n        function toShape() {\n            editor.execute(new SetGeometryCommand(editor, object, new THREE.ShapeBufferGeometry(parameters.shapes, options.curveSegments)));\n        }\n        return container;\n    };\n    return SidebarGeometryExtrudeGeometry;\n});"]}