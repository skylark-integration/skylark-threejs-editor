{"version":3,"sources":["sideitems/Project.js"],"names":["define","THREE","mrdoobui","ThreeUI","SetMaterialCommand","SidebarProject","editor","config","signals","strings","currentRenderer","currentPmremGenerator","container","UISpan","projectsettings","UIPanel","setBorderTop","setPaddingTop","add","titleRow","UIRow","title","UIInput","getKey","setLeft","onChange","setKey","this","getValue","UIText","setWidth","editableRow","editable","UICheckbox","vrRow","vr","rendererPanel","headerRow","toUpperCase","antialiasRow","antialiasBoolean","UIBoolean","updateRenderer","shadowsRow","shadowsBoolean","shadowTypeRow","shadowTypeSelect","UISelect","setOptions","0","1","2","parseFloat","setValue","physicallyCorrectLightsRow","physicallyCorrectLightsBoolean","toneMappingRow","toneMappingSelect","3","4","5","toneMapping","toneMappingWhitePointRow","setDisplay","toneMappingExposureRow","toneMappingExposure","UINumber","setRange","updateTonemapping","toneMappingWhitePoint","createRenderer","antialias","shadows","shadowType","physicallyCorrectLights","parameters","dispose","WebGLRenderer","PMREMGenerator","compileCubemapShader","compileEquirectangularShader","shadowMap","enabled","type","rendererChanged","dispatch","rendererUpdated","materials","listbox","UIListbox","buttonsRow","setPadding","assignMaterial","UIButton","setLabel","setMargin","refreshMaterialBrowserUI","setItems","Object","values","onClick","selectedObject","selected","oldMaterial","material","undefined","getMaterialById","parseInt","removeMaterial","execute","addMaterial","objectSelected","object","index","indexOf","selectIndex","materialAdded","materialChanged","materialRemoved"],"mappings":"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","file":"../../sideitems/Project.js","sourcesContent":["define([\n    'skylark-threejs',\n    'skylark-mrdoobui',\n    '../ThreeUI',\n    '../commands/SetMaterialCommand'\n], function (THREE, mrdoobui, ThreeUI, SetMaterialCommand) {\n    'use strict';\n    var SidebarProject = function (editor) {\n        var config = editor.config;\n        var signals = editor.signals;\n        var strings = editor.strings;\n        var currentRenderer = null;\n        var currentPmremGenerator = null;\n        var container = new mrdoobui.UISpan();\n        var projectsettings = new mrdoobui.UIPanel();\n        projectsettings.setBorderTop('0');\n        projectsettings.setPaddingTop('20px');\n        container.add(projectsettings);\n        var titleRow = new mrdoobui.UIRow();\n        var title = new mrdoobui.UIInput(config.getKey('project/title')).setLeft('100px').onChange(function () {\n            config.setKey('project/title', this.getValue());\n        });\n        titleRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/title')).setWidth('90px'));\n        titleRow.add(title);\n        projectsettings.add(titleRow);\n        var editableRow = new mrdoobui.UIRow();\n        var editable = new mrdoobui.UICheckbox(config.getKey('project/editable')).setLeft('100px').onChange(function () {\n            config.setKey('project/editable', this.getValue());\n        });\n        editableRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/editable')).setWidth('90px'));\n        editableRow.add(editable);\n        projectsettings.add(editableRow);\n        var vrRow = new mrdoobui.UIRow();\n        var vr = new mrdoobui.UICheckbox(config.getKey('project/vr')).setLeft('100px').onChange(function () {\n            config.setKey('project/vr', this.getValue());\n        });\n        vrRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/vr')).setWidth('90px'));\n        vrRow.add(vr);\n        projectsettings.add(vrRow);\n        var rendererPanel = new mrdoobui.UIPanel();\n        container.add(rendererPanel);\n        var headerRow = new mrdoobui.UIRow();\n        headerRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/renderer').toUpperCase()));\n        rendererPanel.add(headerRow);\n        var antialiasRow = new mrdoobui.UIRow();\n        var antialiasBoolean = new ThreeUI.UIBoolean(config.getKey('project/renderer/antialias')).onChange(function () {\n            config.setKey('project/renderer/antialias', this.getValue());\n            updateRenderer();\n        });\n        antialiasRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/antialias')).setWidth('90px'));\n        antialiasRow.add(antialiasBoolean);\n        rendererPanel.add(antialiasRow);\n        var shadowsRow = new mrdoobui.UIRow();\n        var shadowsBoolean = new ThreeUI.UIBoolean(config.getKey('project/renderer/shadows')).onChange(function () {\n            config.setKey('project/renderer/shadows', this.getValue());\n            updateRenderer();\n        });\n        shadowsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/shadows')).setWidth('90px'));\n        shadowsRow.add(shadowsBoolean);\n        rendererPanel.add(shadowsRow);\n        var shadowTypeRow = new mrdoobui.UIRow();\n        var shadowTypeSelect = new mrdoobui.UISelect().setOptions({\n            0: 'Basic',\n            1: 'PCF',\n            2: 'PCF (Soft)'\n        }).setWidth('150px').onChange(function () {\n            config.setKey('project/renderer/shadowType', parseFloat(this.getValue()));\n            updateRenderer();\n        });\n        shadowTypeSelect.setValue(config.getKey('project/renderer/shadowType'));\n        shadowTypeRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/shadowType')).setWidth('90px'));\n        shadowTypeRow.add(shadowTypeSelect);\n        rendererPanel.add(shadowTypeRow);\n        var physicallyCorrectLightsRow = new mrdoobui.UIRow();\n        var physicallyCorrectLightsBoolean = new ThreeUI.UIBoolean(config.getKey('project/renderer/physicallyCorrectLights')).onChange(function () {\n            config.setKey('project/renderer/physicallyCorrectLights', this.getValue());\n            updateRenderer();\n        });\n        physicallyCorrectLightsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/physicallyCorrectLights')).setWidth('90px'));\n        physicallyCorrectLightsRow.add(physicallyCorrectLightsBoolean);\n        rendererPanel.add(physicallyCorrectLightsRow);\n        var toneMappingRow = new mrdoobui.UIRow();\n        var toneMappingSelect = new mrdoobui.UISelect().setOptions({\n            0: 'None',\n            1: 'Linear',\n            2: 'Reinhard',\n            3: 'Uncharted2',\n            4: 'Cineon',\n            5: 'ACESFilmic'\n        }).setWidth('150px').onChange(function () {\n            var toneMapping = parseFloat(this.getValue());\n            config.setKey('project/renderer/toneMapping', toneMapping);\n            updateRenderer();\n            toneMappingWhitePointRow.setDisplay(toneMapping === 3 ? 'block' : 'none');\n        });\n        toneMappingSelect.setValue(config.getKey('project/renderer/toneMapping'));\n        toneMappingRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/toneMapping')).setWidth('90px'));\n        toneMappingRow.add(toneMappingSelect);\n        rendererPanel.add(toneMappingRow);\n        var toneMappingExposureRow = new mrdoobui.UIRow();\n        var toneMappingExposure = new mrdoobui.UINumber(config.getKey('project/renderer/toneMappingExposure')).setRange(0, 10).onChange(function () {\n            config.setKey('project/renderer/toneMappingExposure', this.getValue());\n            updateTonemapping();\n        });\n        toneMappingExposureRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/toneMappingExposure')).setWidth('90px'));\n        toneMappingExposureRow.add(toneMappingExposure);\n        rendererPanel.add(toneMappingExposureRow);\n        var toneMappingWhitePointRow = new mrdoobui.UIRow();\n        var toneMappingWhitePoint = new mrdoobui.UINumber(config.getKey('project/renderer/toneMappingWhitePoint')).setRange(0, 10).onChange(function () {\n            config.setKey('project/renderer/toneMappingWhitePoint', this.getValue());\n            updateTonemapping();\n        });\n        toneMappingWhitePointRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/toneMappingWhitePoint')).setWidth('90px'));\n        toneMappingWhitePointRow.add(toneMappingWhitePoint);\n        rendererPanel.add(toneMappingWhitePointRow);\n        toneMappingWhitePointRow.setDisplay(config.getKey('project/renderer/toneMapping') === 3 ? 'block' : 'none');\n        function updateRenderer() {\n            createRenderer(antialiasBoolean.getValue(), shadowsBoolean.getValue(), shadowTypeSelect.getValue(), toneMappingSelect.getValue(), physicallyCorrectLightsBoolean.getValue());\n        }\n        function createRenderer(antialias, shadows, shadowType, toneMapping, physicallyCorrectLights) {\n            var parameters = { antialias: antialias };\n            if (currentRenderer !== null) {\n                currentRenderer.dispose();\n                currentPmremGenerator.dispose();\n            }\n            currentRenderer = new THREE.WebGLRenderer(parameters);\n            currentPmremGenerator = new THREE.PMREMGenerator(currentRenderer);\n            currentPmremGenerator.compileCubemapShader();\n            currentPmremGenerator.compileEquirectangularShader();\n            if (shadows) {\n                currentRenderer.shadowMap.enabled = true;\n                currentRenderer.shadowMap.type = parseFloat(shadowType);\n            }\n            currentRenderer.toneMapping = parseFloat(toneMapping);\n            currentRenderer.physicallyCorrectLights = physicallyCorrectLights;\n            signals.rendererChanged.dispatch(currentRenderer, currentPmremGenerator);\n        }\n        function updateTonemapping() {\n            currentRenderer.toneMappingExposure = toneMappingExposure.getValue();\n            currentRenderer.toneMappingWhitePoint = toneMappingWhitePoint.getValue();\n            signals.rendererUpdated.dispatch();\n        }\n        createRenderer(config.getKey('project/renderer/antialias'), config.getKey('project/renderer/shadows'), config.getKey('project/renderer/shadowType'), config.getKey('project/renderer/toneMapping'), config.getKey('project/renderer/physicallyCorrectLights'));\n        var materials = new mrdoobui.UIPanel();\n        var headerRow = new mrdoobui.UIRow();\n        headerRow.add(new mrdoobui.UIText(strings.getKey('sidebar/project/materials').toUpperCase()));\n        materials.add(headerRow);\n        var listbox = new mrdoobui.UIListbox();\n        materials.add(listbox);\n        var buttonsRow = new mrdoobui.UIRow();\n        buttonsRow.setPadding('10px 0px');\n        materials.add(buttonsRow);\n        var assignMaterial = new mrdoobui.UIButton().setLabel(strings.getKey('sidebar/project/Assign')).setMargin('0px 5px');\n        assignMaterial.onClick(function () {\n            var selectedObject = editor.selected;\n            if (selectedObject !== null) {\n                var oldMaterial = selectedObject.material;\n                if (oldMaterial !== undefined) {\n                    var material = editor.getMaterialById(parseInt(listbox.getValue()));\n                    if (material !== undefined) {\n                        editor.removeMaterial(oldMaterial);\n                        editor.execute(new SetMaterialCommand(editor, selectedObject, material));\n                        editor.addMaterial(material);\n                    }\n                }\n            }\n        });\n        buttonsRow.add(assignMaterial);\n        container.add(materials);\n        signals.objectSelected.add(function (object) {\n            if (object !== null) {\n                var index = Object.values(editor.materials).indexOf(object.material);\n                listbox.selectIndex(index);\n            }\n        });\n        signals.materialAdded.add(refreshMaterialBrowserUI);\n        signals.materialChanged.add(refreshMaterialBrowserUI);\n        signals.materialRemoved.add(refreshMaterialBrowserUI);\n        function refreshMaterialBrowserUI() {\n            listbox.setItems(Object.values(editor.materials));\n        }\n        return container;\n    };\n    return { SidebarProject };\n});"]}