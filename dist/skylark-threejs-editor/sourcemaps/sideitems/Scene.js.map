{"version":3,"sources":["sideitems/Scene.js"],"names":["define","mrdoobui","ThreeUI","SidebarScene","editor","signals","strings","container","UIPanel","buildOption","object","draggable","option","document","createElement","innerHTML","buildHTML","value","id","escapeHTML","html","replace","uuid","type","name","isMesh","geometry","material","Array","isArray","array","i","length","push","join","getMaterialName","undefined","scripts","setBorderTop","setPaddingTop","ignoreObjectSelectedSignal","outliner","UIOutliner","onBackgroundChanged","sceneBackgroundChanged","dispatch","backgroundType","getValue","backgroundColor","getHexValue","backgroundTexture","backgroundCubeTexture","backgroundEquirectTexture","onTextureChanged","texture","encoding","isHDRTexture","THREE","RGBEEncoding","sRGBEncoding","isCubeTexture","format","RGBAFormat","minFilter","NearestFilter","magFilter","generateMipmaps","setId","onChange","selectById","parseInt","onDblClick","focusById","add","UIBreak","backgroundRow","UIRow","UISelect","setOptions","None","Color","Texture","CubeTexture","Equirect","setWidth","refreshBackgroundUI","setValue","UIText","getKey","colorRow","setMarginLeft","UIColor","textureRow","setDisplay","UITexture","cubeTextureRow","UICubeTexture","equirectRow","onFogChanged","sceneFogChanged","fogType","fogColor","fogNear","fogFar","fogDensity","fogTypeRow","Fog","FogExp2","refreshFogUI","fogPropertiesRow","UINumber","setRange","Infinity","setStep","setPrecision","refreshUI","camera","scene","options","addObjects","objects","pad","l","style","paddingLeft","children","selected","background","isColor","setHexValue","getHex","isTexture","isPmremTexture","fog","color","isFog","near","far","isFogExp2","density","editorCleared","sceneGraphChanged","objectChanged","objectSelected"],"mappings":"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","file":"../../sideitems/Scene.js","sourcesContent":["define([\n    'skylark-mrdoobui',\n    './ThreeUI'\n], function (mrdoobui, ThreeUI) {\n    'use strict';\n    var SidebarScene = function (editor) {\n        var signals = editor.signals;\n        var strings = editor.strings;\n        var container = new mrdoobui.UIPanel();\n        container.setBorderTop('0');\n        container.setPaddingTop('20px');\n        function buildOption(object, draggable) {\n            var option = document.createElement('div');\n            option.draggable = draggable;\n            option.innerHTML = buildHTML(object);\n            option.value = object.id;\n            return option;\n        }\n        function getMaterialName(material) {\n            if (Array.isArray(material)) {\n                var array = [];\n                for (var i = 0; i < material.length; i++) {\n                    array.push(material[i].name);\n                }\n                return array.join(',');\n            }\n            return material.name;\n        }\n        function escapeHTML(html) {\n            return html.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n        function buildHTML(object) {\n            var html = '<span class=\"type ' + object.type + '\"></span> ' + escapeHTML(object.name);\n            if (object.isMesh) {\n                var geometry = object.geometry;\n                var material = object.material;\n                html += ' <span class=\"type ' + geometry.type + '\"></span> ' + escapeHTML(geometry.name);\n                html += ' <span class=\"type ' + material.type + '\"></span> ' + escapeHTML(getMaterialName(material));\n            }\n            html += getScript(object.uuid);\n            return html;\n        }\n        function getScript(uuid) {\n            if (editor.scripts[uuid] !== undefined) {\n                return ' <span class=\"type Script\"></span>';\n            }\n            return '';\n        }\n        var ignoreObjectSelectedSignal = false;\n        var outliner = new ThreeUI.UIOutliner(editor);\n        outliner.setId('outliner');\n        outliner.onChange(function () {\n            ignoreObjectSelectedSignal = true;\n            editor.selectById(parseInt(outliner.getValue()));\n            ignoreObjectSelectedSignal = false;\n        });\n        outliner.onDblClick(function () {\n            editor.focusById(parseInt(outliner.getValue()));\n        });\n        container.add(outliner);\n        container.add(new mrdoobui.UIBreak());\n        function onBackgroundChanged() {\n            signals.sceneBackgroundChanged.dispatch(backgroundType.getValue(), backgroundColor.getHexValue(), backgroundTexture.getValue(), backgroundCubeTexture.getValue(), backgroundEquirectTexture.getValue());\n        }\n        function onTextureChanged(texture) {\n            texture.encoding = texture.isHDRTexture ? THREE.RGBEEncoding : THREE.sRGBEncoding;\n            if (texture.isCubeTexture && texture.isHDRTexture) {\n                texture.format = THREE.RGBAFormat;\n                texture.minFilter = THREE.NearestFilter;\n                texture.magFilter = THREE.NearestFilter;\n                texture.generateMipmaps = false;\n            }\n            onBackgroundChanged();\n        }\n        var backgroundRow = new mrdoobui.UIRow();\n        var backgroundType = new mrdoobui.UISelect().setOptions({\n            'None': 'None',\n            'Color': 'Color',\n            'Texture': 'Texture',\n            'CubeTexture': 'CubeTexture',\n            'Equirect': 'Equirect (HDR)'\n        }).setWidth('150px');\n        backgroundType.onChange(function () {\n            onBackgroundChanged();\n            refreshBackgroundUI();\n        });\n        backgroundType.setValue('Color');\n        backgroundRow.add(new mrdoobui.UIText(strings.getKey('sidebar/scene/background')).setWidth('90px'));\n        backgroundRow.add(backgroundType);\n        container.add(backgroundRow);\n        var colorRow = new mrdoobui.UIRow();\n        colorRow.setMarginLeft('90px');\n        var backgroundColor = new mrdoobui.UIColor().setValue('#aaaaaa').onChange(onBackgroundChanged);\n        colorRow.add(backgroundColor);\n        container.add(colorRow);\n        var textureRow = new mrdoobui.UIRow();\n        textureRow.setDisplay('none');\n        textureRow.setMarginLeft('90px');\n        var backgroundTexture = new ThreeUI.UITexture().onChange(onTextureChanged);\n        textureRow.add(backgroundTexture);\n        container.add(textureRow);\n        var cubeTextureRow = new mrdoobui.UIRow();\n        cubeTextureRow.setDisplay('none');\n        cubeTextureRow.setMarginLeft('90px');\n        var backgroundCubeTexture = new ThreeUI.UICubeTexture().onChange(onTextureChanged);\n        cubeTextureRow.add(backgroundCubeTexture);\n        container.add(cubeTextureRow);\n        var equirectRow = new mrdoobui.UIRow();\n        equirectRow.setDisplay('none');\n        equirectRow.setMarginLeft('90px');\n        var backgroundEquirectTexture = new ThreeUI.UITexture().onChange(onTextureChanged);\n        equirectRow.add(backgroundEquirectTexture);\n        container.add(equirectRow);\n        function refreshBackgroundUI() {\n            var type = backgroundType.getValue();\n            colorRow.setDisplay(type === 'Color' ? '' : 'none');\n            textureRow.setDisplay(type === 'Texture' ? '' : 'none');\n            cubeTextureRow.setDisplay(type === 'CubeTexture' ? '' : 'none');\n            equirectRow.setDisplay(type === 'Equirect' ? '' : 'none');\n        }\n        function onFogChanged() {\n            signals.sceneFogChanged.dispatch(fogType.getValue(), fogColor.getHexValue(), fogNear.getValue(), fogFar.getValue(), fogDensity.getValue());\n        }\n        var fogTypeRow = new mrdoobui.UIRow();\n        var fogType = new mrdoobui.UISelect().setOptions({\n            'None': 'None',\n            'Fog': 'Linear',\n            'FogExp2': 'Exponential'\n        }).setWidth('150px');\n        fogType.onChange(function () {\n            onFogChanged();\n            refreshFogUI();\n        });\n        fogTypeRow.add(new mrdoobui.UIText(strings.getKey('sidebar/scene/fog')).setWidth('90px'));\n        fogTypeRow.add(fogType);\n        container.add(fogTypeRow);\n        var fogPropertiesRow = new mrdoobui.UIRow();\n        fogPropertiesRow.setDisplay('none');\n        fogPropertiesRow.setMarginLeft('90px');\n        container.add(fogPropertiesRow);\n        var fogColor = new mrdoobui.UIColor().setValue('#aaaaaa');\n        fogColor.onChange(onFogChanged);\n        fogPropertiesRow.add(fogColor);\n        var fogNear = new mrdoobui.UINumber(0.1).setWidth('40px').setRange(0, Infinity).onChange(onFogChanged);\n        fogPropertiesRow.add(fogNear);\n        var fogFar = new mrdoobui.UINumber(50).setWidth('40px').setRange(0, Infinity).onChange(onFogChanged);\n        fogPropertiesRow.add(fogFar);\n        var fogDensity = new mrdoobui.UINumber(0.05).setWidth('40px').setRange(0, 0.1).setStep(0.001).setPrecision(3).onChange(onFogChanged);\n        fogPropertiesRow.add(fogDensity);\n        function refreshUI() {\n            var camera = editor.camera;\n            var scene = editor.scene;\n            var options = [];\n            options.push(buildOption(camera, false));\n            options.push(buildOption(scene, false));\n            (function addObjects(objects, pad) {\n                for (var i = 0, l = objects.length; i < l; i++) {\n                    var object = objects[i];\n                    var option = buildOption(object, true);\n                    option.style.paddingLeft = pad * 10 + 'px';\n                    options.push(option);\n                    addObjects(object.children, pad + 1);\n                }\n            }(scene.children, 1));\n            outliner.setOptions(options);\n            if (editor.selected !== null) {\n                outliner.setValue(editor.selected.id);\n            }\n            if (scene.background) {\n                if (scene.background.isColor) {\n                    backgroundType.setValue('Color');\n                    backgroundColor.setHexValue(scene.background.getHex());\n                    backgroundTexture.setValue(null);\n                    backgroundCubeTexture.setValue(null);\n                    backgroundEquirectTexture.setValue(null);\n                } else if (scene.background.isTexture && !scene.background.isPmremTexture) {\n                    backgroundType.setValue('Texture');\n                    backgroundTexture.setValue(scene.background);\n                    backgroundCubeTexture.setValue(null);\n                    backgroundEquirectTexture.setValue(null);\n                } else if (scene.background.isCubeTexture) {\n                    backgroundType.setValue('CubeTexture');\n                    backgroundCubeTexture.setValue(scene.background);\n                    backgroundTexture.setValue(null);\n                    backgroundEquirectTexture.setValue(null);\n                }\n            } else {\n                backgroundType.setValue('None');\n                backgroundTexture.setValue(null);\n            }\n            if (scene.fog) {\n                fogColor.setHexValue(scene.fog.color.getHex());\n                if (scene.fog.isFog) {\n                    fogType.setValue('Fog');\n                    fogNear.setValue(scene.fog.near);\n                    fogFar.setValue(scene.fog.far);\n                } else if (scene.fog.isFogExp2) {\n                    fogType.setValue('FogExp2');\n                    fogDensity.setValue(scene.fog.density);\n                }\n            } else {\n                fogType.setValue('None');\n            }\n            refreshBackgroundUI();\n            refreshFogUI();\n        }\n        function refreshFogUI() {\n            var type = fogType.getValue();\n            fogPropertiesRow.setDisplay(type === 'None' ? 'none' : '');\n            fogNear.setDisplay(type === 'Fog' ? '' : 'none');\n            fogFar.setDisplay(type === 'Fog' ? '' : 'none');\n            fogDensity.setDisplay(type === 'FogExp2' ? '' : 'none');\n        }\n        refreshUI();\n        signals.editorCleared.add(refreshUI);\n        signals.sceneGraphChanged.add(refreshUI);\n        signals.objectChanged.add(function (object) {\n            var options = outliner.options;\n            for (var i = 0; i < options.length; i++) {\n                var option = options[i];\n                if (option.value === object.id) {\n                    option.innerHTML = buildHTML(object);\n                    return;\n                }\n            }\n        });\n        signals.objectSelected.add(function (object) {\n            if (ignoreObjectSelectedSignal === true)\n                return;\n            outliner.setValue(object !== null ? object.id : null);\n        });\n        return container;\n    };\n    return { SidebarScene };\n});"]}