{"version":3,"sources":["sideitems/Material.js"],"names":["define","THREE","mrdoobui","ThreeUI","c","d","e","f","g","materialClasses","LineBasicMaterial","LineDashedMaterial","MeshBasicMaterial","MeshDepthMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshMatcapMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","RawShaderMaterial","ShaderMaterial","ShadowMaterial","SpriteMaterial","SidebarMaterial","editor","currentObject","strings","signals","currentMaterialSlot","epsilon","Number","EPSILON","container","UIPanel","setBorderTop","setDisplay","setPaddingTop","materialSlotRow","UIRow","add","UIText","setWidth","materialSlotSelect","UISelect","setFontSize","onChange","update","setOptions","0","setValue","materialClassRow","materialClass","getKey","materialUUIDRow","materialUUID","UIInput","setDisabled","materialUUIDRenew","UIButton","setMarginLeft","onClick","MathUtils","generateUUID","materialNameRow","materialName","execute","SetMaterialValueCommand","selected","getValue","materialProgramRow","materialProgramInfo","editScript","dispatch","materialProgramVertex","materialProgramFragment","materialColorRow","materialColor","UIColor","materialRoughnessRow","materialRoughness","UINumber","setRange","materialMetalnessRow","materialMetalness","materialEmissiveRow","materialEmissive","setHexValue","materialSpecularRow","materialSpecular","materialShininessRow","materialShininess","materialClearcoatRow","materialClearcoat","materialClearcoatRoughnessRow","materialClearcoatRoughness","materialVertexColorsRow","materialVertexColors","UICheckbox","materialVertexTangentsRow","materialVertexTangents","materialDepthPackingRow","materialDepthPacking","[object Object]","BasicDepthPacking","RGBADepthPacking","materialSkinningRow","materialSkinning","materialMapRow","materialMapEnabled","materialMap","UITexture","updateMaterial","materialMatcapMapRow","materialMatcapMapEnabled","materialMatcapMap","materialAlphaMapRow","materialAlphaMapEnabled","materialAlphaMap","materialBumpMapRow","materialBumpMapEnabled","materialBumpMap","materialBumpScale","materialNormalMapRow","materialNormalMapEnabled","materialNormalMap","materialNormalScaleX","materialNormalScaleY","materialClearcoatNormalMapRow","materialClearcoatNormalMapEnabled","materialClearcoatNormalMap","materialClearcoatNormalScaleX","materialClearcoatNormalScaleY","materialDisplacementMapRow","materialDisplacementMapEnabled","materialDisplacementMap","materialDisplacementScale","materialRoughnessMapRow","materialRoughnessMapEnabled","materialRoughnessMap","materialMetalnessMapRow","materialMetalnessMapEnabled","materialMetalnessMap","materialSpecularMapRow","materialSpecularMapEnabled","materialSpecularMap","materialEnvMapRow","materialEnvMapEnabled","materialEnvMap","SphericalReflectionMapping","materialReflectivity","materialLightMapRow","materialLightMapEnabled","materialLightMap","materialAOMapRow","materialAOMapEnabled","materialAOMap","materialAOScale","materialEmissiveMapRow","materialEmissiveMapEnabled","materialEmissiveMap","materialGradientMapRow","materialGradientMapEnabled","materialGradientMap","materialSideRow","materialSide","1","2","materialShadingRow","materialShading","setLeft","materialBlendingRow","materialBlending","3","4","5","materialOpacityRow","materialOpacity","materialTransparentRow","materialTransparent","materialAlphaTestRow","materialAlphaTest","materialWireframeRow","materialWireframe","object","geometry","previousSelectedSlot","parseInt","refreshUI","material","getObjectMaterial","textureWarning","objectHasUvs","isSprite","isGeometry","faceVertexUvs","length","isBufferGeometry","undefined","attributes","uv","uuid","type","vertexShader","vertexShaderVariables","Array","isArray","removeMaterial","SetMaterialCommand","addMaterial","color","getHex","getHexValue","SetMaterialColorCommand","roughness","Math","abs","metalness","emissive","specular","shininess","clearcoat","clearcoatRoughness","vertexColors","depthPacking","skinning","map","mapEnabled","SetMaterialMapCommand","matcap","alphaMap","bumpMap","bumpMapEnabled","bumpScale","normalMap","normalMapEnabled","normalScale","x","y","value","SetMaterialVectorCommand","clearcoatNormalMap","clearcoatNormalMapEnabled","clearcoatNormalScale","displacementMap","displacementMapEnabled","displacementScale","roughnessMap","roughnessMapEnabled","metalnessMap","metalnessMapEnabled","specularMap","specularMapEnabled","envMap","reflectivity","lightMap","lightMapEnabled","aoMap","aoMapEnabled","aoMapIntensity","emissiveMap","emissiveMapEnabled","gradientMap","side","flatShading","blending","opacity","transparent","alphaTest","wireframe","console","warn","texture","encoding","sRGBEncoding","needsUpdate","resetTextureSelectors","slotOptions","max","min","i","String","name","getHexString","properties","vertexTangents","property","setRowVisibility","objectSelected","hasMaterial","objectChanged","materialChanged","join"],"mappings":";;;;;;;AAAAA,QACI,kBACA,mBACA,YACA,iCACA,sCACA,oCACA,sCACA,wCACD,SAAUC,EAAOC,EAAUC,EAASC,EAAGC,EAAGC,EAAGC,EAAGC,GAC/C,aACA,IAAIC,GACAC,kBAAqBT,EAAMS,kBAC3BC,mBAAsBV,EAAMU,mBAC5BC,kBAAqBX,EAAMW,kBAC3BC,kBAAqBZ,EAAMY,kBAC3BC,mBAAsBb,EAAMa,mBAC5BC,oBAAuBd,EAAMc,oBAC7BC,mBAAsBf,EAAMe,mBAC5BC,kBAAqBhB,EAAMgB,kBAC3BC,iBAAoBjB,EAAMiB,iBAC1BC,qBAAwBlB,EAAMkB,qBAC9BC,qBAAwBnB,EAAMmB,qBAC9BC,kBAAqBpB,EAAMoB,kBAC3BC,eAAkBrB,EAAMqB,eACxBC,eAAkBtB,EAAMsB,eACxBC,eAAkBvB,EAAMuB,gBAm3B5B,OAASC,gBAj3Ba,SAAUC,GAC5B,IAEIC,EAFAC,EAAUF,EAAOE,QACjBC,EAAUH,EAAOG,QAEjBC,EAAsB,EACtBC,EAAU,IAAOC,OAAOC,QACxBC,EAAY,IAAIhC,EAASiC,QAC7BD,EAAUE,aAAa,KACvBF,EAAUG,WAAW,QACrBH,EAAUI,cAAc,QACxB,IAAIC,EAAkB,IAAIrC,EAASsC,MACnCD,EAAgBE,IAAI,IAAIvC,EAASwC,OAAO,QAAQC,SAAS,SACzD,IAAIC,GAAqB,IAAI1C,EAAS2C,UAAWF,SAAS,SAASG,YAAY,QAAQC,SAASC,IAChGJ,EAAmBK,YAAaC,EAAG,KAAMC,SAAS,GAClDZ,EAAgBE,IAAIG,GACpBV,EAAUO,IAAIF,GACd,IAAIa,EAAmB,IAAIlD,EAASsC,MAChCa,GAAgB,IAAInD,EAAS2C,UAAWI,YACxCvC,kBAAqB,oBACrBC,mBAAsB,qBACtBC,kBAAqB,oBACrBC,kBAAqB,oBACrBC,mBAAsB,qBACtBC,oBAAuB,sBACvBC,mBAAsB,qBACtBC,kBAAqB,oBACrBC,iBAAoB,mBACpBC,qBAAwB,uBACxBC,qBAAwB,uBACxBC,kBAAqB,oBACrBC,eAAkB,iBAClBC,eAAkB,iBAClBC,eAAkB,mBACnBmB,SAAS,SAASG,YAAY,QAAQC,SAASC,IAClDI,EAAiBX,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,0BAA0BX,SAAS,SAC3FS,EAAiBX,IAAIY,GACrBnB,EAAUO,IAAIW,GACd,IAAIG,EAAkB,IAAIrD,EAASsC,MAC/BgB,GAAe,IAAItD,EAASuD,SAAUd,SAAS,SAASG,YAAY,QAAQY,aAAY,GACxFC,EAAoB,IAAIzD,EAAS0D,SAAShC,EAAQ0B,OAAO,yBAAyBO,cAAc,OAAOC,QAAQ,WAC/GN,EAAaL,SAASlD,EAAM8D,UAAUC,gBACtChB,OAEJO,EAAgBd,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,0BAA0BX,SAAS,SAC1FY,EAAgBd,IAAIe,GACpBD,EAAgBd,IAAIkB,GACpBzB,EAAUO,IAAIc,GACd,IAAIU,EAAkB,IAAI/D,EAASsC,MAC/B0B,GAAe,IAAIhE,EAASuD,SAAUd,SAAS,SAASG,YAAY,QAAQC,SAAS,WACrFrB,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQA,EAAO2C,SAAU,OAAQH,EAAaI,WAAYxC,MAEzGmC,EAAgBxB,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,0BAA0BX,SAAS,SAC1FsB,EAAgBxB,IAAIyB,GACpBhC,EAAUO,IAAIwB,GACd,IAAIM,EAAqB,IAAIrE,EAASsC,MACtC+B,EAAmB9B,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,6BAA6BX,SAAS,SAChG,IAAI6B,EAAsB,IAAItE,EAAS0D,SAAShC,EAAQ0B,OAAO,0BAC/DkB,EAAoBX,cAAc,OAClCW,EAAoBV,QAAQ,WACxBjC,EAAQ4C,WAAWC,SAAS/C,EAAe,iBAE/C4C,EAAmB9B,IAAI+B,GACvB,IAAIG,EAAwB,IAAIzE,EAAS0D,SAAShC,EAAQ0B,OAAO,4BACjEqB,EAAsBd,cAAc,OACpCc,EAAsBb,QAAQ,WAC1BjC,EAAQ4C,WAAWC,SAAS/C,EAAe,kBAE/C4C,EAAmB9B,IAAIkC,GACvB,IAAIC,EAA0B,IAAI1E,EAAS0D,SAAShC,EAAQ0B,OAAO,8BACnEsB,EAAwBf,cAAc,OACtCe,EAAwBd,QAAQ,WAC5BjC,EAAQ4C,WAAWC,SAAS/C,EAAe,oBAE/C4C,EAAmB9B,IAAImC,GACvB1C,EAAUO,IAAI8B,GACd,IAAIM,EAAmB,IAAI3E,EAASsC,MAChCsC,GAAgB,IAAI5E,EAAS6E,SAAUhC,SAASC,IACpD6B,EAAiBpC,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,2BAA2BX,SAAS,SAC5FkC,EAAiBpC,IAAIqC,GACrB5C,EAAUO,IAAIoC,GACd,IAAIG,EAAuB,IAAI9E,EAASsC,MACpCyC,EAAoB,IAAI/E,EAASgF,SAAS,IAAKvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IAC5FgC,EAAqBvC,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpGqC,EAAqBvC,IAAIwC,GACzB/C,EAAUO,IAAIuC,GACd,IAAII,EAAuB,IAAIlF,EAASsC,MACpC6C,EAAoB,IAAInF,EAASgF,SAAS,IAAKvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IAC5FoC,EAAqB3C,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpGyC,EAAqB3C,IAAI4C,GACzBnD,EAAUO,IAAI2C,GACd,IAAIE,EAAsB,IAAIpF,EAASsC,MACnC+C,GAAmB,IAAIrF,EAAS6E,SAAUS,YAAY,GAAGzC,SAASC,IACtEsC,EAAoB7C,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClG2C,EAAoB7C,IAAI8C,GACxBrD,EAAUO,IAAI6C,GACd,IAAIG,EAAsB,IAAIvF,EAASsC,MACnCkD,GAAmB,IAAIxF,EAAS6E,SAAUS,YAAY,SAASzC,SAASC,IAC5EyC,EAAoBhD,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClG8C,EAAoBhD,IAAIiD,GACxBxD,EAAUO,IAAIgD,GACd,IAAIE,EAAuB,IAAIzF,EAASsC,MACpCoD,EAAoB,IAAI1F,EAASgF,SAAS,IAAInC,SAASC,IAC3D2C,EAAqBlD,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpGgD,EAAqBlD,IAAImD,GACzB1D,EAAUO,IAAIkD,GACd,IAAIE,EAAuB,IAAI3F,EAASsC,MACpCsD,EAAoB,IAAI5F,EAASgF,SAAS,GAAGvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IAC1F6C,EAAqBpD,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpGkD,EAAqBpD,IAAIqD,GACzB5D,EAAUO,IAAIoD,GACd,IAAIE,EAAgC,IAAI7F,EAASsC,MAC7CwD,EAA6B,IAAI9F,EAASgF,SAAS,GAAGvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IACnG+C,EAA8BtD,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,wCAAwCX,SAAS,SACtHoD,EAA8BtD,IAAIuD,GAClC9D,EAAUO,IAAIsD,GACd,IAAIE,EAA0B,IAAI/F,EAASsC,MACvC0D,EAAuB,IAAIhG,EAASiG,YAAW,GAAOpD,SAASC,IACnEiD,EAAwBxD,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,kCAAkCX,SAAS,SAC1GsD,EAAwBxD,IAAIyD,GAC5BhE,EAAUO,IAAIwD,GACd,IAAIG,EAA4B,IAAIlG,EAASsC,MACzC6D,EAAyB,IAAInG,EAASiG,YAAW,GAAOpD,SAASC,IACrEoD,EAA0B3D,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,oCAAoCX,SAAS,SAC9GyD,EAA0B3D,IAAI4D,GAC9BnE,EAAUO,IAAI2D,GACd,IAAIE,EAA0B,IAAIpG,EAASsC,MACvC+D,GAAuB,IAAIrG,EAAS2C,UAAWI,YAC/CuD,CAACvG,EAAMwG,mBAAoB,oBAC3BD,CAACvG,EAAMyG,kBAAmB,qBAE9BH,EAAqBxD,SAASC,IAC9BsD,EAAwB7D,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,kCAAkCX,SAAS,SAC1G2D,EAAwB7D,IAAI8D,GAC5BrE,EAAUO,IAAI6D,GACd,IAAIK,EAAsB,IAAIzG,EAASsC,MACnCoE,EAAmB,IAAI1G,EAASiG,YAAW,GAAOpD,SAASC,IAC/D2D,EAAoBlE,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClGgE,EAAoBlE,IAAImE,GACxB1E,EAAUO,IAAIkE,GACd,IAAIE,EAAiB,IAAI3G,EAASsC,MAC9BsE,EAAqB,IAAI5G,EAASiG,YAAW,GAAOpD,SAASC,IAC7D+D,GAAc,IAAI5G,EAAQ6G,WAAYjE,SAASkE,IACnDJ,EAAepE,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,yBAAyBX,SAAS,SACxFkE,EAAepE,IAAIqE,GACnBD,EAAepE,IAAIsE,GACnB7E,EAAUO,IAAIoE,GACd,IAAIK,EAAuB,IAAIhH,EAASsC,MACpC2E,EAA2B,IAAIjH,EAASiG,YAAW,GAAOpD,SAASC,IACnEoE,GAAoB,IAAIjH,EAAQ6G,WAAYjE,SAASC,IACzDkE,EAAqBzE,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,4BAA4BX,SAAS,SACjGuE,EAAqBzE,IAAI0E,GACzBD,EAAqBzE,IAAI2E,GACzBlF,EAAUO,IAAIyE,GACd,IAAIG,GAAsB,IAAInH,EAASsC,MACnC8E,GAA0B,IAAIpH,EAASiG,YAAW,GAAOpD,SAASC,IAClEuE,IAAmB,IAAIpH,EAAQ6G,WAAYjE,SAASC,IACxDqE,GAAoB5E,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClG0E,GAAoB5E,IAAI6E,IACxBD,GAAoB5E,IAAI8E,IACxBrF,EAAUO,IAAI4E,IACd,IAAIG,GAAqB,IAAItH,EAASsC,MAClCiF,GAAyB,IAAIvH,EAASiG,YAAW,GAAOpD,SAASC,IACjE0E,IAAkB,IAAIvH,EAAQ6G,WAAYjE,SAASC,IACnD2E,GAAoB,IAAIzH,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IAC3EwE,GAAmB/E,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,6BAA6BX,SAAS,SAChG6E,GAAmB/E,IAAIgF,IACvBD,GAAmB/E,IAAIiF,IACvBF,GAAmB/E,IAAIkF,IACvBzF,EAAUO,IAAI+E,IACd,IAAII,GAAuB,IAAI1H,EAASsC,MACpCqF,GAA2B,IAAI3H,EAASiG,YAAW,GAAOpD,SAASC,IACnE8E,IAAoB,IAAI3H,EAAQ6G,WAAYjE,SAASC,IACrD+E,GAAuB,IAAI7H,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IAC1EgF,GAAuB,IAAI9H,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IAC9E4E,GAAqBnF,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpGiF,GAAqBnF,IAAIoF,IACzBD,GAAqBnF,IAAIqF,IACzBF,GAAqBnF,IAAIsF,IACzBH,GAAqBnF,IAAIuF,IACzB9F,EAAUO,IAAImF,IACd,IAAIK,GAAgC,IAAI/H,EAASsC,MAC7C0F,GAAoC,IAAIhI,EAASiG,YAAW,GAAOpD,SAASC,IAC5EmF,IAA6B,IAAIhI,EAAQ6G,WAAYjE,SAASC,IAC9DoF,GAAgC,IAAIlI,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IACnFqF,GAAgC,IAAInI,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IACvFiF,GAA8BxF,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,wCAAwCX,SAAS,SACtHsF,GAA8BxF,IAAIyF,IAClCD,GAA8BxF,IAAI0F,IAClCF,GAA8BxF,IAAI2F,IAClCH,GAA8BxF,IAAI4F,IAClCnG,EAAUO,IAAIwF,IACd,IAAIK,GAA6B,IAAIpI,EAASsC,MAC1C+F,GAAiC,IAAIrI,EAASiG,YAAW,GAAOpD,SAASC,IACzEwF,IAA0B,IAAIrI,EAAQ6G,WAAYjE,SAASC,IAC3DyF,GAA4B,IAAIvI,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IACnFsF,GAA2B7F,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,iCAAiCX,SAAS,SAC5G2F,GAA2B7F,IAAI8F,IAC/BD,GAA2B7F,IAAI+F,IAC/BF,GAA2B7F,IAAIgG,IAC/BvG,EAAUO,IAAI6F,IACd,IAAII,GAA0B,IAAIxI,EAASsC,MACvCmG,GAA8B,IAAIzI,EAASiG,YAAW,GAAOpD,SAASC,IACtE4F,IAAuB,IAAIzI,EAAQ6G,WAAYjE,SAASC,IAC5D0F,GAAwBjG,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SACtG+F,GAAwBjG,IAAIkG,IAC5BD,GAAwBjG,IAAImG,IAC5B1G,EAAUO,IAAIiG,IACd,IAAIG,GAA0B,IAAI3I,EAASsC,MACvCsG,GAA8B,IAAI5I,EAASiG,YAAW,GAAOpD,SAASC,IACtE+F,IAAuB,IAAI5I,EAAQ6G,WAAYjE,SAASC,IAC5D6F,GAAwBpG,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SACtGkG,GAAwBpG,IAAIqG,IAC5BD,GAAwBpG,IAAIsG,IAC5B7G,EAAUO,IAAIoG,IACd,IAAIG,GAAyB,IAAI9I,EAASsC,MACtCyG,GAA6B,IAAI/I,EAASiG,YAAW,GAAOpD,SAASC,IACrEkG,IAAsB,IAAI/I,EAAQ6G,WAAYjE,SAASC,IAC3DgG,GAAuBvG,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,iCAAiCX,SAAS,SACxGqG,GAAuBvG,IAAIwG,IAC3BD,GAAuBvG,IAAIyG,IAC3BhH,EAAUO,IAAIuG,IACd,IAAIG,GAAoB,IAAIjJ,EAASsC,MACjC4G,GAAwB,IAAIlJ,EAASiG,YAAW,GAAOpD,SAASC,IAChEqG,GAAiB,IAAIlJ,EAAQ6G,UAAU/G,EAAMqJ,4BAA4BvG,SAASkE,IAClFsC,GAAuB,IAAIrJ,EAASgF,SAAS,GAAGvC,SAAS,QAAQI,SAASC,IAC9EmG,GAAkB1G,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,4BAA4BX,SAAS,SAC9FwG,GAAkB1G,IAAI2G,IACtBD,GAAkB1G,IAAI4G,IACtBF,GAAkB1G,IAAI8G,IACtBrH,EAAUO,IAAI0G,IACd,IAAIK,GAAsB,IAAItJ,EAASsC,MACnCiH,GAA0B,IAAIvJ,EAASiG,YAAW,GAAOpD,SAASC,IAClE0G,IAAmB,IAAIvJ,EAAQ6G,WAAYjE,SAASC,IACxDwG,GAAoB/G,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClG6G,GAAoB/G,IAAIgH,IACxBD,GAAoB/G,IAAIiH,IACxBxH,EAAUO,IAAI+G,IACd,IAAIG,GAAmB,IAAIzJ,EAASsC,MAChCoH,GAAuB,IAAI1J,EAASiG,YAAW,GAAOpD,SAASC,IAC/D6G,IAAgB,IAAI1J,EAAQ6G,WAAYjE,SAASC,IACjD8G,GAAkB,IAAI5J,EAASgF,SAAS,GAAGC,SAAS,EAAG,GAAGxC,SAAS,QAAQI,SAASC,IACxF2G,GAAiBlH,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,2BAA2BX,SAAS,SAC5FgH,GAAiBlH,IAAImH,IACrBD,GAAiBlH,IAAIoH,IACrBF,GAAiBlH,IAAIqH,IACrB5H,EAAUO,IAAIkH,IACd,IAAII,GAAyB,IAAI7J,EAASsC,MACtCwH,GAA6B,IAAI9J,EAASiG,YAAW,GAAOpD,SAASC,IACrEiH,IAAsB,IAAI9J,EAAQ6G,WAAYjE,SAASkE,IAC3D8C,GAAuBtH,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,iCAAiCX,SAAS,SACxGoH,GAAuBtH,IAAIuH,IAC3BD,GAAuBtH,IAAIwH,IAC3B/H,EAAUO,IAAIsH,IACd,IAAIG,GAAyB,IAAIhK,EAASsC,MACtC2H,GAA6B,IAAIjK,EAASiG,YAAW,GAAOpD,SAASC,IACrEoH,IAAsB,IAAIjK,EAAQ6G,WAAYjE,SAASC,IAC3DkH,GAAuBzH,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,iCAAiCX,SAAS,SACxGuH,GAAuBzH,IAAI0H,IAC3BD,GAAuBzH,IAAI2H,IAC3BlI,EAAUO,IAAIyH,IACd,IAAIG,GAAkB,IAAInK,EAASsC,MAC/B8H,IAAe,IAAIpK,EAAS2C,UAAWI,YACvCC,EAAGtB,EAAQ0B,OAAO,+BAClBiH,EAAG3I,EAAQ0B,OAAO,8BAClBkH,EAAG5I,EAAQ0B,OAAO,kCACnBX,SAAS,SAASG,YAAY,QAAQC,SAASC,IAClDqH,GAAgB5H,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,0BAA0BX,SAAS,SAC1F0H,GAAgB5H,IAAI6H,IACpBpI,EAAUO,IAAI4H,IACd,IAAII,GAAqB,IAAIvK,EAASsC,MAClCkI,GAAkB,IAAIxK,EAASiG,YAAW,GAAOwE,QAAQ,SAAS5H,SAASC,IAC/EyH,GAAmBhI,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,gCAAgCX,SAAS,SACnG8H,GAAmBhI,IAAIiI,IACvBxI,EAAUO,IAAIgI,IACd,IAAIG,GAAsB,IAAI1K,EAASsC,MACnCqI,IAAmB,IAAI3K,EAAS2C,UAAWI,YAC3CC,EAAGtB,EAAQ0B,OAAO,gCAClBiH,EAAG3I,EAAQ0B,OAAO,oCAClBkH,EAAG5I,EAAQ0B,OAAO,sCAClBwH,EAAGlJ,EAAQ0B,OAAO,yCAClByH,EAAGnJ,EAAQ0B,OAAO,sCAClB0H,EAAGpJ,EAAQ0B,OAAO,sCACnBX,SAAS,SAASG,YAAY,QAAQC,SAASC,IAClD4H,GAAoBnI,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,8BAA8BX,SAAS,SAClGiI,GAAoBnI,IAAIoI,IACxB3I,EAAUO,IAAImI,IACd,IAAIK,GAAqB,IAAI/K,EAASsC,MAClC0I,GAAkB,IAAIhL,EAASgF,SAAS,GAAGvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IACxFiI,GAAmBxI,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,6BAA6BX,SAAS,SAChGsI,GAAmBxI,IAAIyI,IACvBhJ,EAAUO,IAAIwI,IACd,IAAIE,GAAyB,IAAIjL,EAASsC,MACtC4I,IAAsB,IAAIlL,EAASiG,YAAawE,QAAQ,SAAS5H,SAASC,IAC9EmI,GAAuB1I,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,iCAAiCX,SAAS,SACxGwI,GAAuB1I,IAAI2I,IAC3BlJ,EAAUO,IAAI0I,IACd,IAAIE,GAAuB,IAAInL,EAASsC,MACpC8I,IAAoB,IAAIpL,EAASgF,UAAWvC,SAAS,QAAQwC,SAAS,EAAG,GAAGpC,SAASC,IACzFqI,GAAqB5I,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpG0I,GAAqB5I,IAAI6I,IACzBpJ,EAAUO,IAAI4I,IACd,IAAIE,GAAuB,IAAIrL,EAASsC,MACpCgJ,GAAoB,IAAItL,EAASiG,YAAW,GAAOpD,SAASC,IAIhE,SAASA,KACL,IAAIyI,EAAS9J,EACT+J,EAAWD,EAAOC,SAClBC,EAAuB7J,GAC3BA,EAAsB8J,SAAShJ,EAAmB0B,eACtBqH,GACxBE,IAAU,GACd,IAAIC,EAAWpK,EAAOqK,kBAAkBpK,EAAeG,GACnDkK,GAAiB,EACjBC,GAAe,EAOnB,GANIR,EAAOS,WACPD,GAAe,GACfP,EAASS,YAAcT,EAASU,cAAc,GAAGC,OAAS,IAC1DJ,GAAe,GACfP,EAASY,uBAA+CC,IAA3Bb,EAASc,WAAWC,KACjDR,GAAe,GACfH,EAAU,CAyCV,QAxCsBS,IAAlBT,EAASY,MAAsBZ,EAASY,OAASlJ,EAAac,YAC9D5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,OAAQ6B,EAAac,WAAYxC,IAEnGgK,EAASa,OAAStJ,EAAciB,aAEV,uBADtBwH,EAAW,IAAIrL,EAAiB4C,EAAciB,cACjCqI,OACTb,EAASc,aAAeC,GAAwBf,EAASc,cAEzDE,MAAMC,QAAQpL,EAAcmK,UAC5BpK,EAAOsL,eAAerL,EAAcmK,SAAShK,IAE7CJ,EAAOsL,eAAerL,EAAcmK,UAExCpK,EAAOyC,QAAQ,IAAI8I,mBAAmBvL,EAAQC,EAAemK,EAAUhK,GAAsB,iBAAmBuB,EAAciB,YAC9H5C,EAAOwL,YAAYpB,SAEAS,IAAnBT,EAASqB,OAAuBrB,EAASqB,MAAMC,WAAatI,EAAcuI,eAC1E3L,EAAOyC,QAAQ,IAAImJ,wBAAwB5L,EAAQC,EAAe,QAASmD,EAAcuI,cAAevL,SAEjFyK,IAAvBT,EAASyB,WAA2BC,KAAKC,IAAI3B,EAASyB,UAAYtI,EAAkBX,aAAevC,GACnGL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAasD,EAAkBX,WAAYxC,SAEtFyK,IAAvBT,EAAS4B,WAA2BF,KAAKC,IAAI3B,EAAS4B,UAAYrI,EAAkBf,aAAevC,GACnGL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAa0D,EAAkBf,WAAYxC,SAEvFyK,IAAtBT,EAAS6B,UAA0B7B,EAAS6B,SAASP,WAAa7H,EAAiB8H,eACnF3L,EAAOyC,QAAQ,IAAImJ,wBAAwB5L,EAAQC,EAAe,WAAY4D,EAAiB8H,cAAevL,SAExFyK,IAAtBT,EAAS8B,UAA0B9B,EAAS8B,SAASR,WAAa1H,EAAiB2H,eACnF3L,EAAOyC,QAAQ,IAAImJ,wBAAwB5L,EAAQC,EAAe,WAAY+D,EAAiB2H,cAAevL,SAEvFyK,IAAvBT,EAAS+B,WAA2BL,KAAKC,IAAI3B,EAAS+B,UAAYjI,EAAkBtB,aAAevC,GACnGL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAaiE,EAAkBtB,WAAYxC,SAEtFyK,IAAvBT,EAASgC,WAA2BN,KAAKC,IAAI3B,EAASgC,UAAYhI,EAAkBxB,aAAevC,GACnGL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAamE,EAAkBxB,WAAYxC,SAE7EyK,IAAhCT,EAASiC,oBAAoCP,KAAKC,IAAI3B,EAASiC,mBAAqB/H,EAA2B1B,aAAevC,GAC9HL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,qBAAsBqE,EAA2B1B,WAAYxC,SAErGyK,IAA1BT,EAASkC,aAA4B,CACrC,IAAIA,EAAe9H,EAAqB5B,WACpCwH,EAASkC,eAAiBA,GAC1BtM,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,eAAgBqM,EAAclM,IAGxG,QAA8ByK,IAA1BT,EAASmC,aAA4B,CACrC,IAAIA,EAAerC,SAASrF,EAAqBjC,YAC7CwH,EAASmC,eAAiBA,GAC1BvM,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,eAAgBsM,EAAcnM,IAMxG,QAH0ByK,IAAtBT,EAASoC,UAA0BpC,EAASoC,WAAatH,EAAiBtC,YAC1E5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,WAAYiF,EAAiBtC,WAAYxC,SAE1FyK,IAAjBT,EAASqC,IAAmB,CAC5B,IAAIC,GAA+C,IAAlCtH,EAAmBxC,WACpC,GAAI2H,EAAc,CACd,IAAIkC,EAAMC,EAAarH,EAAYzC,WAAa,KAC5CwH,EAASqC,MAAQA,GACjBzM,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,MAAOwM,EAAKrM,SAG5EsM,IACApC,GAAiB,GAG7B,QAAwBO,IAApBT,EAASwC,OAET,GADIF,GAAqD,IAAxCjH,EAAyB7C,WACtC2H,EAAc,CACd,IAAIqC,EAASF,EAAahH,EAAkB9C,WAAa,KACrDwH,EAASwC,SAAWA,GACpB5M,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,SAAU2M,EAAQxM,SAGlFsM,IACApC,GAAiB,GAG7B,QAA0BO,IAAtBT,EAASyC,SAET,GADIH,GAAoD,IAAvC9G,GAAwBhD,WACrC2H,EAAc,CACd,IAAIsC,EAAWH,EAAa7G,GAAiBjD,WAAa,KACtDwH,EAASyC,WAAaA,GACtB7M,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,WAAY4M,EAAUzM,SAGtFsM,IACApC,GAAiB,GAG7B,QAAyBO,IAArBT,EAAS0C,QAAuB,CAChC,IAAIC,GAAuD,IAAtChH,GAAuBnD,WAC5C,GAAI2H,EAAc,CACd,IAAIuC,EAAUC,EAAiB/G,GAAgBpD,WAAa,KACxDwH,EAAS0C,UAAYA,GACrB9M,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,UAAW6M,EAAS1M,IAEpFgK,EAAS4C,YAAc/G,GAAkBrD,YACzC5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAagG,GAAkBrD,WAAYxC,SAG7G2M,IACAzC,GAAiB,GAG7B,QAA2BO,IAAvBT,EAAS6C,UAAyB,CAClC,IAAIC,GAA2D,IAAxC/G,GAAyBvD,WAChD,GAAI2H,EAAc,CACd,IAAI0C,EAAYC,EAAmB9G,GAAkBxD,WAAa,KAIlE,GAHIwH,EAAS6C,YAAcA,GACvBjN,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,YAAagN,EAAW7M,IAExFgK,EAAS+C,YAAYC,IAAM/G,GAAqBzD,YAAcwH,EAAS+C,YAAYE,IAAM/G,GAAqB1D,WAAY,CAC1H,IAAI0K,GACAjH,GAAqBzD,WACrB0D,GAAqB1D,YAEzB5C,EAAOyC,QAAQ,IAAI8K,yBAAyBvN,EAAQC,EAAe,cAAeqN,EAAOlN,UAGzF8M,IACA5C,GAAiB,GAG7B,QAAoCO,IAAhCT,EAASoD,mBAAkC,CAC3C,IAAIC,GAA6E,IAAjDjH,GAAkC5D,WAClE,GAAI2H,EAAc,CACd,IAAIiD,EAAqBC,EAA4BhH,GAA2B7D,WAAa,KACzFwH,EAASoD,qBAAuBA,GAChCxN,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,qBAAsBuN,EAAoBpN,KAE1GgK,EAASsD,qBAAqBN,IAAM1G,GAA8B9D,YAAcwH,EAASsD,qBAAqBL,IAAM1G,GAA8B/D,cAC9I0K,GACA5G,GAA8B9D,WAC9B+D,GAA8B/D,YAElC5C,EAAOyC,QAAQ,IAAI8K,yBAAyBvN,EAAQC,EAAe,uBAAwBqN,EAAOlN,UAGlGqN,IACAnD,GAAiB,GAG7B,QAAiCO,IAA7BT,EAASuD,gBAA+B,CACxC,IAAIC,GAAuE,IAA9C/G,GAA+BjE,WAC5D,GAAI2H,EAAc,CACd,IAAIoD,EAAkBC,EAAyB9G,GAAwBlE,WAAa,KAChFwH,EAASuD,kBAAoBA,GAC7B3N,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,kBAAmB0N,EAAiBvN,IAEpGgK,EAASyD,oBAAsB9G,GAA0BnE,YACzD5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,oBAAqB8G,GAA0BnE,WAAYxC,SAG7HwN,IACAtD,GAAiB,GAG7B,QAA8BO,IAA1BT,EAAS0D,aAA4B,CACrC,IAAIC,GAAiE,IAA3C9G,GAA4BrE,WACtD,GAAI2H,EAAc,CACd,IAAIuD,EAAeC,EAAsB7G,GAAqBtE,WAAa,KACvEwH,EAAS0D,eAAiBA,GAC1B9N,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,eAAgB6N,EAAc1N,SAG9F2N,IACAzD,GAAiB,GAG7B,QAA8BO,IAA1BT,EAAS4D,aAA4B,CACrC,IAAIC,GAAiE,IAA3C7G,GAA4BxE,WACtD,GAAI2H,EAAc,CACd,IAAIyD,EAAeC,EAAsB5G,GAAqBzE,WAAa,KACvEwH,EAAS4D,eAAiBA,GAC1BhO,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,eAAgB+N,EAAc5N,SAG9F6N,IACA3D,GAAiB,GAG7B,QAA6BO,IAAzBT,EAAS8D,YAA2B,CACpC,IAAIC,GAA+D,IAA1C5G,GAA2B3E,WACpD,GAAI2H,EAAc,CACd,IAAI2D,EAAcC,EAAqB3G,GAAoB5E,WAAa,KACpEwH,EAAS8D,cAAgBA,GACzBlO,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,cAAeiO,EAAa9N,SAG5F+N,IACA7D,GAAiB,GAG7B,QAAwBO,IAApBT,EAASgE,OAAsB,CAC/B,IACIA,GADqD,IAArC1G,GAAsB9E,WACb+E,GAAe/E,WAAa,KACrDwH,EAASgE,SAAWA,GACpBpO,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,SAAUmO,EAAQhO,IAG1F,QAA8ByK,IAA1BT,EAASiE,aAA4B,CACrC,IAAIA,EAAexG,GAAqBjF,WACpCwH,EAASiE,eAAiBA,GAC1BrO,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,eAAgBoO,EAAcjO,IAGxG,QAA0ByK,IAAtBT,EAASkE,SAAwB,CACjC,IAAIC,GAAyD,IAAvCxG,GAAwBnF,WAC9C,GAAI2H,EAAc,CACd,IAAI+D,EAAWC,EAAkBvG,GAAiBpF,WAAa,KAC3DwH,EAASkE,WAAaA,GACtBtO,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,WAAYqO,EAAUlO,SAGtFmO,IACAjE,GAAiB,GAG7B,QAAuBO,IAAnBT,EAASoE,MAAqB,CAC9B,IAAIC,IAAmD,IAApCvG,GAAqBtF,WACxC,GAAI2H,EAAc,CACd,IAAIiE,GAAQC,GAAetG,GAAcvF,WAAa,KAClDwH,EAASoE,QAAUA,IACnBxO,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,QAASuO,GAAOpO,IAEhFgK,EAASsE,iBAAmBtG,GAAgBxF,YAC5C5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,iBAAkBmI,GAAgBxF,WAAYxC,SAGhHqO,KACAnE,GAAiB,GAG7B,QAA6BO,IAAzBT,EAASuE,YAA2B,CACpC,IAAIC,IAA+D,IAA1CtG,GAA2B1F,WACpD,GAAI2H,EAAc,CACd,IAAIoE,GAAcC,GAAqBrG,GAAoB3F,WAAa,KACpEwH,EAASuE,cAAgBA,IACzB3O,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,cAAe0O,GAAavO,SAG5FwO,KACAtE,GAAiB,GAG7B,QAA6BO,IAAzBT,EAASyE,YAA2B,CACpC,IACIA,IAD+D,IAA1CpG,GAA2B7F,WACb8F,GAAoB9F,WAAa,KACpEwH,EAASyE,cAAgBA,IACzB7O,EAAOyC,QAAQ,IAAIkK,sBAAsB3M,EAAQC,EAAe,cAAe4O,GAAazO,IAGpG,QAAsByK,IAAlBT,EAAS0E,KAAoB,CAC7B,IAAIA,GAAO5E,SAAStB,GAAahG,YAC7BwH,EAAS0E,OAASA,IAClB9O,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,OAAQ6O,GAAM1O,IAGxF,QAA6ByK,IAAzBT,EAAS2E,YAA2B,CACpC,IAAIA,GAAc/F,GAAgBpG,WAC9BwH,EAAS2E,aAAeA,IACxB/O,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,cAAe8O,GAAa3O,IAGtG,QAA0ByK,IAAtBT,EAAS4E,SAAwB,CACjC,IAAIA,GAAW9E,SAASf,GAAiBvG,YACrCwH,EAAS4E,WAAaA,IACtBhP,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,WAAY+O,GAAU5O,SAGvEyK,IAArBT,EAAS6E,SAAyBnD,KAAKC,IAAI3B,EAAS6E,QAAUzF,GAAgB5G,aAAevC,GAC7FL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,UAAWuJ,GAAgB5G,WAAYxC,SAEhFyK,IAAzBT,EAAS8E,aAA6B9E,EAAS8E,cAAgBxF,GAAoB9G,YACnF5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,cAAeyJ,GAAoB9G,WAAYxC,SAE1FyK,IAAvBT,EAAS+E,WAA2BrD,KAAKC,IAAI3B,EAAS+E,UAAYvF,GAAkBhH,aAAevC,GACnGL,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAa2J,GAAkBhH,WAAYxC,SAEtFyK,IAAvBT,EAASgF,WAA2BhF,EAASgF,YAActF,GAAkBlH,YAC7E5C,EAAOyC,QAAQ,IAAIC,wBAAwB1C,EAAQC,EAAe,YAAa6J,GAAkBlH,WAAYxC,IAEjH+J,KAEAG,GACA+E,QAAQC,KAAK,6DAGrB,SAAS/J,GAAegK,GACJ,OAAZA,GACIA,EAAQC,WAAajR,EAAMkR,eAC3BF,EAAQC,SAAWjR,EAAMkR,aAEV,OADFxP,IAAAA,EAEFmK,SAASsF,aAAc,IAI1CpO,KAsDJ,SAAS6I,GAAUwF,GACf,GAAK1P,EAAL,CAEA,IAAImK,EAAWnK,EAAcmK,SAC7B,GAAIgB,MAAMC,QAAQjB,GAAW,CACzB,IAAIwF,KACJxP,EAAsB0L,KAAK+D,IAAI,EAAG/D,KAAKgE,IAAI1F,EAASO,OAAQvK,IAC5D,IAAK,IAAI2P,EAAI,EAAGA,EAAI3F,EAASO,OAAQoF,IACjCH,EAAYG,GAAKC,OAAOD,EAAI,GAAK,KAAO3F,EAAS2F,GAAGE,KAExD/O,EAAmBK,WAAWqO,GAAanO,SAASrB,QAGlCyK,KADtBT,EAAWpK,EAAOqK,kBAAkBpK,EAAeG,IACtC4K,MACTlJ,EAAaL,SAAS2I,EAASY,WAEbH,IAAlBT,EAAS6F,MACTzN,EAAaf,SAAS2I,EAAS6F,MAEnCtO,EAAcF,SAAS2I,EAASa,WACTJ,IAAnBT,EAASqB,OACTrI,EAAcU,YAAYsG,EAASqB,MAAMyE,qBAElBrF,IAAvBT,EAASyB,WACTtI,EAAkB9B,SAAS2I,EAASyB,gBAEbhB,IAAvBT,EAAS4B,WACTrI,EAAkBlC,SAAS2I,EAAS4B,gBAEdnB,IAAtBT,EAAS6B,UACTpI,EAAiBC,YAAYsG,EAAS6B,SAASiE,qBAEzBrF,IAAtBT,EAAS8B,UACTlI,EAAiBF,YAAYsG,EAAS8B,SAASgE,qBAExBrF,IAAvBT,EAAS+B,WACTjI,EAAkBzC,SAAS2I,EAAS+B,gBAEbtB,IAAvBT,EAASgC,WACThI,EAAkB3C,SAAS2I,EAASgC,gBAEJvB,IAAhCT,EAASiC,oBACT/H,EAA2B7C,SAAS2I,EAASiC,yBAEnBxB,IAA1BT,EAASkC,cACT9H,EAAqB/C,SAAS2I,EAASkC,mBAEbzB,IAA1BT,EAASmC,cACT1H,EAAqBpD,SAAS2I,EAASmC,mBAEjB1B,IAAtBT,EAASoC,UACTtH,EAAiBzD,SAAS2I,EAASoC,eAElB3B,IAAjBT,EAASqC,MACTrH,EAAmB3D,SAA0B,OAAjB2I,EAASqC,MAChB,OAAjBrC,EAASqC,KAAgBkD,IACzBtK,EAAY5D,SAAS2I,EAASqC,WAGd5B,IAApBT,EAASwC,SACTnH,EAAyBhE,SAA6B,OAApB2I,EAASwC,SACnB,OAApBxC,EAASwC,QAAmB+C,IAC5BjK,EAAkBjE,SAAS2I,EAASwC,cAGlB/B,IAAtBT,EAASyC,WACTjH,GAAwBnE,SAA+B,OAAtB2I,EAASyC,WAChB,OAAtBzC,EAASyC,UAAqB8C,IAC9B9J,GAAiBpE,SAAS2I,EAASyC,gBAGlBhC,IAArBT,EAAS0C,UACT/G,GAAuBtE,SAA8B,OAArB2I,EAAS0C,UAChB,OAArB1C,EAAS0C,SAAoB6C,IAC7B3J,GAAgBvE,SAAS2I,EAAS0C,SAEtC7G,GAAkBxE,SAAS2I,EAAS4C,iBAEbnC,IAAvBT,EAAS6C,YACT9G,GAAyB1E,SAAgC,OAAvB2I,EAAS6C,YAChB,OAAvB7C,EAAS6C,WAAsB0C,IAC/BvJ,GAAkB3E,SAAS2I,EAAS6C,WAExC5G,GAAqB5E,SAAS2I,EAAS+C,YAAYC,GACnD9G,GAAqB7E,SAAS2I,EAAS+C,YAAYE,SAEnBxC,IAAhCT,EAASoD,qBACThH,GAAkC/E,SAAyC,OAAhC2I,EAASoD,qBAChB,OAAhCpD,EAASoD,oBAA+BmC,IACxClJ,GAA2BhF,SAAS2I,EAASoD,oBAEjD9G,GAA8BjF,SAAS2I,EAASsD,qBAAqBN,GACrEzG,GAA8BlF,SAAS2I,EAASsD,qBAAqBL,SAExCxC,IAA7BT,EAASuD,kBACT9G,GAA+BpF,SAAsC,OAA7B2I,EAASuD,kBAChB,OAA7BvD,EAASuD,iBAA4BgC,IACrC7I,GAAwBrF,SAAS2I,EAASuD,iBAE9C5G,GAA0BtF,SAAS2I,EAASyD,yBAElBhD,IAA1BT,EAAS0D,eACT7G,GAA4BxF,SAAmC,OAA1B2I,EAAS0D,eAChB,OAA1B1D,EAAS0D,cAAyB6B,IAClCzI,GAAqBzF,SAAS2I,EAAS0D,oBAGjBjD,IAA1BT,EAAS4D,eACT5G,GAA4B3F,SAAmC,OAA1B2I,EAAS4D,eAChB,OAA1B5D,EAAS4D,cAAyB2B,IAClCtI,GAAqB5F,SAAS2I,EAAS4D,oBAGlBnD,IAAzBT,EAAS8D,cACT3G,GAA2B9F,SAAkC,OAAzB2I,EAAS8D,cAChB,OAAzB9D,EAAS8D,aAAwByB,IACjCnI,GAAoB/F,SAAS2I,EAAS8D,mBAGtBrD,IAApBT,EAASgE,SACT1G,GAAsBjG,SAA6B,OAApB2I,EAASgE,SAChB,OAApBhE,EAASgE,QAAmBuB,IAC5BhI,GAAelG,SAAS2I,EAASgE,cAGZvD,IAAzBT,EAASyE,cACTpG,GAA2BhH,SAAkC,OAAzB2I,EAASyE,cAChB,OAAzBzE,EAASyE,aAAwBc,IACjCjH,GAAoBjH,SAAS2I,EAASyE,mBAGhBhE,IAA1BT,EAASiE,cACTxG,GAAqBpG,SAAS2I,EAASiE,mBAEjBxD,IAAtBT,EAASkE,WACTvG,GAAwBtG,SAA+B,OAAtB2I,EAASkE,WAChB,OAAtBlE,EAASkE,UAAqBqB,IAC9B3H,GAAiBvG,SAAS2I,EAASkE,gBAGpBzD,IAAnBT,EAASoE,QACTtG,GAAqBzG,SAA4B,OAAnB2I,EAASoE,QAChB,OAAnBpE,EAASoE,OAAkBmB,IAC3BxH,GAAc1G,SAAS2I,EAASoE,OAEpCpG,GAAgB3G,SAAS2I,EAASsE,sBAET7D,IAAzBT,EAASuE,cACTrG,GAA2B7G,SAAkC,OAAzB2I,EAASuE,cAChB,OAAzBvE,EAASuE,aAAwBgB,IACjCpH,GAAoB9G,SAAS2I,EAASuE,mBAGxB9D,IAAlBT,EAAS0E,MACTlG,GAAanH,SAAS2I,EAAS0E,WAENjE,IAAzBT,EAAS2E,aACT/F,GAAgBvH,SAAS2I,EAAS2E,kBAEZlE,IAAtBT,EAAS4E,UACT7F,GAAiB1H,SAAS2I,EAAS4E,eAEdnE,IAArBT,EAAS6E,SACTzF,GAAgB/H,SAAS2I,EAAS6E,cAETpE,IAAzBT,EAAS8E,aACTxF,GAAoBjI,SAAS2I,EAAS8E,kBAEfrE,IAAvBT,EAAS+E,WACTvF,GAAkBnI,SAAS2I,EAAS+E,gBAEbtE,IAAvBT,EAASgF,WACTtF,GAAkBrI,SAAS2I,EAASgF,WAhO5C,WACI,IAAIe,GACAF,KAAQ1N,EACRkJ,MAAStI,EACT0I,UAAavI,EACb0I,UAAatI,EACbuI,SAAYrI,EACZsI,SAAYnI,EACZoI,UAAalI,EACbmI,UAAajI,EACbkI,mBAAsBhI,EACtB6G,aAAgBrI,EAChByJ,aAAgB/H,EAChB6L,eAAkB1L,EAClB6H,aAAgB3H,EAChB4H,SAAYvH,EACZwH,IAAOtH,EACPyH,OAAUpH,EACVqH,SAAYlH,GACZmH,QAAWhH,GACXmH,UAAa/G,GACbsH,mBAAsBjH,GACtBoH,gBAAmB/G,GACnBkH,aAAgB9G,GAChBgH,aAAgB7G,GAChB+G,YAAe5G,GACf8G,OAAU3G,GACV6G,SAAYxG,GACZ0G,MAASvG,GACT0G,YAAetG,GACfwG,YAAerG,GACfsG,KAAQnG,GACRoG,YAAehG,GACfiG,SAAY9F,GACZ+F,QAAW1F,GACX2F,YAAezF,GACf0F,UAAaxF,GACbyF,UAAavF,IAEbO,EAAWnK,EAAcmK,SAC7B,GAAIgB,MAAMC,QAAQjB,GAAW,CAEzB,GADAvJ,EAAgBF,WAAW,IACH,IAApByJ,EAASO,OACT,OACJP,EAAWA,EAAShK,QAEpBS,EAAgBF,WAAW,QAE/B,IAAK,IAAI0P,KAAYF,EACjBA,EAAWE,GAAU1P,gBAAkCkK,IAAvBT,EAASiG,GAA0B,GAAK,QAiL5EC,IApiBJzG,GAAqB9I,IAAI,IAAIvC,EAASwC,OAAOd,EAAQ0B,OAAO,+BAA+BX,SAAS,SACpG4I,GAAqB9I,IAAI+I,IACzBtJ,EAAUO,IAAI8I,IAoiBd1J,EAAQoQ,eAAexP,IAAI,SAAUgJ,GACjC,IAAIyG,GAAc,EAOlB,GANIzG,GAAUA,EAAOK,WACjBoG,GAAc,EACVpF,MAAMC,QAAQtB,EAAOK,WAAwC,IAA3BL,EAAOK,SAASO,SAClD6F,GAAc,IAGlBA,EAAa,CACb,IAAIC,EAAgB1G,IAAW9J,EAC/BA,EAAgB8J,EAChBI,GAAUsG,GACVjQ,EAAUG,WAAW,SAErBV,EAAgB,KAChBO,EAAUG,WAAW,UAG7BR,EAAQuQ,gBAAgB3P,IAAI,WACxBoJ,OAEJ,IAAIgB,IACA,iCACA,kCACA,gCACFwF,KAAK,MACP,OAAOnQ","file":"../../sideitems/Material.js","sourcesContent":["define([\n    'skylark-threejs',\n    'skylark-mrdoobui',\n    './ThreeUI',\n    '../commands/SetMaterialCommand',\n    '../commands/SetMaterialColorCommand',\n    '../commands/SetMaterialMapCommand',\n    '../commands/SetMaterialValueCommand',\n    '../commands/SetMaterialVectorCommand'\n], function (THREE, mrdoobui, ThreeUI, c, d, e, f, g) {\n    'use strict';\n    var materialClasses = {\n        'LineBasicMaterial': THREE.LineBasicMaterial,\n        'LineDashedMaterial': THREE.LineDashedMaterial,\n        'MeshBasicMaterial': THREE.MeshBasicMaterial,\n        'MeshDepthMaterial': THREE.MeshDepthMaterial,\n        'MeshNormalMaterial': THREE.MeshNormalMaterial,\n        'MeshLambertMaterial': THREE.MeshLambertMaterial,\n        'MeshMatcapMaterial': THREE.MeshMatcapMaterial,\n        'MeshPhongMaterial': THREE.MeshPhongMaterial,\n        'MeshToonMaterial': THREE.MeshToonMaterial,\n        'MeshStandardMaterial': THREE.MeshStandardMaterial,\n        'MeshPhysicalMaterial': THREE.MeshPhysicalMaterial,\n        'RawShaderMaterial': THREE.RawShaderMaterial,\n        'ShaderMaterial': THREE.ShaderMaterial,\n        'ShadowMaterial': THREE.ShadowMaterial,\n        'SpriteMaterial': THREE.SpriteMaterial\n    };\n    var SidebarMaterial = function (editor) {\n        var strings = editor.strings;\n        var signals = editor.signals;\n        var currentObject;\n        var currentMaterialSlot = 0;\n        var epsilon = 0.01 - Number.EPSILON;\n        var container = new mrdoobui.UIPanel();\n        container.setBorderTop('0');\n        container.setDisplay('none');\n        container.setPaddingTop('20px');\n        var materialSlotRow = new mrdoobui.UIRow();\n        materialSlotRow.add(new mrdoobui.UIText('Slot').setWidth('90px'));\n        var materialSlotSelect = new mrdoobui.UISelect().setWidth('170px').setFontSize('12px').onChange(update);\n        materialSlotSelect.setOptions({ 0: '' }).setValue(0);\n        materialSlotRow.add(materialSlotSelect);\n        container.add(materialSlotRow);\n        var materialClassRow = new mrdoobui.UIRow();\n        var materialClass = new mrdoobui.UISelect().setOptions({\n            'LineBasicMaterial': 'LineBasicMaterial',\n            'LineDashedMaterial': 'LineDashedMaterial',\n            'MeshBasicMaterial': 'MeshBasicMaterial',\n            'MeshDepthMaterial': 'MeshDepthMaterial',\n            'MeshNormalMaterial': 'MeshNormalMaterial',\n            'MeshLambertMaterial': 'MeshLambertMaterial',\n            'MeshMatcapMaterial': 'MeshMatcapMaterial',\n            'MeshPhongMaterial': 'MeshPhongMaterial',\n            'MeshToonMaterial': 'MeshToonMaterial',\n            'MeshStandardMaterial': 'MeshStandardMaterial',\n            'MeshPhysicalMaterial': 'MeshPhysicalMaterial',\n            'RawShaderMaterial': 'RawShaderMaterial',\n            'ShaderMaterial': 'ShaderMaterial',\n            'ShadowMaterial': 'ShadowMaterial',\n            'SpriteMaterial': 'SpriteMaterial'\n        }).setWidth('150px').setFontSize('12px').onChange(update);\n        materialClassRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/type')).setWidth('90px'));\n        materialClassRow.add(materialClass);\n        container.add(materialClassRow);\n        var materialUUIDRow = new mrdoobui.UIRow();\n        var materialUUID = new mrdoobui.UIInput().setWidth('102px').setFontSize('12px').setDisabled(true);\n        var materialUUIDRenew = new mrdoobui.UIButton(strings.getKey('sidebar/material/new')).setMarginLeft('7px').onClick(function () {\n            materialUUID.setValue(THREE.MathUtils.generateUUID());\n            update();\n        });\n        materialUUIDRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/uuid')).setWidth('90px'));\n        materialUUIDRow.add(materialUUID);\n        materialUUIDRow.add(materialUUIDRenew);\n        container.add(materialUUIDRow);\n        var materialNameRow = new mrdoobui.UIRow();\n        var materialName = new mrdoobui.UIInput().setWidth('150px').setFontSize('12px').onChange(function () {\n            editor.execute(new SetMaterialValueCommand(editor, editor.selected, 'name', materialName.getValue(), currentMaterialSlot));\n        });\n        materialNameRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/name')).setWidth('90px'));\n        materialNameRow.add(materialName);\n        container.add(materialNameRow);\n        var materialProgramRow = new mrdoobui.UIRow();\n        materialProgramRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/program')).setWidth('90px'));\n        var materialProgramInfo = new mrdoobui.UIButton(strings.getKey('sidebar/material/info'));\n        materialProgramInfo.setMarginLeft('4px');\n        materialProgramInfo.onClick(function () {\n            signals.editScript.dispatch(currentObject, 'programInfo');\n        });\n        materialProgramRow.add(materialProgramInfo);\n        var materialProgramVertex = new mrdoobui.UIButton(strings.getKey('sidebar/material/vertex'));\n        materialProgramVertex.setMarginLeft('4px');\n        materialProgramVertex.onClick(function () {\n            signals.editScript.dispatch(currentObject, 'vertexShader');\n        });\n        materialProgramRow.add(materialProgramVertex);\n        var materialProgramFragment = new mrdoobui.UIButton(strings.getKey('sidebar/material/fragment'));\n        materialProgramFragment.setMarginLeft('4px');\n        materialProgramFragment.onClick(function () {\n            signals.editScript.dispatch(currentObject, 'fragmentShader');\n        });\n        materialProgramRow.add(materialProgramFragment);\n        container.add(materialProgramRow);\n        var materialColorRow = new mrdoobui.UIRow();\n        var materialColor = new mrdoobui.UIColor().onChange(update);\n        materialColorRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/color')).setWidth('90px'));\n        materialColorRow.add(materialColor);\n        container.add(materialColorRow);\n        var materialRoughnessRow = new mrdoobui.UIRow();\n        var materialRoughness = new mrdoobui.UINumber(0.5).setWidth('60px').setRange(0, 1).onChange(update);\n        materialRoughnessRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/roughness')).setWidth('90px'));\n        materialRoughnessRow.add(materialRoughness);\n        container.add(materialRoughnessRow);\n        var materialMetalnessRow = new mrdoobui.UIRow();\n        var materialMetalness = new mrdoobui.UINumber(0.5).setWidth('60px').setRange(0, 1).onChange(update);\n        materialMetalnessRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/metalness')).setWidth('90px'));\n        materialMetalnessRow.add(materialMetalness);\n        container.add(materialMetalnessRow);\n        var materialEmissiveRow = new mrdoobui.UIRow();\n        var materialEmissive = new mrdoobui.UIColor().setHexValue(0).onChange(update);\n        materialEmissiveRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/emissive')).setWidth('90px'));\n        materialEmissiveRow.add(materialEmissive);\n        container.add(materialEmissiveRow);\n        var materialSpecularRow = new mrdoobui.UIRow();\n        var materialSpecular = new mrdoobui.UIColor().setHexValue(1118481).onChange(update);\n        materialSpecularRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/specular')).setWidth('90px'));\n        materialSpecularRow.add(materialSpecular);\n        container.add(materialSpecularRow);\n        var materialShininessRow = new mrdoobui.UIRow();\n        var materialShininess = new mrdoobui.UINumber(30).onChange(update);\n        materialShininessRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/shininess')).setWidth('90px'));\n        materialShininessRow.add(materialShininess);\n        container.add(materialShininessRow);\n        var materialClearcoatRow = new mrdoobui.UIRow();\n        var materialClearcoat = new mrdoobui.UINumber(1).setWidth('60px').setRange(0, 1).onChange(update);\n        materialClearcoatRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/clearcoat')).setWidth('90px'));\n        materialClearcoatRow.add(materialClearcoat);\n        container.add(materialClearcoatRow);\n        var materialClearcoatRoughnessRow = new mrdoobui.UIRow();\n        var materialClearcoatRoughness = new mrdoobui.UINumber(1).setWidth('60px').setRange(0, 1).onChange(update);\n        materialClearcoatRoughnessRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/clearcoatroughness')).setWidth('90px'));\n        materialClearcoatRoughnessRow.add(materialClearcoatRoughness);\n        container.add(materialClearcoatRoughnessRow);\n        var materialVertexColorsRow = new mrdoobui.UIRow();\n        var materialVertexColors = new mrdoobui.UICheckbox(false).onChange(update);\n        materialVertexColorsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/vertexcolors')).setWidth('90px'));\n        materialVertexColorsRow.add(materialVertexColors);\n        container.add(materialVertexColorsRow);\n        var materialVertexTangentsRow = new mrdoobui.UIRow();\n        var materialVertexTangents = new mrdoobui.UICheckbox(false).onChange(update);\n        materialVertexTangentsRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/vertextangents')).setWidth('90px'));\n        materialVertexTangentsRow.add(materialVertexTangents);\n        container.add(materialVertexTangentsRow);\n        var materialDepthPackingRow = new mrdoobui.UIRow();\n        var materialDepthPacking = new mrdoobui.UISelect().setOptions({\n            [THREE.BasicDepthPacking]: 'BasicDepthPacking',\n            [THREE.RGBADepthPacking]: 'RGBADepthPacking'\n        });\n        materialDepthPacking.onChange(update);\n        materialDepthPackingRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/depthPacking')).setWidth('90px'));\n        materialDepthPackingRow.add(materialDepthPacking);\n        container.add(materialDepthPackingRow);\n        var materialSkinningRow = new mrdoobui.UIRow();\n        var materialSkinning = new mrdoobui.UICheckbox(false).onChange(update);\n        materialSkinningRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/skinning')).setWidth('90px'));\n        materialSkinningRow.add(materialSkinning);\n        container.add(materialSkinningRow);\n        var materialMapRow = new mrdoobui.UIRow();\n        var materialMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialMap = new ThreeUI.UITexture().onChange(updateMaterial);\n        materialMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/map')).setWidth('90px'));\n        materialMapRow.add(materialMapEnabled);\n        materialMapRow.add(materialMap);\n        container.add(materialMapRow);\n        var materialMatcapMapRow = new mrdoobui.UIRow();\n        var materialMatcapMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialMatcapMap = new ThreeUI.UITexture().onChange(update);\n        materialMatcapMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/matcap')).setWidth('90px'));\n        materialMatcapMapRow.add(materialMatcapMapEnabled);\n        materialMatcapMapRow.add(materialMatcapMap);\n        container.add(materialMatcapMapRow);\n        var materialAlphaMapRow = new mrdoobui.UIRow();\n        var materialAlphaMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialAlphaMap = new ThreeUI.UITexture().onChange(update);\n        materialAlphaMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/alphamap')).setWidth('90px'));\n        materialAlphaMapRow.add(materialAlphaMapEnabled);\n        materialAlphaMapRow.add(materialAlphaMap);\n        container.add(materialAlphaMapRow);\n        var materialBumpMapRow = new mrdoobui.UIRow();\n        var materialBumpMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialBumpMap = new ThreeUI.UITexture().onChange(update);\n        var materialBumpScale = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        materialBumpMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/bumpmap')).setWidth('90px'));\n        materialBumpMapRow.add(materialBumpMapEnabled);\n        materialBumpMapRow.add(materialBumpMap);\n        materialBumpMapRow.add(materialBumpScale);\n        container.add(materialBumpMapRow);\n        var materialNormalMapRow = new mrdoobui.UIRow();\n        var materialNormalMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialNormalMap = new ThreeUI.UITexture().onChange(update);\n        var materialNormalScaleX = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        var materialNormalScaleY = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        materialNormalMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/normalmap')).setWidth('90px'));\n        materialNormalMapRow.add(materialNormalMapEnabled);\n        materialNormalMapRow.add(materialNormalMap);\n        materialNormalMapRow.add(materialNormalScaleX);\n        materialNormalMapRow.add(materialNormalScaleY);\n        container.add(materialNormalMapRow);\n        var materialClearcoatNormalMapRow = new mrdoobui.UIRow();\n        var materialClearcoatNormalMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialClearcoatNormalMap = new ThreeUI.UITexture().onChange(update);\n        var materialClearcoatNormalScaleX = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        var materialClearcoatNormalScaleY = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        materialClearcoatNormalMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/clearcoatnormalmap')).setWidth('90px'));\n        materialClearcoatNormalMapRow.add(materialClearcoatNormalMapEnabled);\n        materialClearcoatNormalMapRow.add(materialClearcoatNormalMap);\n        materialClearcoatNormalMapRow.add(materialClearcoatNormalScaleX);\n        materialClearcoatNormalMapRow.add(materialClearcoatNormalScaleY);\n        container.add(materialClearcoatNormalMapRow);\n        var materialDisplacementMapRow = new mrdoobui.UIRow();\n        var materialDisplacementMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialDisplacementMap = new ThreeUI.UITexture().onChange(update);\n        var materialDisplacementScale = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        materialDisplacementMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/displacemap')).setWidth('90px'));\n        materialDisplacementMapRow.add(materialDisplacementMapEnabled);\n        materialDisplacementMapRow.add(materialDisplacementMap);\n        materialDisplacementMapRow.add(materialDisplacementScale);\n        container.add(materialDisplacementMapRow);\n        var materialRoughnessMapRow = new mrdoobui.UIRow();\n        var materialRoughnessMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialRoughnessMap = new ThreeUI.UITexture().onChange(update);\n        materialRoughnessMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/roughmap')).setWidth('90px'));\n        materialRoughnessMapRow.add(materialRoughnessMapEnabled);\n        materialRoughnessMapRow.add(materialRoughnessMap);\n        container.add(materialRoughnessMapRow);\n        var materialMetalnessMapRow = new mrdoobui.UIRow();\n        var materialMetalnessMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialMetalnessMap = new ThreeUI.UITexture().onChange(update);\n        materialMetalnessMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/metalmap')).setWidth('90px'));\n        materialMetalnessMapRow.add(materialMetalnessMapEnabled);\n        materialMetalnessMapRow.add(materialMetalnessMap);\n        container.add(materialMetalnessMapRow);\n        var materialSpecularMapRow = new mrdoobui.UIRow();\n        var materialSpecularMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialSpecularMap = new ThreeUI.UITexture().onChange(update);\n        materialSpecularMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/specularmap')).setWidth('90px'));\n        materialSpecularMapRow.add(materialSpecularMapEnabled);\n        materialSpecularMapRow.add(materialSpecularMap);\n        container.add(materialSpecularMapRow);\n        var materialEnvMapRow = new mrdoobui.UIRow();\n        var materialEnvMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialEnvMap = new ThreeUI.UITexture(THREE.SphericalReflectionMapping).onChange(updateMaterial);\n        var materialReflectivity = new mrdoobui.UINumber(1).setWidth('30px').onChange(update);\n        materialEnvMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/envmap')).setWidth('90px'));\n        materialEnvMapRow.add(materialEnvMapEnabled);\n        materialEnvMapRow.add(materialEnvMap);\n        materialEnvMapRow.add(materialReflectivity);\n        container.add(materialEnvMapRow);\n        var materialLightMapRow = new mrdoobui.UIRow();\n        var materialLightMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialLightMap = new ThreeUI.UITexture().onChange(update);\n        materialLightMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/lightmap')).setWidth('90px'));\n        materialLightMapRow.add(materialLightMapEnabled);\n        materialLightMapRow.add(materialLightMap);\n        container.add(materialLightMapRow);\n        var materialAOMapRow = new mrdoobui.UIRow();\n        var materialAOMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialAOMap = new ThreeUI.UITexture().onChange(update);\n        var materialAOScale = new mrdoobui.UINumber(1).setRange(0, 1).setWidth('30px').onChange(update);\n        materialAOMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/aomap')).setWidth('90px'));\n        materialAOMapRow.add(materialAOMapEnabled);\n        materialAOMapRow.add(materialAOMap);\n        materialAOMapRow.add(materialAOScale);\n        container.add(materialAOMapRow);\n        var materialEmissiveMapRow = new mrdoobui.UIRow();\n        var materialEmissiveMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialEmissiveMap = new ThreeUI.UITexture().onChange(updateMaterial);\n        materialEmissiveMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/emissivemap')).setWidth('90px'));\n        materialEmissiveMapRow.add(materialEmissiveMapEnabled);\n        materialEmissiveMapRow.add(materialEmissiveMap);\n        container.add(materialEmissiveMapRow);\n        var materialGradientMapRow = new mrdoobui.UIRow();\n        var materialGradientMapEnabled = new mrdoobui.UICheckbox(false).onChange(update);\n        var materialGradientMap = new ThreeUI.UITexture().onChange(update);\n        materialGradientMapRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/gradientmap')).setWidth('90px'));\n        materialGradientMapRow.add(materialGradientMapEnabled);\n        materialGradientMapRow.add(materialGradientMap);\n        container.add(materialGradientMapRow);\n        var materialSideRow = new mrdoobui.UIRow();\n        var materialSide = new mrdoobui.UISelect().setOptions({\n            0: strings.getKey('sidebar/material/side/front'),\n            1: strings.getKey('sidebar/material/side/back'),\n            2: strings.getKey('sidebar/material/side/double')\n        }).setWidth('150px').setFontSize('12px').onChange(update);\n        materialSideRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/side')).setWidth('90px'));\n        materialSideRow.add(materialSide);\n        container.add(materialSideRow);\n        var materialShadingRow = new mrdoobui.UIRow();\n        var materialShading = new mrdoobui.UICheckbox(false).setLeft('100px').onChange(update);\n        materialShadingRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/flatshaded')).setWidth('90px'));\n        materialShadingRow.add(materialShading);\n        container.add(materialShadingRow);\n        var materialBlendingRow = new mrdoobui.UIRow();\n        var materialBlending = new mrdoobui.UISelect().setOptions({\n            0: strings.getKey('sidebar/material/blending/no'),\n            1: strings.getKey('sidebar/material/blending/normal'),\n            2: strings.getKey('sidebar/material/blending/additive'),\n            3: strings.getKey('sidebar/material/blending/subtractive'),\n            4: strings.getKey('sidebar/material/blending/multiply'),\n            5: strings.getKey('sidebar/material/blending/custom')\n        }).setWidth('150px').setFontSize('12px').onChange(update);\n        materialBlendingRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/blending')).setWidth('90px'));\n        materialBlendingRow.add(materialBlending);\n        container.add(materialBlendingRow);\n        var materialOpacityRow = new mrdoobui.UIRow();\n        var materialOpacity = new mrdoobui.UINumber(1).setWidth('60px').setRange(0, 1).onChange(update);\n        materialOpacityRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/opacity')).setWidth('90px'));\n        materialOpacityRow.add(materialOpacity);\n        container.add(materialOpacityRow);\n        var materialTransparentRow = new mrdoobui.UIRow();\n        var materialTransparent = new mrdoobui.UICheckbox().setLeft('100px').onChange(update);\n        materialTransparentRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/transparent')).setWidth('90px'));\n        materialTransparentRow.add(materialTransparent);\n        container.add(materialTransparentRow);\n        var materialAlphaTestRow = new mrdoobui.UIRow();\n        var materialAlphaTest = new mrdoobui.UINumber().setWidth('60px').setRange(0, 1).onChange(update);\n        materialAlphaTestRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/alphatest')).setWidth('90px'));\n        materialAlphaTestRow.add(materialAlphaTest);\n        container.add(materialAlphaTestRow);\n        var materialWireframeRow = new mrdoobui.UIRow();\n        var materialWireframe = new mrdoobui.UICheckbox(false).onChange(update);\n        materialWireframeRow.add(new mrdoobui.UIText(strings.getKey('sidebar/material/wireframe')).setWidth('90px'));\n        materialWireframeRow.add(materialWireframe);\n        container.add(materialWireframeRow);\n        function update() {\n            var object = currentObject;\n            var geometry = object.geometry;\n            var previousSelectedSlot = currentMaterialSlot;\n            currentMaterialSlot = parseInt(materialSlotSelect.getValue());\n            if (currentMaterialSlot !== previousSelectedSlot)\n                refreshUI(true);\n            var material = editor.getObjectMaterial(currentObject, currentMaterialSlot);\n            var textureWarning = false;\n            var objectHasUvs = false;\n            if (object.isSprite)\n                objectHasUvs = true;\n            if (geometry.isGeometry && geometry.faceVertexUvs[0].length > 0)\n                objectHasUvs = true;\n            if (geometry.isBufferGeometry && geometry.attributes.uv !== undefined)\n                objectHasUvs = true;\n            if (material) {\n                if (material.uuid !== undefined && material.uuid !== materialUUID.getValue()) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'uuid', materialUUID.getValue(), currentMaterialSlot));\n                }\n                if (material.type !== materialClass.getValue()) {\n                    material = new materialClasses[(materialClass.getValue())]();\n                    if (material.type === 'RawShaderMaterial') {\n                        material.vertexShader = vertexShaderVariables + material.vertexShader;\n                    }\n                    if (Array.isArray(currentObject.material)) {\n                        editor.removeMaterial(currentObject.material[currentMaterialSlot]);\n                    } else {\n                        editor.removeMaterial(currentObject.material);\n                    }\n                    editor.execute(new SetMaterialCommand(editor, currentObject, material, currentMaterialSlot), 'New Material: ' + materialClass.getValue());\n                    editor.addMaterial(material);\n                }\n                if (material.color !== undefined && material.color.getHex() !== materialColor.getHexValue()) {\n                    editor.execute(new SetMaterialColorCommand(editor, currentObject, 'color', materialColor.getHexValue(), currentMaterialSlot));\n                }\n                if (material.roughness !== undefined && Math.abs(material.roughness - materialRoughness.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'roughness', materialRoughness.getValue(), currentMaterialSlot));\n                }\n                if (material.metalness !== undefined && Math.abs(material.metalness - materialMetalness.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'metalness', materialMetalness.getValue(), currentMaterialSlot));\n                }\n                if (material.emissive !== undefined && material.emissive.getHex() !== materialEmissive.getHexValue()) {\n                    editor.execute(new SetMaterialColorCommand(editor, currentObject, 'emissive', materialEmissive.getHexValue(), currentMaterialSlot));\n                }\n                if (material.specular !== undefined && material.specular.getHex() !== materialSpecular.getHexValue()) {\n                    editor.execute(new SetMaterialColorCommand(editor, currentObject, 'specular', materialSpecular.getHexValue(), currentMaterialSlot));\n                }\n                if (material.shininess !== undefined && Math.abs(material.shininess - materialShininess.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'shininess', materialShininess.getValue(), currentMaterialSlot));\n                }\n                if (material.clearcoat !== undefined && Math.abs(material.clearcoat - materialClearcoat.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'clearcoat', materialClearcoat.getValue(), currentMaterialSlot));\n                }\n                if (material.clearcoatRoughness !== undefined && Math.abs(material.clearcoatRoughness - materialClearcoatRoughness.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'clearcoatRoughness', materialClearcoatRoughness.getValue(), currentMaterialSlot));\n                }\n                if (material.vertexColors !== undefined) {\n                    var vertexColors = materialVertexColors.getValue();\n                    if (material.vertexColors !== vertexColors) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'vertexColors', vertexColors, currentMaterialSlot));\n                    }\n                }\n                if (material.depthPacking !== undefined) {\n                    var depthPacking = parseInt(materialDepthPacking.getValue());\n                    if (material.depthPacking !== depthPacking) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'depthPacking', depthPacking, currentMaterialSlot));\n                    }\n                }\n                if (material.skinning !== undefined && material.skinning !== materialSkinning.getValue()) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'skinning', materialSkinning.getValue(), currentMaterialSlot));\n                }\n                if (material.map !== undefined) {\n                    var mapEnabled = materialMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var map = mapEnabled ? materialMap.getValue() : null;\n                        if (material.map !== map) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'map', map, currentMaterialSlot));\n                        }\n                    } else {\n                        if (mapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.matcap !== undefined) {\n                    var mapEnabled = materialMatcapMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var matcap = mapEnabled ? materialMatcapMap.getValue() : null;\n                        if (material.matcap !== matcap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'matcap', matcap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (mapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.alphaMap !== undefined) {\n                    var mapEnabled = materialAlphaMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var alphaMap = mapEnabled ? materialAlphaMap.getValue() : null;\n                        if (material.alphaMap !== alphaMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'alphaMap', alphaMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (mapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.bumpMap !== undefined) {\n                    var bumpMapEnabled = materialBumpMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var bumpMap = bumpMapEnabled ? materialBumpMap.getValue() : null;\n                        if (material.bumpMap !== bumpMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'bumpMap', bumpMap, currentMaterialSlot));\n                        }\n                        if (material.bumpScale !== materialBumpScale.getValue()) {\n                            editor.execute(new SetMaterialValueCommand(editor, currentObject, 'bumpScale', materialBumpScale.getValue(), currentMaterialSlot));\n                        }\n                    } else {\n                        if (bumpMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.normalMap !== undefined) {\n                    var normalMapEnabled = materialNormalMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var normalMap = normalMapEnabled ? materialNormalMap.getValue() : null;\n                        if (material.normalMap !== normalMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'normalMap', normalMap, currentMaterialSlot));\n                        }\n                        if (material.normalScale.x !== materialNormalScaleX.getValue() || material.normalScale.y !== materialNormalScaleY.getValue()) {\n                            var value = [\n                                materialNormalScaleX.getValue(),\n                                materialNormalScaleY.getValue()\n                            ];\n                            editor.execute(new SetMaterialVectorCommand(editor, currentObject, 'normalScale', value, currentMaterialSlot));\n                        }\n                    } else {\n                        if (normalMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.clearcoatNormalMap !== undefined) {\n                    var clearcoatNormalMapEnabled = materialClearcoatNormalMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var clearcoatNormalMap = clearcoatNormalMapEnabled ? materialClearcoatNormalMap.getValue() : null;\n                        if (material.clearcoatNormalMap !== clearcoatNormalMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'clearcoatNormalMap', clearcoatNormalMap, currentMaterialSlot));\n                        }\n                        if (material.clearcoatNormalScale.x !== materialClearcoatNormalScaleX.getValue() || material.clearcoatNormalScale.y !== materialClearcoatNormalScaleY.getValue()) {\n                            var value = [\n                                materialClearcoatNormalScaleX.getValue(),\n                                materialClearcoatNormalScaleY.getValue()\n                            ];\n                            editor.execute(new SetMaterialVectorCommand(editor, currentObject, 'clearcoatNormalScale', value, currentMaterialSlot));\n                        }\n                    } else {\n                        if (clearcoatNormalMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.displacementMap !== undefined) {\n                    var displacementMapEnabled = materialDisplacementMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var displacementMap = displacementMapEnabled ? materialDisplacementMap.getValue() : null;\n                        if (material.displacementMap !== displacementMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'displacementMap', displacementMap, currentMaterialSlot));\n                        }\n                        if (material.displacementScale !== materialDisplacementScale.getValue()) {\n                            editor.execute(new SetMaterialValueCommand(editor, currentObject, 'displacementScale', materialDisplacementScale.getValue(), currentMaterialSlot));\n                        }\n                    } else {\n                        if (displacementMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.roughnessMap !== undefined) {\n                    var roughnessMapEnabled = materialRoughnessMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var roughnessMap = roughnessMapEnabled ? materialRoughnessMap.getValue() : null;\n                        if (material.roughnessMap !== roughnessMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'roughnessMap', roughnessMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (roughnessMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.metalnessMap !== undefined) {\n                    var metalnessMapEnabled = materialMetalnessMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var metalnessMap = metalnessMapEnabled ? materialMetalnessMap.getValue() : null;\n                        if (material.metalnessMap !== metalnessMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'metalnessMap', metalnessMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (metalnessMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.specularMap !== undefined) {\n                    var specularMapEnabled = materialSpecularMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var specularMap = specularMapEnabled ? materialSpecularMap.getValue() : null;\n                        if (material.specularMap !== specularMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'specularMap', specularMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (specularMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.envMap !== undefined) {\n                    var envMapEnabled = materialEnvMapEnabled.getValue() === true;\n                    var envMap = envMapEnabled ? materialEnvMap.getValue() : null;\n                    if (material.envMap !== envMap) {\n                        editor.execute(new SetMaterialMapCommand(editor, currentObject, 'envMap', envMap, currentMaterialSlot));\n                    }\n                }\n                if (material.reflectivity !== undefined) {\n                    var reflectivity = materialReflectivity.getValue();\n                    if (material.reflectivity !== reflectivity) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'reflectivity', reflectivity, currentMaterialSlot));\n                    }\n                }\n                if (material.lightMap !== undefined) {\n                    var lightMapEnabled = materialLightMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var lightMap = lightMapEnabled ? materialLightMap.getValue() : null;\n                        if (material.lightMap !== lightMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'lightMap', lightMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (lightMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.aoMap !== undefined) {\n                    var aoMapEnabled = materialAOMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var aoMap = aoMapEnabled ? materialAOMap.getValue() : null;\n                        if (material.aoMap !== aoMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'aoMap', aoMap, currentMaterialSlot));\n                        }\n                        if (material.aoMapIntensity !== materialAOScale.getValue()) {\n                            editor.execute(new SetMaterialValueCommand(editor, currentObject, 'aoMapIntensity', materialAOScale.getValue(), currentMaterialSlot));\n                        }\n                    } else {\n                        if (aoMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.emissiveMap !== undefined) {\n                    var emissiveMapEnabled = materialEmissiveMapEnabled.getValue() === true;\n                    if (objectHasUvs) {\n                        var emissiveMap = emissiveMapEnabled ? materialEmissiveMap.getValue() : null;\n                        if (material.emissiveMap !== emissiveMap) {\n                            editor.execute(new SetMaterialMapCommand(editor, currentObject, 'emissiveMap', emissiveMap, currentMaterialSlot));\n                        }\n                    } else {\n                        if (emissiveMapEnabled)\n                            textureWarning = true;\n                    }\n                }\n                if (material.gradientMap !== undefined) {\n                    var gradientMapEnabled = materialGradientMapEnabled.getValue() === true;\n                    var gradientMap = gradientMapEnabled ? materialGradientMap.getValue() : null;\n                    if (material.gradientMap !== gradientMap) {\n                        editor.execute(new SetMaterialMapCommand(editor, currentObject, 'gradientMap', gradientMap, currentMaterialSlot));\n                    }\n                }\n                if (material.side !== undefined) {\n                    var side = parseInt(materialSide.getValue());\n                    if (material.side !== side) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'side', side, currentMaterialSlot));\n                    }\n                }\n                if (material.flatShading !== undefined) {\n                    var flatShading = materialShading.getValue();\n                    if (material.flatShading != flatShading) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'flatShading', flatShading, currentMaterialSlot));\n                    }\n                }\n                if (material.blending !== undefined) {\n                    var blending = parseInt(materialBlending.getValue());\n                    if (material.blending !== blending) {\n                        editor.execute(new SetMaterialValueCommand(editor, currentObject, 'blending', blending, currentMaterialSlot));\n                    }\n                }\n                if (material.opacity !== undefined && Math.abs(material.opacity - materialOpacity.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'opacity', materialOpacity.getValue(), currentMaterialSlot));\n                }\n                if (material.transparent !== undefined && material.transparent !== materialTransparent.getValue()) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'transparent', materialTransparent.getValue(), currentMaterialSlot));\n                }\n                if (material.alphaTest !== undefined && Math.abs(material.alphaTest - materialAlphaTest.getValue()) >= epsilon) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'alphaTest', materialAlphaTest.getValue(), currentMaterialSlot));\n                }\n                if (material.wireframe !== undefined && material.wireframe !== materialWireframe.getValue()) {\n                    editor.execute(new SetMaterialValueCommand(editor, currentObject, 'wireframe', materialWireframe.getValue(), currentMaterialSlot));\n                }\n                refreshUI();\n            }\n            if (textureWarning) {\n                console.warn(\"Can't set texture, model doesn't have texture coordinates\");\n            }\n        }\n        function updateMaterial(texture) {\n            if (texture !== null) {\n                if (texture.encoding !== THREE.sRGBEncoding) {\n                    texture.encoding = THREE.sRGBEncoding;\n                    var object = currentObject;\n                    if (object !== null) {\n                        object.material.needsUpdate = true;\n                    }\n                }\n            }\n            update();\n        }\n        function setRowVisibility() {\n            var properties = {\n                'name': materialNameRow,\n                'color': materialColorRow,\n                'roughness': materialRoughnessRow,\n                'metalness': materialMetalnessRow,\n                'emissive': materialEmissiveRow,\n                'specular': materialSpecularRow,\n                'shininess': materialShininessRow,\n                'clearcoat': materialClearcoatRow,\n                'clearcoatRoughness': materialClearcoatRoughnessRow,\n                'vertexShader': materialProgramRow,\n                'vertexColors': materialVertexColorsRow,\n                'vertexTangents': materialVertexTangentsRow,\n                'depthPacking': materialDepthPackingRow,\n                'skinning': materialSkinningRow,\n                'map': materialMapRow,\n                'matcap': materialMatcapMapRow,\n                'alphaMap': materialAlphaMapRow,\n                'bumpMap': materialBumpMapRow,\n                'normalMap': materialNormalMapRow,\n                'clearcoatNormalMap': materialClearcoatNormalMapRow,\n                'displacementMap': materialDisplacementMapRow,\n                'roughnessMap': materialRoughnessMapRow,\n                'metalnessMap': materialMetalnessMapRow,\n                'specularMap': materialSpecularMapRow,\n                'envMap': materialEnvMapRow,\n                'lightMap': materialLightMapRow,\n                'aoMap': materialAOMapRow,\n                'emissiveMap': materialEmissiveMapRow,\n                'gradientMap': materialGradientMapRow,\n                'side': materialSideRow,\n                'flatShading': materialShadingRow,\n                'blending': materialBlendingRow,\n                'opacity': materialOpacityRow,\n                'transparent': materialTransparentRow,\n                'alphaTest': materialAlphaTestRow,\n                'wireframe': materialWireframeRow\n            };\n            var material = currentObject.material;\n            if (Array.isArray(material)) {\n                materialSlotRow.setDisplay('');\n                if (material.length === 0)\n                    return;\n                material = material[currentMaterialSlot];\n            } else {\n                materialSlotRow.setDisplay('none');\n            }\n            for (var property in properties) {\n                properties[property].setDisplay(material[property] !== undefined ? '' : 'none');\n            }\n        }\n        function refreshUI(resetTextureSelectors) {\n            if (!currentObject)\n                return;\n            var material = currentObject.material;\n            if (Array.isArray(material)) {\n                var slotOptions = {};\n                currentMaterialSlot = Math.max(0, Math.min(material.length, currentMaterialSlot));\n                for (var i = 0; i < material.length; i++) {\n                    slotOptions[i] = String(i + 1) + ': ' + material[i].name;\n                }\n                materialSlotSelect.setOptions(slotOptions).setValue(currentMaterialSlot);\n            }\n            material = editor.getObjectMaterial(currentObject, currentMaterialSlot);\n            if (material.uuid !== undefined) {\n                materialUUID.setValue(material.uuid);\n            }\n            if (material.name !== undefined) {\n                materialName.setValue(material.name);\n            }\n            materialClass.setValue(material.type);\n            if (material.color !== undefined) {\n                materialColor.setHexValue(material.color.getHexString());\n            }\n            if (material.roughness !== undefined) {\n                materialRoughness.setValue(material.roughness);\n            }\n            if (material.metalness !== undefined) {\n                materialMetalness.setValue(material.metalness);\n            }\n            if (material.emissive !== undefined) {\n                materialEmissive.setHexValue(material.emissive.getHexString());\n            }\n            if (material.specular !== undefined) {\n                materialSpecular.setHexValue(material.specular.getHexString());\n            }\n            if (material.shininess !== undefined) {\n                materialShininess.setValue(material.shininess);\n            }\n            if (material.clearcoat !== undefined) {\n                materialClearcoat.setValue(material.clearcoat);\n            }\n            if (material.clearcoatRoughness !== undefined) {\n                materialClearcoatRoughness.setValue(material.clearcoatRoughness);\n            }\n            if (material.vertexColors !== undefined) {\n                materialVertexColors.setValue(material.vertexColors);\n            }\n            if (material.depthPacking !== undefined) {\n                materialDepthPacking.setValue(material.depthPacking);\n            }\n            if (material.skinning !== undefined) {\n                materialSkinning.setValue(material.skinning);\n            }\n            if (material.map !== undefined) {\n                materialMapEnabled.setValue(material.map !== null);\n                if (material.map !== null || resetTextureSelectors) {\n                    materialMap.setValue(material.map);\n                }\n            }\n            if (material.matcap !== undefined) {\n                materialMatcapMapEnabled.setValue(material.matcap !== null);\n                if (material.matcap !== null || resetTextureSelectors) {\n                    materialMatcapMap.setValue(material.matcap);\n                }\n            }\n            if (material.alphaMap !== undefined) {\n                materialAlphaMapEnabled.setValue(material.alphaMap !== null);\n                if (material.alphaMap !== null || resetTextureSelectors) {\n                    materialAlphaMap.setValue(material.alphaMap);\n                }\n            }\n            if (material.bumpMap !== undefined) {\n                materialBumpMapEnabled.setValue(material.bumpMap !== null);\n                if (material.bumpMap !== null || resetTextureSelectors) {\n                    materialBumpMap.setValue(material.bumpMap);\n                }\n                materialBumpScale.setValue(material.bumpScale);\n            }\n            if (material.normalMap !== undefined) {\n                materialNormalMapEnabled.setValue(material.normalMap !== null);\n                if (material.normalMap !== null || resetTextureSelectors) {\n                    materialNormalMap.setValue(material.normalMap);\n                }\n                materialNormalScaleX.setValue(material.normalScale.x);\n                materialNormalScaleY.setValue(material.normalScale.y);\n            }\n            if (material.clearcoatNormalMap !== undefined) {\n                materialClearcoatNormalMapEnabled.setValue(material.clearcoatNormalMap !== null);\n                if (material.clearcoatNormalMap !== null || resetTextureSelectors) {\n                    materialClearcoatNormalMap.setValue(material.clearcoatNormalMap);\n                }\n                materialClearcoatNormalScaleX.setValue(material.clearcoatNormalScale.x);\n                materialClearcoatNormalScaleY.setValue(material.clearcoatNormalScale.y);\n            }\n            if (material.displacementMap !== undefined) {\n                materialDisplacementMapEnabled.setValue(material.displacementMap !== null);\n                if (material.displacementMap !== null || resetTextureSelectors) {\n                    materialDisplacementMap.setValue(material.displacementMap);\n                }\n                materialDisplacementScale.setValue(material.displacementScale);\n            }\n            if (material.roughnessMap !== undefined) {\n                materialRoughnessMapEnabled.setValue(material.roughnessMap !== null);\n                if (material.roughnessMap !== null || resetTextureSelectors) {\n                    materialRoughnessMap.setValue(material.roughnessMap);\n                }\n            }\n            if (material.metalnessMap !== undefined) {\n                materialMetalnessMapEnabled.setValue(material.metalnessMap !== null);\n                if (material.metalnessMap !== null || resetTextureSelectors) {\n                    materialMetalnessMap.setValue(material.metalnessMap);\n                }\n            }\n            if (material.specularMap !== undefined) {\n                materialSpecularMapEnabled.setValue(material.specularMap !== null);\n                if (material.specularMap !== null || resetTextureSelectors) {\n                    materialSpecularMap.setValue(material.specularMap);\n                }\n            }\n            if (material.envMap !== undefined) {\n                materialEnvMapEnabled.setValue(material.envMap !== null);\n                if (material.envMap !== null || resetTextureSelectors) {\n                    materialEnvMap.setValue(material.envMap);\n                }\n            }\n            if (material.gradientMap !== undefined) {\n                materialGradientMapEnabled.setValue(material.gradientMap !== null);\n                if (material.gradientMap !== null || resetTextureSelectors) {\n                    materialGradientMap.setValue(material.gradientMap);\n                }\n            }\n            if (material.reflectivity !== undefined) {\n                materialReflectivity.setValue(material.reflectivity);\n            }\n            if (material.lightMap !== undefined) {\n                materialLightMapEnabled.setValue(material.lightMap !== null);\n                if (material.lightMap !== null || resetTextureSelectors) {\n                    materialLightMap.setValue(material.lightMap);\n                }\n            }\n            if (material.aoMap !== undefined) {\n                materialAOMapEnabled.setValue(material.aoMap !== null);\n                if (material.aoMap !== null || resetTextureSelectors) {\n                    materialAOMap.setValue(material.aoMap);\n                }\n                materialAOScale.setValue(material.aoMapIntensity);\n            }\n            if (material.emissiveMap !== undefined) {\n                materialEmissiveMapEnabled.setValue(material.emissiveMap !== null);\n                if (material.emissiveMap !== null || resetTextureSelectors) {\n                    materialEmissiveMap.setValue(material.emissiveMap);\n                }\n            }\n            if (material.side !== undefined) {\n                materialSide.setValue(material.side);\n            }\n            if (material.flatShading !== undefined) {\n                materialShading.setValue(material.flatShading);\n            }\n            if (material.blending !== undefined) {\n                materialBlending.setValue(material.blending);\n            }\n            if (material.opacity !== undefined) {\n                materialOpacity.setValue(material.opacity);\n            }\n            if (material.transparent !== undefined) {\n                materialTransparent.setValue(material.transparent);\n            }\n            if (material.alphaTest !== undefined) {\n                materialAlphaTest.setValue(material.alphaTest);\n            }\n            if (material.wireframe !== undefined) {\n                materialWireframe.setValue(material.wireframe);\n            }\n            setRowVisibility();\n        }\n        signals.objectSelected.add(function (object) {\n            var hasMaterial = false;\n            if (object && object.material) {\n                hasMaterial = true;\n                if (Array.isArray(object.material) && object.material.length === 0) {\n                    hasMaterial = false;\n                }\n            }\n            if (hasMaterial) {\n                var objectChanged = object !== currentObject;\n                currentObject = object;\n                refreshUI(objectChanged);\n                container.setDisplay('');\n            } else {\n                currentObject = null;\n                container.setDisplay('none');\n            }\n        });\n        signals.materialChanged.add(function () {\n            refreshUI();\n        });\n        var vertexShaderVariables = [\n            'uniform mat4 projectionMatrix;',\n            'uniform mat4 modelViewMatrix;\\n',\n            'attribute vec3 position;\\n\\n'\n        ].join('\\n');\n        return container;\n    };\n    return { SidebarMaterial };\n});"]}