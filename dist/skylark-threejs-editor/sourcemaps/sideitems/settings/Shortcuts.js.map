{"version":3,"sources":["sideitems/settings/Shortcuts.js"],"names":["define","mrdoobui","RemoveObjectCommand","SidebarSettingsShortcuts","editor","strings","IS_MAC","navigator","platform","toUpperCase","indexOf","isValidKeyBinding","key","match","config","signals","container","UIDiv","add","UIBreak","shortcuts","createShortcutInput","name","configName","shortcutRow","UIRow","shortcutInput","UIInput","setWidth","setFontSize","setTextTransform","onChange","value","getValue","toLowerCase","setKey","dom","addEventListener","select","setValue","getKey","event","blur","undefined","maxLength","UIText","i","length","document","preventDefault","object","selected","parent","execute","transformModeChanged","dispatch","metaKey","ctrlKey","shiftKey","redo","undo","focus"],"mappings":";;;;;;;AAAAA,QACI,mBACA,sCACD,SAAUC,EAAUC,GACnB,aA6FA,OAASC,yBA5FsB,SAAUC,GACrC,IAAIC,EAAUD,EAAOC,QACjBC,EAASC,UAAUC,SAASC,cAAcC,QAAQ,QAAU,EAChE,SAASC,EAAkBC,GACvB,OAAOA,EAAIC,MAAM,kBAErB,IAAIC,EAASV,EAAOU,OAChBC,EAAUX,EAAOW,QACjBC,EAAY,IAAIf,EAASgB,MAC7BD,EAAUE,IAAI,IAAIjB,EAASkB,SAC3B,IAAIC,GACA,YACA,SACA,QACA,OACA,SAEJ,SAASC,EAAoBC,GACzB,IAAIC,EAAa,sBAAwBD,EACrCE,EAAc,IAAIvB,EAASwB,MAC3BC,GAAgB,IAAIzB,EAAS0B,SAAUC,SAAS,SAASC,YAAY,QACzEH,EAAcI,iBAAiB,aAC/BJ,EAAcK,SAAS,WACnB,IAAIC,EAAQN,EAAcO,WAAWC,cACjCvB,EAAkBqB,IAClBlB,EAAOqB,OAAOZ,EAAYS,KAGlCN,EAAcU,IAAIC,iBAAiB,QAAS,WACxCX,EAAcU,IAAIE,WAEtBZ,EAAcU,IAAIC,iBAAiB,OAAQ,WAClC1B,EAAkBe,EAAcO,aACjCP,EAAca,SAASzB,EAAO0B,OAAOjB,MAG7CG,EAAcU,IAAIC,iBAAiB,QAAS,SAAUI,GAC9C9B,EAAkB8B,EAAM7B,MACxBc,EAAcU,IAAIM,cAGQC,IAA9B7B,EAAO0B,OAAOjB,IACdG,EAAca,SAASzB,EAAO0B,OAAOjB,IAEzCG,EAAcU,IAAIQ,UAAY,EAC9BpB,EAAYN,IAAI,IAAIjB,EAAS4C,OAAOxC,EAAQmC,OAAO,8BAAgClB,IAAOQ,iBAAiB,cAAcF,SAAS,SAClIJ,EAAYN,IAAIQ,GAChBV,EAAUE,IAAIM,GAElB,IAAK,IAAIsB,EAAI,EAAGA,EAAI1B,EAAU2B,OAAQD,IAClCzB,EAAoBD,EAAU0B,IAwClC,OAtCAE,SAASX,iBAAiB,UAAW,SAAUI,GAC3C,OAAQA,EAAM7B,IAAIsB,eAClB,IAAK,YACDO,EAAMQ,iBACV,IAAK,SACD,IAAIC,EAAS9C,EAAO+C,SACpB,GAAe,OAAXD,EACA,OAEW,OADFA,EAAOE,QAEhBhD,EAAOiD,QAAQ,IAAInD,EAAoBE,EAAQ8C,IACnD,MACJ,KAAKpC,EAAO0B,OAAO,gCACfzB,EAAQuC,qBAAqBC,SAAS,aACtC,MACJ,KAAKzC,EAAO0B,OAAO,6BACfzB,EAAQuC,qBAAqBC,SAAS,UACtC,MACJ,KAAKzC,EAAO0B,OAAO,4BACfzB,EAAQuC,qBAAqBC,SAAS,SACtC,MACJ,KAAKzC,EAAO0B,OAAO,4BACXlC,EAASmC,EAAMe,QAAUf,EAAMgB,WAC/BhB,EAAMQ,iBACFR,EAAMiB,SACNtD,EAAOuD,OAEPvD,EAAOwD,QAGf,MACJ,KAAK9C,EAAO0B,OAAO,4BACS,OAApBpC,EAAO+C,UACP/C,EAAOyD,MAAMzD,EAAO+C,aAI7B,GACInC","file":"../../../sideitems/settings/Shortcuts.js","sourcesContent":["define([\n    'skylark-mrdoobui',\n    '../../commands/RemoveObjectCommand'\n], function (mrdoobui, RemoveObjectCommand) {\n    'use strict';\n    var SidebarSettingsShortcuts = function (editor) {\n        var strings = editor.strings;\n        var IS_MAC = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n        function isValidKeyBinding(key) {\n            return key.match(/^[A-Za-z0-9]$/i);\n        }\n        var config = editor.config;\n        var signals = editor.signals;\n        var container = new mrdoobui.UIDiv();\n        container.add(new mrdoobui.UIBreak());\n        var shortcuts = [\n            'translate',\n            'rotate',\n            'scale',\n            'undo',\n            'focus'\n        ];\n        function createShortcutInput(name) {\n            var configName = 'settings/shortcuts/' + name;\n            var shortcutRow = new mrdoobui.UIRow();\n            var shortcutInput = new mrdoobui.UIInput().setWidth('150px').setFontSize('12px');\n            shortcutInput.setTextTransform('lowercase');\n            shortcutInput.onChange(function () {\n                var value = shortcutInput.getValue().toLowerCase();\n                if (isValidKeyBinding(value)) {\n                    config.setKey(configName, value);\n                }\n            });\n            shortcutInput.dom.addEventListener('click', function () {\n                shortcutInput.dom.select();\n            });\n            shortcutInput.dom.addEventListener('blur', function () {\n                if (!isValidKeyBinding(shortcutInput.getValue())) {\n                    shortcutInput.setValue(config.getKey(configName));\n                }\n            });\n            shortcutInput.dom.addEventListener('keyup', function (event) {\n                if (isValidKeyBinding(event.key)) {\n                    shortcutInput.dom.blur();\n                }\n            });\n            if (config.getKey(configName) !== undefined) {\n                shortcutInput.setValue(config.getKey(configName));\n            }\n            shortcutInput.dom.maxLength = 1;\n            shortcutRow.add(new mrdoobui.UIText(strings.getKey('sidebar/settings/shortcuts/' + name)).setTextTransform('capitalize').setWidth('90px'));\n            shortcutRow.add(shortcutInput);\n            container.add(shortcutRow);\n        }\n        for (var i = 0; i < shortcuts.length; i++) {\n            createShortcutInput(shortcuts[i]);\n        }\n        document.addEventListener('keydown', function (event) {\n            switch (event.key.toLowerCase()) {\n            case 'backspace':\n                event.preventDefault();\n            case 'delete':\n                var object = editor.selected;\n                if (object === null)\n                    return;\n                var parent = object.parent;\n                if (parent !== null)\n                    editor.execute(new RemoveObjectCommand(editor, object));\n                break;\n            case config.getKey('settings/shortcuts/translate'):\n                signals.transformModeChanged.dispatch('translate');\n                break;\n            case config.getKey('settings/shortcuts/rotate'):\n                signals.transformModeChanged.dispatch('rotate');\n                break;\n            case config.getKey('settings/shortcuts/scale'):\n                signals.transformModeChanged.dispatch('scale');\n                break;\n            case config.getKey('settings/shortcuts/undo'):\n                if (IS_MAC ? event.metaKey : event.ctrlKey) {\n                    event.preventDefault();\n                    if (event.shiftKey) {\n                        editor.redo();\n                    } else {\n                        editor.undo();\n                    }\n                }\n                break;\n            case config.getKey('settings/shortcuts/focus'):\n                if (editor.selected !== null) {\n                    editor.focus(editor.selected);\n                }\n                break;\n            }\n        }, false);\n        return container;\n    };\n    return { SidebarSettingsShortcuts };\n});"]}