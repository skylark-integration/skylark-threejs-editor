{"version":3,"sources":["Script.js"],"names":["define","mrdoobui","SetScriptValueCommand","SetMaterialValueCommand","editor","signals","container","UIPanel","setId","setPosition","setBackgroundColor","setDisplay","header","setPadding","add","title","UIText","setColor","renderer","delay","currentMode","currentScript","currentObject","buttonSVG","svg","document","createElementNS","setAttribute","path","appendChild","close","UIElement","setTop","setRight","setCursor","onClick","rendererChanged","newRenderer","codemirror","CodeMirror","dom","value","lineNumbers","matchBrackets","indentWithTabs","tabSize","indentUnit","hintOptions","completeSingle","setOption","on","state","focused","clearTimeout","setTimeout","getValue","validate","cmd","json","JSON","parse","stringify","material","defines","updatable","execute","uniforms","attributes","source","getWrapperElement","addEventListener","event","stopPropagation","errorLines","widgets","string","valid","errors","operation","length","removeLineClass","shift","removeLineWidget","syntax","esprima","tolerant","error","push","lineNumber","message","i","replace","jsonlint","parseError","info","split","loc","first_line","shaderType","glslprep","Shader","VERTEX","FRAGMENT","parseGlsl","SyntaxError","line","console","stack","THREE","WebGLRenderer","needsUpdate","materialChanged","dispatch","programs","parseMessage","n","diagnostics","undefined","runnable","shaderInfo","lineOffset","prefix","parseResult","exec","log","createElement","className","textContent","Math","max","addLineClass","widget","addLineWidget","server","TernServer","caseInsensitive","plugins","threejs","Ctrl-Space","cm","complete","Ctrl-I","showType","Ctrl-O","showDocs","Alt-.","jumpToDef","Alt-,","jumpBack","Ctrl-Q","rename","Ctrl-.","selectName","updateArgHints","kb","typed","String","fromCharCode","which","keyCode","editorCleared","editScript","object","script","mode","name","setValue","vertexShader","fragmentShader","clearHistory","scriptRemoved"],"mappings":";;;;;;;AAAAA,QACI,mBACA,mCACA,sCACD,SAAUC,EAAUC,EAAuBC,GAC1C,aA0RA,OAzRa,SAAUC,GACnB,IAAIC,EAAUD,EAAOC,QACjBC,EAAY,IAAIL,EAASM,QAC7BD,EAAUE,MAAM,UAChBF,EAAUG,YAAY,YACtBH,EAAUI,mBAAmB,WAC7BJ,EAAUK,WAAW,QACrB,IAAIC,EAAS,IAAIX,EAASM,QAC1BK,EAAOC,WAAW,QAClBP,EAAUQ,IAAIF,GACd,IAAIG,GAAQ,IAAId,EAASe,QAASC,SAAS,QAC3CL,EAAOE,IAAIC,GACX,IAmBIG,EAIAC,EACAC,EACAC,EACAC,EA1BAC,EAAY,WACZ,IAAIC,EAAMC,SAASC,gBAAgB,6BAA8B,OACjEF,EAAIG,aAAa,QAAS,IAC1BH,EAAIG,aAAa,SAAU,IAC3B,IAAIC,EAAOH,SAASC,gBAAgB,6BAA8B,QAIlE,OAHAE,EAAKD,aAAa,IAAK,iCACvBC,EAAKD,aAAa,SAAU,QAC5BH,EAAIK,YAAYD,GACTJ,EARK,GAUZM,EAAQ,IAAI7B,EAAS8B,UAAUR,GACnCO,EAAMrB,YAAY,YAClBqB,EAAME,OAAO,OACbF,EAAMG,SAAS,OACfH,EAAMI,UAAU,WAChBJ,EAAMK,QAAQ,WACV7B,EAAUK,WAAW,UAEzBC,EAAOE,IAAIgB,GAEXzB,EAAQ+B,gBAAgBtB,IAAI,SAAUuB,GAClCnB,EAAWmB,IAMf,IAAIC,EAAaC,WAAWjC,EAAUkC,KAClCC,MAAO,GACPC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,QAAS,EACTC,WAAY,EACZC,aAAeC,gBAAgB,KAEnCV,EAAWW,UAAU,QAAS,WAC9BX,EAAWY,GAAG,SAAU,YACa,IAA7BZ,EAAWa,MAAMC,UAErBC,aAAalC,GACbA,EAAQmC,WAAW,WACf,IAAIb,EAAQH,EAAWiB,WACvB,GAAKC,EAASf,GAEd,GAA6B,iBAAlBpB,GAMX,GAAsB,gBAAlBA,EAAJ,CAEA,IAYQoC,EAZJC,EAAOC,KAAKC,MAAMnB,GAClBkB,KAAKE,UAAUvC,EAAcwC,SAASC,WAAaJ,KAAKE,UAAUH,EAAKK,YACnEN,EAAM,IAAItD,EAAwBC,EAAQkB,EAAe,UAAWoC,EAAKK,UACzEC,WAAY,EAChB5D,EAAO6D,QAAQR,IAEfE,KAAKE,UAAUvC,EAAcwC,SAASI,YAAcP,KAAKE,UAAUH,EAAKQ,aACpET,EAAM,IAAItD,EAAwBC,EAAQkB,EAAe,WAAYoC,EAAKQ,WAC1EF,WAAY,EAChB5D,EAAO6D,QAAQR,IAEfE,KAAKE,UAAUvC,EAAcwC,SAASK,cAAgBR,KAAKE,UAAUH,EAAKS,eACtEV,EAAM,IAAItD,EAAwBC,EAAQkB,EAAe,aAAcoC,EAAKS,aAC5EH,WAAY,EAChB5D,EAAO6D,QAAQR,UArBXhB,IAAUpB,EAAc+C,QACxBhE,EAAO6D,QAAQ,IAAI/D,EAAsBE,EAAQkB,EAAeD,EAAe,SAAUoB,KAsBlG,QAEOH,EAAW+B,oBACjBC,iBAAiB,UAAW,SAAUC,GAC1CA,EAAMC,oBAEV,IAAIC,KACAC,KACAlB,EAAW,SAAUmB,GACrB,IAAIC,EACAC,KACJ,OAAOvC,EAAWwC,UAAU,WACxB,KAAOL,EAAWM,OAAS,GACvBzC,EAAW0C,gBAAgBP,EAAWQ,QAAS,aAAc,aAEjE,KAAOP,EAAQK,OAAS,GACpBzC,EAAW4C,iBAAiBR,EAAQO,SAExC,OAAQ7D,GACR,IAAK,aACD,IACI,IAAI+D,EAASC,QAAQxB,MAAMe,GAAUU,UAAU,IAC/CR,EAASM,EAAON,OAClB,MAAOS,GACLT,EAAOU,MACHC,WAAYF,EAAME,WAAa,EAC/BC,QAASH,EAAMG,UAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAOE,OAAQW,KAC3BJ,EAAQT,EAAOa,IACbD,QAAUH,EAAMG,QAAQE,QAAQ,gBAAiB,IAE3D,MACJ,IAAK,OACDd,KACAe,SAASC,WAAa,SAAUJ,EAASK,GACrCL,EAAUA,EAAQM,MAAM,MAAM,GAC9BlB,EAAOU,MACHC,WAAYM,EAAKE,IAAIC,WAAa,EAClCR,QAASA,KAGjB,IACIG,SAAShC,MAAMe,GACjB,MAAOW,IAET,MACJ,IAAK,OACD,IACI,IAAIY,EAA+B,iBAAlB7E,EAAmC8E,SAASC,OAAOC,OAASF,SAASC,OAAOE,SAC7FH,SAASI,UAAU5B,EAAQuB,GAC7B,MAAOZ,GACDA,aAAiBa,SAASK,YAC1B3B,EAAOU,MACHC,WAAYF,EAAMmB,KAClBhB,QAAS,iBAAmBH,EAAMG,UAGtCiB,QAAQpB,MAAMA,EAAMqB,OAASrB,GAGrC,GAAsB,IAAlBT,EAAOE,OACP,MACJ,GAAI7D,aAAoB0F,MAAMC,eAAkB,EAC5C,MACJvF,EAAcwC,SAASzC,GAAiBsD,EACxCrD,EAAcwC,SAASgD,aAAc,EACrCzG,EAAQ0G,gBAAgBC,SAAS1F,EAAcwC,UAC/C,IAAImD,EAAW/F,EAAS4E,KAAKmB,SAC7BrC,GAAQ,EAER,IADA,IAAIsC,EAAe,uCACHC,GAAPzB,EAAI,EAAOuB,EAASlC,QAAQW,IAAMyB,IAAKzB,EAAG,CAC/C,IAAI0B,EAAcH,EAASvB,GAAG0B,YAC9B,QAAoBC,IAAhBD,GAA6BA,EAAYtD,WAAaxC,EAAcwC,SAAxE,CAEKsD,EAAYE,WACb1C,GAAQ,GAGZ,IAFA,IAAI2C,EAAaH,EAAY/F,GACzBmG,EAAaD,EAAWE,OAAO1B,MAAM,cAAchB,SAC1C,CACT,IAAI2C,EAAcR,EAAaS,KAAKJ,EAAWK,KAC/C,GAAoB,OAAhBF,EACA,MACJ7C,EAAOU,MACHC,WAAYkC,EAAY,GAAKF,EAC7B/B,QAASiC,EAAY,KAG7B,QAGR,IAAShC,EAAI,EAAGA,EAAIb,EAAOE,OAAQW,IAAK,CACpC,IAAIJ,EAAQT,EAAOa,GACfD,EAAUhE,SAASoG,cAAc,OACrCpC,EAAQqC,UAAY,gBACpBrC,EAAQsC,YAAczC,EAAMG,QAC5B,IAAID,EAAawC,KAAKC,IAAI3C,EAAME,WAAY,GAC5Cf,EAAWc,KAAKC,GAChBlD,EAAW4F,aAAa1C,EAAY,aAAc,aAClD,IAAI2C,EAAS7F,EAAW8F,cAAc5C,EAAYC,GAClDf,EAAQa,KAAK4C,GAEjB,YAAiBd,IAAVzC,EAAsBA,EAA0B,IAAlBC,EAAOE,UAGhDsD,EAAS,IAAI9F,WAAW+F,YACxBC,iBAAiB,EACjBC,SAAWC,QAAS,QA0FxB,OAxFAnG,EAAWW,UAAU,aACjByF,aAAc,SAAUC,GACpBN,EAAOO,SAASD,IAEpBE,SAAU,SAAUF,GAChBN,EAAOS,SAASH,IAEpBI,SAAU,SAAUJ,GAChBN,EAAOW,SAASL,IAEpBM,QAAS,SAAUN,GACfN,EAAOa,UAAUP,IAErBQ,QAAS,SAAUR,GACfN,EAAOe,SAAST,IAEpBU,SAAU,SAAUV,GAChBN,EAAOiB,OAAOX,IAElBY,SAAU,SAAUZ,GAChBN,EAAOmB,WAAWb,MAG1BrG,EAAWY,GAAG,iBAAkB,SAAUyF,GAClB,eAAhBvH,GAEJiH,EAAOoB,eAAed,KAE1BrG,EAAWY,GAAG,WAAY,SAAUyF,EAAIe,GACpC,GAAoB,eAAhBtI,EAAJ,CAEA,IAAIuI,EAAQC,OAAOC,aAAaH,EAAGI,OAASJ,EAAGK,SAC3C,SAASpC,KAAKgC,IACdtB,EAAOO,SAASD,MAGxBtI,EAAQ2J,cAAclJ,IAAI,WACtBR,EAAUK,WAAW,UAEzBN,EAAQ4J,WAAWnJ,IAAI,SAAUoJ,EAAQC,GACrC,IAAIC,EAAMC,EAAMjG,EAChB,GAAsB,iBAAX+F,EACPC,EAAO,aACPC,EAAOF,EAAOE,KACdjG,EAAS+F,EAAO/F,OAChBrD,EAAMuJ,SAASJ,EAAOG,KAAO,MAAQA,OAClC,CACH,OAAQF,GACR,IAAK,eACDC,EAAO,OACPC,EAAO,gBACPjG,EAAS8F,EAAOpG,SAASyG,cAAgB,GACzC,MACJ,IAAK,iBACDH,EAAO,OACPC,EAAO,kBACPjG,EAAS8F,EAAOpG,SAAS0G,gBAAkB,GAC3C,MACJ,IAAK,cACDJ,EAAO,OACPC,EAAO,qBACP,IAAI3G,GACAK,QAASmG,EAAOpG,SAASC,QACzBG,SAAUgG,EAAOpG,SAASI,SAC1BC,WAAY+F,EAAOpG,SAASK,YAEhCC,EAAST,KAAKE,UAAUH,EAAM,KAAM,MAExC3C,EAAMuJ,SAASJ,EAAOpG,SAASuG,KAAO,MAAQA,GAElDjJ,EAAcgJ,EACd/I,EAAgB8I,EAChB7I,EAAgB4I,EAChB5J,EAAUK,WAAW,IACrB2B,EAAWgI,SAASlG,GACpB9B,EAAWmI,eACE,SAATL,IACAA,GACIC,KAAM,aACN3G,MAAM,IAEdpB,EAAWW,UAAU,OAAQmH,KAEjC/J,EAAQqK,cAAc5J,IAAI,SAAUqJ,GAC5B9I,IAAkB8I,GAClB7J,EAAUK,WAAW,UAGtBL","file":"../Script.js","sourcesContent":["define([\n    'skylark-mrdoobui',\n    './commands/SetScriptValueCommand',\n    './commands/SetMaterialValueCommand'\n], function (mrdoobui, SetScriptValueCommand, SetMaterialValueCommand) {\n    'use strict';\n    var Script = function (editor) {\n        var signals = editor.signals;\n        var container = new mrdoobui.UIPanel();\n        container.setId('script');\n        container.setPosition('absolute');\n        container.setBackgroundColor('#272822');\n        container.setDisplay('none');\n        var header = new mrdoobui.UIPanel();\n        header.setPadding('10px');\n        container.add(header);\n        var title = new mrdoobui.UIText().setColor('#fff');\n        header.add(title);\n        var buttonSVG = function () {\n            var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            svg.setAttribute('width', 32);\n            svg.setAttribute('height', 32);\n            var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            path.setAttribute('d', 'M 12,12 L 22,22 M 22,12 12,22');\n            path.setAttribute('stroke', '#fff');\n            svg.appendChild(path);\n            return svg;\n        }();\n        var close = new mrdoobui.UIElement(buttonSVG);\n        close.setPosition('absolute');\n        close.setTop('3px');\n        close.setRight('1px');\n        close.setCursor('pointer');\n        close.onClick(function () {\n            container.setDisplay('none');\n        });\n        header.add(close);\n        var renderer;\n        signals.rendererChanged.add(function (newRenderer) {\n            renderer = newRenderer;\n        });\n        var delay;\n        var currentMode;\n        var currentScript;\n        var currentObject;\n        var codemirror = CodeMirror(container.dom, {\n            value: '',\n            lineNumbers: true,\n            matchBrackets: true,\n            indentWithTabs: true,\n            tabSize: 4,\n            indentUnit: 4,\n            hintOptions: { completeSingle: false }\n        });\n        codemirror.setOption('theme', 'monokai');\n        codemirror.on('change', function () {\n            if (codemirror.state.focused === false)\n                return;\n            clearTimeout(delay);\n            delay = setTimeout(function () {\n                var value = codemirror.getValue();\n                if (!validate(value))\n                    return;\n                if (typeof currentScript === 'object') {\n                    if (value !== currentScript.source) {\n                        editor.execute(new SetScriptValueCommand(editor, currentObject, currentScript, 'source', value));\n                    }\n                    return;\n                }\n                if (currentScript !== 'programInfo')\n                    return;\n                var json = JSON.parse(value);\n                if (JSON.stringify(currentObject.material.defines) !== JSON.stringify(json.defines)) {\n                    var cmd = new SetMaterialValueCommand(editor, currentObject, 'defines', json.defines);\n                    cmd.updatable = false;\n                    editor.execute(cmd);\n                }\n                if (JSON.stringify(currentObject.material.uniforms) !== JSON.stringify(json.uniforms)) {\n                    var cmd = new SetMaterialValueCommand(editor, currentObject, 'uniforms', json.uniforms);\n                    cmd.updatable = false;\n                    editor.execute(cmd);\n                }\n                if (JSON.stringify(currentObject.material.attributes) !== JSON.stringify(json.attributes)) {\n                    var cmd = new SetMaterialValueCommand(editor, currentObject, 'attributes', json.attributes);\n                    cmd.updatable = false;\n                    editor.execute(cmd);\n                }\n            }, 300);\n        });\n        var wrapper = codemirror.getWrapperElement();\n        wrapper.addEventListener('keydown', function (event) {\n            event.stopPropagation();\n        });\n        var errorLines = [];\n        var widgets = [];\n        var validate = function (string) {\n            var valid;\n            var errors = [];\n            return codemirror.operation(function () {\n                while (errorLines.length > 0) {\n                    codemirror.removeLineClass(errorLines.shift(), 'background', 'errorLine');\n                }\n                while (widgets.length > 0) {\n                    codemirror.removeLineWidget(widgets.shift());\n                }\n                switch (currentMode) {\n                case 'javascript':\n                    try {\n                        var syntax = esprima.parse(string, { tolerant: true });\n                        errors = syntax.errors;\n                    } catch (error) {\n                        errors.push({\n                            lineNumber: error.lineNumber - 1,\n                            message: error.message\n                        });\n                    }\n                    for (var i = 0; i < errors.length; i++) {\n                        var error = errors[i];\n                        error.message = error.message.replace(/Line [0-9]+: /, '');\n                    }\n                    break;\n                case 'json':\n                    errors = [];\n                    jsonlint.parseError = function (message, info) {\n                        message = message.split('\\n')[3];\n                        errors.push({\n                            lineNumber: info.loc.first_line - 1,\n                            message: message\n                        });\n                    };\n                    try {\n                        jsonlint.parse(string);\n                    } catch (error) {\n                    }\n                    break;\n                case 'glsl':\n                    try {\n                        var shaderType = currentScript === 'vertexShader' ? glslprep.Shader.VERTEX : glslprep.Shader.FRAGMENT;\n                        glslprep.parseGlsl(string, shaderType);\n                    } catch (error) {\n                        if (error instanceof glslprep.SyntaxError) {\n                            errors.push({\n                                lineNumber: error.line,\n                                message: 'Syntax Error: ' + error.message\n                            });\n                        } else {\n                            console.error(error.stack || error);\n                        }\n                    }\n                    if (errors.length !== 0)\n                        break;\n                    if (renderer instanceof THREE.WebGLRenderer === false)\n                        break;\n                    currentObject.material[currentScript] = string;\n                    currentObject.material.needsUpdate = true;\n                    signals.materialChanged.dispatch(currentObject.material);\n                    var programs = renderer.info.programs;\n                    valid = true;\n                    var parseMessage = /^(?:ERROR|WARNING): \\d+:(\\d+): (.*)/g;\n                    for (var i = 0, n = programs.length; i !== n; ++i) {\n                        var diagnostics = programs[i].diagnostics;\n                        if (diagnostics === undefined || diagnostics.material !== currentObject.material)\n                            continue;\n                        if (!diagnostics.runnable)\n                            valid = false;\n                        var shaderInfo = diagnostics[currentScript];\n                        var lineOffset = shaderInfo.prefix.split(/\\r\\n|\\r|\\n/).length;\n                        while (true) {\n                            var parseResult = parseMessage.exec(shaderInfo.log);\n                            if (parseResult === null)\n                                break;\n                            errors.push({\n                                lineNumber: parseResult[1] - lineOffset,\n                                message: parseResult[2]\n                            });\n                        }\n                        break;\n                    }\n                }\n                for (var i = 0; i < errors.length; i++) {\n                    var error = errors[i];\n                    var message = document.createElement('div');\n                    message.className = 'esprima-error';\n                    message.textContent = error.message;\n                    var lineNumber = Math.max(error.lineNumber, 0);\n                    errorLines.push(lineNumber);\n                    codemirror.addLineClass(lineNumber, 'background', 'errorLine');\n                    var widget = codemirror.addLineWidget(lineNumber, message);\n                    widgets.push(widget);\n                }\n                return valid !== undefined ? valid : errors.length === 0;\n            });\n        };\n        var server = new CodeMirror.TernServer({\n            caseInsensitive: true,\n            plugins: { threejs: null }\n        });\n        codemirror.setOption('extraKeys', {\n            'Ctrl-Space': function (cm) {\n                server.complete(cm);\n            },\n            'Ctrl-I': function (cm) {\n                server.showType(cm);\n            },\n            'Ctrl-O': function (cm) {\n                server.showDocs(cm);\n            },\n            'Alt-.': function (cm) {\n                server.jumpToDef(cm);\n            },\n            'Alt-,': function (cm) {\n                server.jumpBack(cm);\n            },\n            'Ctrl-Q': function (cm) {\n                server.rename(cm);\n            },\n            'Ctrl-.': function (cm) {\n                server.selectName(cm);\n            }\n        });\n        codemirror.on('cursorActivity', function (cm) {\n            if (currentMode !== 'javascript')\n                return;\n            server.updateArgHints(cm);\n        });\n        codemirror.on('keypress', function (cm, kb) {\n            if (currentMode !== 'javascript')\n                return;\n            var typed = String.fromCharCode(kb.which || kb.keyCode);\n            if (/[\\w\\.]/.exec(typed)) {\n                server.complete(cm);\n            }\n        });\n        signals.editorCleared.add(function () {\n            container.setDisplay('none');\n        });\n        signals.editScript.add(function (object, script) {\n            var mode, name, source;\n            if (typeof script === 'object') {\n                mode = 'javascript';\n                name = script.name;\n                source = script.source;\n                title.setValue(object.name + ' / ' + name);\n            } else {\n                switch (script) {\n                case 'vertexShader':\n                    mode = 'glsl';\n                    name = 'Vertex Shader';\n                    source = object.material.vertexShader || '';\n                    break;\n                case 'fragmentShader':\n                    mode = 'glsl';\n                    name = 'Fragment Shader';\n                    source = object.material.fragmentShader || '';\n                    break;\n                case 'programInfo':\n                    mode = 'json';\n                    name = 'Program Properties';\n                    var json = {\n                        defines: object.material.defines,\n                        uniforms: object.material.uniforms,\n                        attributes: object.material.attributes\n                    };\n                    source = JSON.stringify(json, null, '\\t');\n                }\n                title.setValue(object.material.name + ' / ' + name);\n            }\n            currentMode = mode;\n            currentScript = script;\n            currentObject = object;\n            container.setDisplay('');\n            codemirror.setValue(source);\n            codemirror.clearHistory();\n            if (mode === 'json')\n                mode = {\n                    name: 'javascript',\n                    json: true\n                };\n            codemirror.setOption('mode', mode);\n        });\n        signals.scriptRemoved.add(function (script) {\n            if (currentScript === script) {\n                container.setDisplay('none');\n            }\n        });\n        return container;\n    };\n    return Script;\n});"]}