{"version":3,"sources":["Storage.js"],"names":["define","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","undefined","console","warn","init","get","set","clear","database","callback","request","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","onsuccess","onerror","error","transaction","objectStore","data","start","performance","now","put","log","exec","Date","toFixed"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAiEA,OAhEc,WACV,IAAIC,EAAYC,OAAOD,WAAaC,OAAOC,cAAgBD,OAAOE,iBAAmBF,OAAOG,YAC5F,QAAkBC,IAAdL,EAEA,OADAM,QAAQC,KAAK,sCAETC,KAAM,aAENC,IAAK,aAELC,IAAK,aAELC,MAAO,cAIf,IAEIC,EACJ,OACIJ,KAAM,SAAUK,GACZ,IAAIC,EAAUd,EAAUe,KALrB,iBACG,GAKND,EAAQE,gBAAkB,SAAUC,GAChC,IAAIC,EAAKD,EAAME,OAAOC,QACyB,IAA3CF,EAAGG,iBAAiBC,SAAS,WAC7BJ,EAAGK,kBAAkB,WAG7BT,EAAQU,UAAY,SAAUP,GAC1BL,EAAWK,EAAME,OAAOC,OACxBP,KAEJC,EAAQW,QAAU,SAAUR,GACxBX,QAAQoB,MAAM,YAAaT,KAGnCR,IAAK,SAAUI,GACOD,EAASe,aAAa,UAAW,aACrBC,YAAY,UAChBnB,IAAI,GACtBe,UAAY,SAAUP,GAC1BJ,EAASI,EAAME,OAAOC,UAG9BV,IAAK,SAAUmB,GACX,IAAIC,EAAQC,YAAYC,MACNpB,EAASe,aAAa,UAAW,aACrBC,YAAY,UAChBK,IAAIJ,EAAM,GAC5BL,UAAY,WAChBlB,QAAQ4B,IAAI,IAAM,mBAAmBC,KAAK,IAAIC,MAAQ,GAAK,IAAK,8BAAgCL,YAAYC,MAAQF,GAAOO,QAAQ,GAAK,QAGhJ1B,MAAO,gBACcN,IAAbO,IAEcA,EAASe,aAAa,UAAW,aACrBC,YAAY,UAChBjB,QAClBa,UAAY,WAChBlB,QAAQ4B,IAAI,IAAM,mBAAmBC,KAAK,IAAIC,MAAQ,GAAK,IAAK","file":"../Storage.js","sourcesContent":["define(function () {\n    'use strict';\n    var Storage = function () {\n        var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        if (indexedDB === undefined) {\n            console.warn('Storage: IndexedDB not available.');\n            return {\n                init: function () {\n                },\n                get: function () {\n                },\n                set: function () {\n                },\n                clear: function () {\n                }\n            };\n        }\n        var name = 'threejs-editor';\n        var version = 1;\n        var database;\n        return {\n            init: function (callback) {\n                var request = indexedDB.open(name, version);\n                request.onupgradeneeded = function (event) {\n                    var db = event.target.result;\n                    if (db.objectStoreNames.contains('states') === false) {\n                        db.createObjectStore('states');\n                    }\n                };\n                request.onsuccess = function (event) {\n                    database = event.target.result;\n                    callback();\n                };\n                request.onerror = function (event) {\n                    console.error('IndexedDB', event);\n                };\n            },\n            get: function (callback) {\n                var transaction = database.transaction(['states'], 'readwrite');\n                var objectStore = transaction.objectStore('states');\n                var request = objectStore.get(0);\n                request.onsuccess = function (event) {\n                    callback(event.target.result);\n                };\n            },\n            set: function (data) {\n                var start = performance.now();\n                var transaction = database.transaction(['states'], 'readwrite');\n                var objectStore = transaction.objectStore('states');\n                var request = objectStore.put(data, 0);\n                request.onsuccess = function () {\n                    console.log('[' + /\\d\\d\\:\\d\\d\\:\\d\\d/.exec(new Date())[0] + ']', 'Saved state to IndexedDB. ' + (performance.now() - start).toFixed(2) + 'ms');\n                };\n            },\n            clear: function () {\n                if (database === undefined)\n                    return;\n                var transaction = database.transaction(['states'], 'readwrite');\n                var objectStore = transaction.objectStore('states');\n                var request = objectStore.clear();\n                request.onsuccess = function () {\n                    console.log('[' + /\\d\\d\\:\\d\\d\\:\\d\\d/.exec(new Date())[0] + ']', 'Cleared IndexedDB.');\n                };\n            }\n        };\n    };\n    return Storage;\n});"]}