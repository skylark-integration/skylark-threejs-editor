{"version":3,"sources":["EditorControls.js"],"names":["define","THREE","EditorControls","object","domElement","this","enabled","center","Vector3","panSpeed","zoomSpeed","rotationSpeed","scope","vector","delta","box","Box3","STATE","NONE","ROTATE","ZOOM","PAN","state","normalMatrix","Matrix3","pointer","Vector2","pointerOld","spherical","Spherical","sphere","Sphere","changeEvent","type","onMouseDown","event","button","set","clientX","clientY","addEventListener","onMouseMove","onMouseUp","movementX","x","movementY","y","rotate","zoom","pan","removeEventListener","onMouseWheel","preventDefault","deltaY","contextmenu","focus","target","distance","setFromObject","isEmpty","getCenter","getBoundingSphere","radius","setFromMatrixPosition","matrixWorld","applyQuaternion","quaternion","multiplyScalar","position","copy","add","dispatchEvent","distanceTo","applyMatrix3","getNormalMatrix","matrix","length","sub","setFromVector3","theta","phi","makeSafe","setFromSpherical","lookAt","dispose","touchStart","touchMove","touches","prevTouches","prevDistance","pageX","pageY","divideScalar","window","devicePixelRatio","stopPropagation","getClosest","offset0","clone","offset1","touch","closest","i","prototype","Object","create","EventDispatcher","constructor"],"mappings":"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","file":"../EditorControls.js","sourcesContent":["define([\n    'skylark-threejs'\n], function (THREE) {\n    'use strict';\n    var EditorControls = function (object, domElement) {\n        this.enabled = true;\n        this.center = new THREE.Vector3();\n        this.panSpeed = 0.002;\n        this.zoomSpeed = 0.1;\n        this.rotationSpeed = 0.005;\n        var scope = this;\n        var vector = new THREE.Vector3();\n        var delta = new THREE.Vector3();\n        var box = new THREE.Box3();\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            ZOOM: 1,\n            PAN: 2\n        };\n        var state = STATE.NONE;\n        var center = this.center;\n        var normalMatrix = new THREE.Matrix3();\n        var pointer = new THREE.Vector2();\n        var pointerOld = new THREE.Vector2();\n        var spherical = new THREE.Spherical();\n        var sphere = new THREE.Sphere();\n        var changeEvent = { type: 'change' };\n        this.focus = function (target) {\n            var distance;\n            box.setFromObject(target);\n            if (box.isEmpty() === false) {\n                box.getCenter(center);\n                distance = box.getBoundingSphere(sphere).radius;\n            } else {\n                center.setFromMatrixPosition(target.matrixWorld);\n                distance = 0.1;\n            }\n            delta.set(0, 0, 1);\n            delta.applyQuaternion(object.quaternion);\n            delta.multiplyScalar(distance * 4);\n            object.position.copy(center).add(delta);\n            scope.dispatchEvent(changeEvent);\n        };\n        this.pan = function (delta) {\n            var distance = object.position.distanceTo(center);\n            delta.multiplyScalar(distance * scope.panSpeed);\n            delta.applyMatrix3(normalMatrix.getNormalMatrix(object.matrix));\n            object.position.add(delta);\n            center.add(delta);\n            scope.dispatchEvent(changeEvent);\n        };\n        this.zoom = function (delta) {\n            var distance = object.position.distanceTo(center);\n            delta.multiplyScalar(distance * scope.zoomSpeed);\n            if (delta.length() > distance)\n                return;\n            delta.applyMatrix3(normalMatrix.getNormalMatrix(object.matrix));\n            object.position.add(delta);\n            scope.dispatchEvent(changeEvent);\n        };\n        this.rotate = function (delta) {\n            vector.copy(object.position).sub(center);\n            spherical.setFromVector3(vector);\n            spherical.theta += delta.x * scope.rotationSpeed;\n            spherical.phi += delta.y * scope.rotationSpeed;\n            spherical.makeSafe();\n            vector.setFromSpherical(spherical);\n            object.position.copy(center).add(vector);\n            object.lookAt(center);\n            scope.dispatchEvent(changeEvent);\n        };\n        function onMouseDown(event) {\n            if (scope.enabled === false)\n                return;\n            if (event.button === 0) {\n                state = STATE.ROTATE;\n            } else if (event.button === 1) {\n                state = STATE.ZOOM;\n            } else if (event.button === 2) {\n                state = STATE.PAN;\n            }\n            pointerOld.set(event.clientX, event.clientY);\n            domElement.addEventListener('mousemove', onMouseMove, false);\n            domElement.addEventListener('mouseup', onMouseUp, false);\n            domElement.addEventListener('mouseout', onMouseUp, false);\n            domElement.addEventListener('dblclick', onMouseUp, false);\n        }\n        function onMouseMove(event) {\n            if (scope.enabled === false)\n                return;\n            pointer.set(event.clientX, event.clientY);\n            var movementX = pointer.x - pointerOld.x;\n            var movementY = pointer.y - pointerOld.y;\n            if (state === STATE.ROTATE) {\n                scope.rotate(delta.set(-movementX, -movementY, 0));\n            } else if (state === STATE.ZOOM) {\n                scope.zoom(delta.set(0, 0, movementY));\n            } else if (state === STATE.PAN) {\n                scope.pan(delta.set(-movementX, movementY, 0));\n            }\n            pointerOld.set(event.clientX, event.clientY);\n        }\n        function onMouseUp() {\n            domElement.removeEventListener('mousemove', onMouseMove, false);\n            domElement.removeEventListener('mouseup', onMouseUp, false);\n            domElement.removeEventListener('mouseout', onMouseUp, false);\n            domElement.removeEventListener('dblclick', onMouseUp, false);\n            state = STATE.NONE;\n        }\n        function onMouseWheel(event) {\n            event.preventDefault();\n            scope.zoom(delta.set(0, 0, event.deltaY > 0 ? 1 : -1));\n        }\n        function contextmenu(event) {\n            event.preventDefault();\n        }\n        this.dispose = function () {\n            domElement.removeEventListener('contextmenu', contextmenu, false);\n            domElement.removeEventListener('mousedown', onMouseDown, false);\n            domElement.removeEventListener('wheel', onMouseWheel, false);\n            domElement.removeEventListener('mousemove', onMouseMove, false);\n            domElement.removeEventListener('mouseup', onMouseUp, false);\n            domElement.removeEventListener('mouseout', onMouseUp, false);\n            domElement.removeEventListener('dblclick', onMouseUp, false);\n            domElement.removeEventListener('touchstart', touchStart, false);\n            domElement.removeEventListener('touchmove', touchMove, false);\n        };\n        domElement.addEventListener('contextmenu', contextmenu, false);\n        domElement.addEventListener('mousedown', onMouseDown, false);\n        domElement.addEventListener('wheel', onMouseWheel, false);\n        var touches = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n        var prevTouches = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n        var prevDistance = null;\n        function touchStart(event) {\n            if (scope.enabled === false)\n                return;\n            switch (event.touches.length) {\n            case 1:\n                touches[0].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                touches[1].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                break;\n            case 2:\n                touches[0].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                touches[1].set(event.touches[1].pageX, event.touches[1].pageY, 0).divideScalar(window.devicePixelRatio);\n                prevDistance = touches[0].distanceTo(touches[1]);\n                break;\n            }\n            prevTouches[0].copy(touches[0]);\n            prevTouches[1].copy(touches[1]);\n        }\n        function touchMove(event) {\n            if (scope.enabled === false)\n                return;\n            event.preventDefault();\n            event.stopPropagation();\n            function getClosest(touch, touches) {\n                var closest = touches[0];\n                for (var i in touches) {\n                    if (closest.distanceTo(touch) > touches[i].distanceTo(touch))\n                        closest = touches[i];\n                }\n                return closest;\n            }\n            switch (event.touches.length) {\n            case 1:\n                touches[0].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                touches[1].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                scope.rotate(touches[0].sub(getClosest(touches[0], prevTouches)).multiplyScalar(-1));\n                break;\n            case 2:\n                touches[0].set(event.touches[0].pageX, event.touches[0].pageY, 0).divideScalar(window.devicePixelRatio);\n                touches[1].set(event.touches[1].pageX, event.touches[1].pageY, 0).divideScalar(window.devicePixelRatio);\n                var distance = touches[0].distanceTo(touches[1]);\n                scope.zoom(delta.set(0, 0, prevDistance - distance));\n                prevDistance = distance;\n                var offset0 = touches[0].clone().sub(getClosest(touches[0], prevTouches));\n                var offset1 = touches[1].clone().sub(getClosest(touches[1], prevTouches));\n                offset0.x = -offset0.x;\n                offset1.x = -offset1.x;\n                scope.pan(offset0.add(offset1));\n                break;\n            }\n            prevTouches[0].copy(touches[0]);\n            prevTouches[1].copy(touches[1]);\n        }\n        domElement.addEventListener('touchstart', touchStart, false);\n        domElement.addEventListener('touchmove', touchMove, false);\n    };\n    EditorControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    EditorControls.prototype.constructor = EditorControls;\n\n    return EditorControls;\n});"]}