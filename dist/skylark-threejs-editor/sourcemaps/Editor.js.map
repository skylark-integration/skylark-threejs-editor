{"version":3,"sources":["Editor.js"],"names":["define","THREE","signals","Config","Loader","_History","Strings","_Storage","geometry","material","Editor","this","DEFAULT_CAMERA","PerspectiveCamera","name","position","set","lookAt","Vector3","Signal","editScript","startPlayer","stopPlayer","editorCleared","savingStarted","savingFinished","transformModeChanged","snapChanged","spaceChanged","rendererChanged","rendererUpdated","sceneBackgroundChanged","sceneFogChanged","sceneGraphChanged","sceneRendered","cameraChanged","geometryChanged","objectSelected","objectFocused","objectAdded","objectChanged","objectRemoved","cameraAdded","cameraRemoved","helperAdded","helperRemoved","materialAdded","materialChanged","materialRemoved","scriptAdded","scriptChanged","scriptRemoved","windowResize","showGridChanged","refreshSidebarObject3D","historyChanged","viewportCameraChanged","config","history","storage","strings","loader","camera","clone","scene","Scene","background","Color","sceneHelpers","object","geometries","materials","textures","scripts","materialsRefCounter","Map","animations","mixer","AnimationMixer","selected","helpers","cameras","viewportCamera","addCamera","prototype","setScene","uuid","fog","userData","JSON","parse","stringify","active","children","length","addObject","dispatch","parent","index","scope","traverse","child","undefined","addGeometry","addMaterial","addHelper","add","splice","moveObject","before","indexOf","pop","nameObject","removeObject","removeCamera","removeHelper","removeMaterial","remove","setGeometryName","Array","isArray","i","l","addMaterialToRefCounter","count","get","removeMaterialFromRefCounter","delete","getMaterialById","id","Object","values","setMaterialName","addTexture","texture","addAnimation","isCamera","SphereBufferGeometry","MeshBasicMaterial","color","visible","helper","CameraHelper","isPointLight","PointLightHelper","isDirectionalLight","DirectionalLightHelper","isSpotLight","SpotLightHelper","isHemisphereLight","HemisphereLightHelper","isSkinnedMesh","SkeletonHelper","skeleton","bones","picker","Mesh","addScript","script","push","removeScript","getObjectMaterial","slot","setObjectMaterial","newMaterial","setViewportCamera","select","setKey","selectById","getObjectById","selectByUuid","deselect","focus","focusById","clear","copy","objects","stopAllAction","fromJSON","json","ObjectLoader","aspect","updateProjectionMatrix","toJSON","key","getObjectByProperty","metadata","project","shadows","getKey","vr","objectByUuid","execute","cmd","optionalName","undo","redo"],"mappings":"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","file":"../Editor.js","sourcesContent":["define([\n    'skylark-threejs',\n    \"./utils/signals\",\n    './Config',\n    './Loader',\n    './History',\n    './Strings',\n    './Storage'\n], function (THREE,signals,Config, Loader, _History, Strings, _Storage) {\n    'use strict';\n    var Editor = function () {\n        this.DEFAULT_CAMERA = new THREE.PerspectiveCamera(50, 1, 0.01, 1000);\n        this.DEFAULT_CAMERA.name = 'Camera';\n        this.DEFAULT_CAMERA.position.set(0, 5, 10);\n        this.DEFAULT_CAMERA.lookAt(new THREE.Vector3());\n        var Signal = signals.Signal;\n        this.signals = {\n            editScript: new Signal(),\n            startPlayer: new Signal(),\n            stopPlayer: new Signal(),\n            editorCleared: new Signal(),\n            savingStarted: new Signal(),\n            savingFinished: new Signal(),\n            transformModeChanged: new Signal(),\n            snapChanged: new Signal(),\n            spaceChanged: new Signal(),\n            rendererChanged: new Signal(),\n            rendererUpdated: new Signal(),\n            sceneBackgroundChanged: new Signal(),\n            sceneFogChanged: new Signal(),\n            sceneGraphChanged: new Signal(),\n            sceneRendered: new Signal(),\n            cameraChanged: new Signal(),\n            geometryChanged: new Signal(),\n            objectSelected: new Signal(),\n            objectFocused: new Signal(),\n            objectAdded: new Signal(),\n            objectChanged: new Signal(),\n            objectRemoved: new Signal(),\n            cameraAdded: new Signal(),\n            cameraRemoved: new Signal(),\n            helperAdded: new Signal(),\n            helperRemoved: new Signal(),\n            materialAdded: new Signal(),\n            materialChanged: new Signal(),\n            materialRemoved: new Signal(),\n            scriptAdded: new Signal(),\n            scriptChanged: new Signal(),\n            scriptRemoved: new Signal(),\n            windowResize: new Signal(),\n            showGridChanged: new Signal(),\n            refreshSidebarObject3D: new Signal(),\n            historyChanged: new Signal(),\n            viewportCameraChanged: new Signal()\n        };\n        this.config = new Config();\n        this.history = new _History(this);\n        this.storage = new _Storage();\n        this.strings = new Strings(this.config);\n        this.loader = new Loader(this);\n        this.camera = this.DEFAULT_CAMERA.clone();\n        this.scene = new THREE.Scene();\n        this.scene.name = 'Scene';\n        this.scene.background = new THREE.Color(11184810);\n        this.sceneHelpers = new THREE.Scene();\n        this.object = {};\n        this.geometries = {};\n        this.materials = {};\n        this.textures = {};\n        this.scripts = {};\n        this.materialsRefCounter = new Map();\n        this.animations = {};\n        this.mixer = new THREE.AnimationMixer(this.scene);\n        this.selected = null;\n        this.helpers = {};\n        this.cameras = {};\n        this.viewportCamera = this.camera;\n        this.addCamera(this.camera);\n    };\n    Editor.prototype = {\n        setScene: function (scene) {\n            this.scene.uuid = scene.uuid;\n            this.scene.name = scene.name;\n            this.scene.background = scene.background !== null ? scene.background.clone() : null;\n            if (scene.fog !== null)\n                this.scene.fog = scene.fog.clone();\n            this.scene.userData = JSON.parse(JSON.stringify(scene.userData));\n            this.signals.sceneGraphChanged.active = false;\n            while (scene.children.length > 0) {\n                this.addObject(scene.children[0]);\n            }\n            this.signals.sceneGraphChanged.active = true;\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        addObject: function (object, parent, index) {\n            var scope = this;\n            object.traverse(function (child) {\n                if (child.geometry !== undefined)\n                    scope.addGeometry(child.geometry);\n                if (child.material !== undefined)\n                    scope.addMaterial(child.material);\n                scope.addCamera(child);\n                scope.addHelper(child);\n            });\n            if (parent === undefined) {\n                this.scene.add(object);\n            } else {\n                parent.children.splice(index, 0, object);\n                object.parent = parent;\n            }\n            this.signals.objectAdded.dispatch(object);\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        moveObject: function (object, parent, before) {\n            if (parent === undefined) {\n                parent = this.scene;\n            }\n            parent.add(object);\n            if (before !== undefined) {\n                var index = parent.children.indexOf(before);\n                parent.children.splice(index, 0, object);\n                parent.children.pop();\n            }\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        nameObject: function (object, name) {\n            object.name = name;\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        removeObject: function (object) {\n            if (object.parent === null)\n                return;\n            var scope = this;\n            object.traverse(function (child) {\n                scope.removeCamera(child);\n                scope.removeHelper(child);\n                if (child.material !== undefined)\n                    scope.removeMaterial(child.material);\n            });\n            object.parent.remove(object);\n            this.signals.objectRemoved.dispatch(object);\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        addGeometry: function (geometry) {\n            this.geometries[geometry.uuid] = geometry;\n        },\n        setGeometryName: function (geometry, name) {\n            geometry.name = name;\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        addMaterial: function (material) {\n            if (Array.isArray(material)) {\n                for (var i = 0, l = material.length; i < l; i++) {\n                    this.addMaterialToRefCounter(material[i]);\n                }\n            } else {\n                this.addMaterialToRefCounter(material);\n            }\n            this.signals.materialAdded.dispatch();\n        },\n        addMaterialToRefCounter: function (material) {\n            var materialsRefCounter = this.materialsRefCounter;\n            var count = materialsRefCounter.get(material);\n            if (count === undefined) {\n                materialsRefCounter.set(material, 1);\n                this.materials[material.uuid] = material;\n            } else {\n                count++;\n                materialsRefCounter.set(material, count);\n            }\n        },\n        removeMaterial: function (material) {\n            if (Array.isArray(material)) {\n                for (var i = 0, l = material.length; i < l; i++) {\n                    this.removeMaterialFromRefCounter(material[i]);\n                }\n            } else {\n                this.removeMaterialFromRefCounter(material);\n            }\n            this.signals.materialRemoved.dispatch();\n        },\n        removeMaterialFromRefCounter: function (material) {\n            var materialsRefCounter = this.materialsRefCounter;\n            var count = materialsRefCounter.get(material);\n            count--;\n            if (count === 0) {\n                materialsRefCounter.delete(material);\n                delete this.materials[material.uuid];\n            } else {\n                materialsRefCounter.set(material, count);\n            }\n        },\n        getMaterialById: function (id) {\n            var material;\n            var materials = Object.values(this.materials);\n            for (var i = 0; i < materials.length; i++) {\n                if (materials[i].id === id) {\n                    material = materials[i];\n                    break;\n                }\n            }\n            return material;\n        },\n        setMaterialName: function (material, name) {\n            material.name = name;\n            this.signals.sceneGraphChanged.dispatch();\n        },\n        addTexture: function (texture) {\n            this.textures[texture.uuid] = texture;\n        },\n        addAnimation: function (object, animations) {\n            if (animations.length > 0) {\n                this.animations[object.uuid] = animations;\n            }\n        },\n        addCamera: function (camera) {\n            if (camera.isCamera) {\n                this.cameras[camera.uuid] = camera;\n                this.signals.cameraAdded.dispatch(camera);\n            }\n        },\n        removeCamera: function (camera) {\n            if (this.cameras[camera.uuid] !== undefined) {\n                delete this.cameras[camera.uuid];\n                this.signals.cameraRemoved.dispatch(camera);\n            }\n        },\n        addHelper: function () {\n            var geometry = new THREE.SphereBufferGeometry(2, 4, 2);\n            var material = new THREE.MeshBasicMaterial({\n                color: 16711680,\n                visible: false\n            });\n            return function (object) {\n                var helper;\n                if (object.isCamera) {\n                    helper = new THREE.CameraHelper(object);\n                } else if (object.isPointLight) {\n                    helper = new THREE.PointLightHelper(object, 1);\n                } else if (object.isDirectionalLight) {\n                    helper = new THREE.DirectionalLightHelper(object, 1);\n                } else if (object.isSpotLight) {\n                    helper = new THREE.SpotLightHelper(object, 1);\n                } else if (object.isHemisphereLight) {\n                    helper = new THREE.HemisphereLightHelper(object, 1);\n                } else if (object.isSkinnedMesh) {\n                    helper = new THREE.SkeletonHelper(object.skeleton.bones[0]);\n                } else {\n                    return;\n                }\n                var picker = new THREE.Mesh(geometry, material);\n                picker.name = 'picker';\n                picker.userData.object = object;\n                helper.add(picker);\n                this.sceneHelpers.add(helper);\n                this.helpers[object.id] = helper;\n                this.signals.helperAdded.dispatch(helper);\n            };\n        }(),\n        removeHelper: function (object) {\n            if (this.helpers[object.id] !== undefined) {\n                var helper = this.helpers[object.id];\n                helper.parent.remove(helper);\n                delete this.helpers[object.id];\n                this.signals.helperRemoved.dispatch(helper);\n            }\n        },\n        addScript: function (object, script) {\n            if (this.scripts[object.uuid] === undefined) {\n                this.scripts[object.uuid] = [];\n            }\n            this.scripts[object.uuid].push(script);\n            this.signals.scriptAdded.dispatch(script);\n        },\n        removeScript: function (object, script) {\n            if (this.scripts[object.uuid] === undefined)\n                return;\n            var index = this.scripts[object.uuid].indexOf(script);\n            if (index !== -1) {\n                this.scripts[object.uuid].splice(index, 1);\n            }\n            this.signals.scriptRemoved.dispatch(script);\n        },\n        getObjectMaterial: function (object, slot) {\n            var material = object.material;\n            if (Array.isArray(material) && slot !== undefined) {\n                material = material[slot];\n            }\n            return material;\n        },\n        setObjectMaterial: function (object, slot, newMaterial) {\n            if (Array.isArray(object.material) && slot !== undefined) {\n                object.material[slot] = newMaterial;\n            } else {\n                object.material = newMaterial;\n            }\n        },\n        setViewportCamera: function (uuid) {\n            this.viewportCamera = this.cameras[uuid];\n            this.signals.viewportCameraChanged.dispatch(this.viewportCamera);\n        },\n        select: function (object) {\n            if (this.selected === object)\n                return;\n            var uuid = null;\n            if (object !== null) {\n                uuid = object.uuid;\n            }\n            this.selected = object;\n            this.config.setKey('selected', uuid);\n            this.signals.objectSelected.dispatch(object);\n        },\n        selectById: function (id) {\n            if (id === this.camera.id) {\n                this.select(this.camera);\n                return;\n            }\n            this.select(this.scene.getObjectById(id, true));\n        },\n        selectByUuid: function (uuid) {\n            var scope = this;\n            this.scene.traverse(function (child) {\n                if (child.uuid === uuid) {\n                    scope.select(child);\n                }\n            });\n        },\n        deselect: function () {\n            this.select(null);\n        },\n        focus: function (object) {\n            if (object !== undefined) {\n                this.signals.objectFocused.dispatch(object);\n            }\n        },\n        focusById: function (id) {\n            this.focus(this.scene.getObjectById(id, true));\n        },\n        clear: function () {\n            this.history.clear();\n            this.storage.clear();\n            this.camera.copy(this.DEFAULT_CAMERA);\n            this.scene.name = 'Scene';\n            this.scene.userData = {};\n            this.scene.background = new THREE.Color(11184810);\n            this.scene.fog = null;\n            var objects = this.scene.children;\n            while (objects.length > 0) {\n                this.removeObject(objects[0]);\n            }\n            this.geometries = {};\n            this.materials = {};\n            this.textures = {};\n            this.scripts = {};\n            this.materialsRefCounter.clear();\n            this.animations = {};\n            this.mixer.stopAllAction();\n            this.deselect();\n            this.signals.editorCleared.dispatch();\n        },\n        fromJSON: function (json) {\n            var scope = this;\n            var loader = new THREE.ObjectLoader();\n            var camera = loader.parse(json.camera);\n            this.camera.copy(camera);\n            this.camera.aspect = this.DEFAULT_CAMERA.aspect;\n            this.camera.updateProjectionMatrix();\n            this.history.fromJSON(json.history);\n            this.scripts = json.scripts;\n            loader.parse(json.scene, function (scene) {\n                scope.setScene(scene);\n            });\n        },\n        toJSON: function () {\n            var scene = this.scene;\n            var scripts = this.scripts;\n            for (var key in scripts) {\n                var script = scripts[key];\n                if (script.length === 0 || scene.getObjectByProperty('uuid', key) === undefined) {\n                    delete scripts[key];\n                }\n            }\n            return {\n                metadata: {},\n                project: {\n                    shadows: this.config.getKey('project/renderer/shadows'),\n                    vr: this.config.getKey('project/vr')\n                },\n                camera: this.camera.toJSON(),\n                scene: this.scene.toJSON(),\n                scripts: this.scripts,\n                history: this.history.toJSON()\n            };\n        },\n        objectByUuid: function (uuid) {\n            return this.scene.getObjectByProperty('uuid', uuid, true);\n        },\n        execute: function (cmd, optionalName) {\n            this.history.execute(cmd, optionalName);\n        },\n        undo: function () {\n            this.history.undo();\n        },\n        redo: function () {\n            this.history.redo();\n        }\n    };\n    return Editor;\n});"]}