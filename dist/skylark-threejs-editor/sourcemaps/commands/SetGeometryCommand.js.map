{"version":3,"sources":["commands/SetGeometryCommand.js"],"names":["define","Command","THREE","SetGeometryCommand","editor","object","newGeometry","call","this","type","name","updatable","oldGeometry","undefined","geometry","prototype","execute","dispose","computeBoundingSphere","signals","geometryChanged","dispatch","sceneGraphChanged","undo","update","cmd","toJSON","output","objectUuid","uuid","fromJSON","json","parseGeometry","data","ObjectLoader","parseGeometries","objectByUuid"],"mappings":";;;;;;;AAAAA,QACI,aACA,sBACD,SAAUC,EAASC,GAClB,aACA,IAAIC,EAAqB,SAAUC,EAAQC,EAAQC,GAC/CL,EAAQM,KAAKC,KAAMJ,GACnBI,KAAKC,KAAO,qBACZD,KAAKE,KAAO,eACZF,KAAKG,WAAY,EACjBH,KAAKH,OAASA,EACdG,KAAKI,iBAAyBC,IAAXR,EAAuBA,EAAOS,cAAWD,EAC5DL,KAAKF,YAAcA,GAsCvB,OApCAH,EAAmBY,WACfC,QAAS,WACLR,KAAKH,OAAOS,SAASG,UACrBT,KAAKH,OAAOS,SAAWN,KAAKF,YAC5BE,KAAKH,OAAOS,SAASI,wBACrBV,KAAKJ,OAAOe,QAAQC,gBAAgBC,SAASb,KAAKH,QAClDG,KAAKJ,OAAOe,QAAQG,kBAAkBD,YAE1CE,KAAM,WACFf,KAAKH,OAAOS,SAASG,UACrBT,KAAKH,OAAOS,SAAWN,KAAKI,YAC5BJ,KAAKH,OAAOS,SAASI,wBACrBV,KAAKJ,OAAOe,QAAQC,gBAAgBC,SAASb,KAAKH,QAClDG,KAAKJ,OAAOe,QAAQG,kBAAkBD,YAE1CG,OAAQ,SAAUC,GACdjB,KAAKF,YAAcmB,EAAInB,aAE3BoB,OAAQ,WACJ,IAAIC,EAAS1B,EAAQc,UAAUW,OAAOnB,KAAKC,MAI3C,OAHAmB,EAAOC,WAAapB,KAAKH,OAAOwB,KAChCF,EAAOf,YAAcJ,KAAKH,OAAOS,SAASY,SAC1CC,EAAOrB,YAAcE,KAAKF,YAAYoB,SAC/BC,GAEXG,SAAU,SAAUC,GAKhB,SAASC,EAAcC,GAEnB,OADa,IAAI/B,EAAMgC,cACTC,iBAAiBF,IAAOA,EAAKJ,MAN/C5B,EAAQc,UAAUe,SAASvB,KAAKC,KAAMuB,GACtCvB,KAAKH,OAASG,KAAKJ,OAAOgC,aAAaL,EAAKH,YAC5CpB,KAAKI,YAAcoB,EAAcD,EAAKnB,aACtCJ,KAAKF,YAAc0B,EAAcD,EAAKzB,eAOvCH","file":"../../commands/SetGeometryCommand.js","sourcesContent":["define([\n    '../Command',\n    '../skylark-threejs'\n], function (Command, THREE) {\n    'use strict';\n    var SetGeometryCommand = function (editor, object, newGeometry) {\n        Command.call(this, editor);\n        this.type = 'SetGeometryCommand';\n        this.name = 'Set Geometry';\n        this.updatable = true;\n        this.object = object;\n        this.oldGeometry = object !== undefined ? object.geometry : undefined;\n        this.newGeometry = newGeometry;\n    };\n    SetGeometryCommand.prototype = {\n        execute: function () {\n            this.object.geometry.dispose();\n            this.object.geometry = this.newGeometry;\n            this.object.geometry.computeBoundingSphere();\n            this.editor.signals.geometryChanged.dispatch(this.object);\n            this.editor.signals.sceneGraphChanged.dispatch();\n        },\n        undo: function () {\n            this.object.geometry.dispose();\n            this.object.geometry = this.oldGeometry;\n            this.object.geometry.computeBoundingSphere();\n            this.editor.signals.geometryChanged.dispatch(this.object);\n            this.editor.signals.sceneGraphChanged.dispatch();\n        },\n        update: function (cmd) {\n            this.newGeometry = cmd.newGeometry;\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.oldGeometry = this.object.geometry.toJSON();\n            output.newGeometry = this.newGeometry.toJSON();\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.object = this.editor.objectByUuid(json.objectUuid);\n            this.oldGeometry = parseGeometry(json.oldGeometry);\n            this.newGeometry = parseGeometry(json.newGeometry);\n            function parseGeometry(data) {\n                var loader = new THREE.ObjectLoader();\n                return loader.parseGeometries([data])[data.uuid];\n            }\n        }\n    };\n    return SetGeometryCommand ;\n});"]}