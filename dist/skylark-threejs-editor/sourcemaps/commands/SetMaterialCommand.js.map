{"version":3,"sources":["commands/SetMaterialCommand.js"],"names":["define","Command","THREE","SetMaterialCommand","editor","object","newMaterial","materialSlot","call","this","type","name","oldMaterial","getObjectMaterial","prototype","execute","setObjectMaterial","signals","materialChanged","dispatch","undo","toJSON","output","objectUuid","uuid","fromJSON","json","parseMaterial","loader","ObjectLoader","images","parseImages","textures","parseTextures","parseMaterials","objectByUuid"],"mappings":";;;;;;;AAAAA,QACI,aACA,sBACD,SAAUC,EAASC,GAClB,aACA,IAAIC,EAAqB,SAAUC,EAAQC,EAAQC,EAAaC,GAC5DN,EAAQO,KAAKC,KAAML,GACnBK,KAAKC,KAAO,qBACZD,KAAKE,KAAO,eACZF,KAAKJ,OAASA,EACdI,KAAKF,aAAeA,EACpBE,KAAKG,YAAcH,KAAKL,OAAOS,kBAAkBR,EAAQE,GACzDE,KAAKH,YAAcA,GAgCvB,OA9BAH,EAAmBW,WACfC,QAAS,WACLN,KAAKL,OAAOY,kBAAkBP,KAAKJ,OAAQI,KAAKF,aAAcE,KAAKH,aACnEG,KAAKL,OAAOa,QAAQC,gBAAgBC,SAASV,KAAKH,cAEtDc,KAAM,WACFX,KAAKL,OAAOY,kBAAkBP,KAAKJ,OAAQI,KAAKF,aAAcE,KAAKG,aACnEH,KAAKL,OAAOa,QAAQC,gBAAgBC,SAASV,KAAKG,cAEtDS,OAAQ,WACJ,IAAIC,EAASrB,EAAQa,UAAUO,OAAOb,KAAKC,MAI3C,OAHAa,EAAOC,WAAad,KAAKJ,OAAOmB,KAChCF,EAAOV,YAAcH,KAAKG,YAAYS,SACtCC,EAAOhB,YAAcG,KAAKH,YAAYe,SAC/BC,GAEXG,SAAU,SAAUC,GAKhB,SAASC,EAAcD,GACnB,IAAIE,EAAS,IAAI1B,EAAM2B,aACnBC,EAASF,EAAOG,YAAYL,EAAKI,QACjCE,EAAWJ,EAAOK,cAAcP,EAAKM,SAAUF,GAEnD,OADgBF,EAAOM,gBAAgBR,GAAOM,GAC7BN,EAAKF,MAT1BvB,EAAQa,UAAUW,SAASjB,KAAKC,KAAMiB,GACtCjB,KAAKJ,OAASI,KAAKL,OAAO+B,aAAaT,EAAKH,YAC5Cd,KAAKG,YAAce,EAAcD,EAAKd,aACtCH,KAAKH,YAAcqB,EAAcD,EAAKpB,eAUvCH","file":"../../commands/SetMaterialCommand.js","sourcesContent":["define([\n    '../Command',\n    '../skylark-threejs'\n], function (Command, THREE) {\n    'use strict';\n    var SetMaterialCommand = function (editor, object, newMaterial, materialSlot) {\n        Command.call(this, editor);\n        this.type = 'SetMaterialCommand';\n        this.name = 'New Material';\n        this.object = object;\n        this.materialSlot = materialSlot;\n        this.oldMaterial = this.editor.getObjectMaterial(object, materialSlot);\n        this.newMaterial = newMaterial;\n    };\n    SetMaterialCommand.prototype = {\n        execute: function () {\n            this.editor.setObjectMaterial(this.object, this.materialSlot, this.newMaterial);\n            this.editor.signals.materialChanged.dispatch(this.newMaterial);\n        },\n        undo: function () {\n            this.editor.setObjectMaterial(this.object, this.materialSlot, this.oldMaterial);\n            this.editor.signals.materialChanged.dispatch(this.oldMaterial);\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.oldMaterial = this.oldMaterial.toJSON();\n            output.newMaterial = this.newMaterial.toJSON();\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.object = this.editor.objectByUuid(json.objectUuid);\n            this.oldMaterial = parseMaterial(json.oldMaterial);\n            this.newMaterial = parseMaterial(json.newMaterial);\n            function parseMaterial(json) {\n                var loader = new THREE.ObjectLoader();\n                var images = loader.parseImages(json.images);\n                var textures = loader.parseTextures(json.textures, images);\n                var materials = loader.parseMaterials([json], textures);\n                return materials[json.uuid];\n            }\n        }\n    };\n    return SetMaterialCommand;\n});"]}