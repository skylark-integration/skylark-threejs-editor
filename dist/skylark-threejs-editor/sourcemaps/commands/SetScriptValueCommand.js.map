{"version":3,"sources":["commands/SetScriptValueCommand.js"],"names":["define","Command","SetScriptValueCommand","editor","object","script","attributeName","newValue","call","this","type","name","updatable","oldValue","undefined","prototype","execute","signals","scriptChanged","dispatch","undo","update","cmd","toJSON","output","objectUuid","uuid","index","scripts","indexOf","fromJSON","json","objectByUuid"],"mappings":";;;;;;;AAAAA,QAAQ,cAAe,SAAUC,GAC7B,aACA,IAAIC,EAAwB,SAAUC,EAAQC,EAAQC,EAAQC,EAAeC,GACzEN,EAAQO,KAAKC,KAAMN,GACnBM,KAAKC,KAAO,wBACZD,KAAKE,KAAO,cAAgBL,EAC5BG,KAAKG,WAAY,EACjBH,KAAKL,OAASA,EACdK,KAAKJ,OAASA,EACdI,KAAKH,cAAgBA,EACrBG,KAAKI,cAAsBC,IAAXT,EAAuBA,EAAOI,KAAKH,oBAAiBQ,EACpEL,KAAKF,SAAWA,GAgCpB,OA9BAL,EAAsBa,WAClBC,QAAS,WACLP,KAAKJ,OAAOI,KAAKH,eAAiBG,KAAKF,SACvCE,KAAKN,OAAOc,QAAQC,cAAcC,YAEtCC,KAAM,WACFX,KAAKJ,OAAOI,KAAKH,eAAiBG,KAAKI,SACvCJ,KAAKN,OAAOc,QAAQC,cAAcC,YAEtCE,OAAQ,SAAUC,GACdb,KAAKF,SAAWe,EAAIf,UAExBgB,OAAQ,WACJ,IAAIC,EAASvB,EAAQc,UAAUQ,OAAOf,KAAKC,MAM3C,OALAe,EAAOC,WAAahB,KAAKL,OAAOsB,KAChCF,EAAOG,MAAQlB,KAAKN,OAAOyB,QAAQnB,KAAKL,OAAOsB,MAAMG,QAAQpB,KAAKJ,QAClEmB,EAAOlB,cAAgBG,KAAKH,cAC5BkB,EAAOX,SAAWJ,KAAKI,SACvBW,EAAOjB,SAAWE,KAAKF,SAChBiB,GAEXM,SAAU,SAAUC,GAChB9B,EAAQc,UAAUe,SAAStB,KAAKC,KAAMsB,GACtCtB,KAAKI,SAAWkB,EAAKlB,SACrBJ,KAAKF,SAAWwB,EAAKxB,SACrBE,KAAKH,cAAgByB,EAAKzB,cAC1BG,KAAKL,OAASK,KAAKN,OAAO6B,aAAaD,EAAKN,YAC5ChB,KAAKJ,OAASI,KAAKN,OAAOyB,QAAQG,EAAKN,YAAYM,EAAKJ,UAGvDzB,sBAAAA","file":"../../commands/SetScriptValueCommand.js","sourcesContent":["define(['../Command'], function (Command) {\n    'use strict';\n    var SetScriptValueCommand = function (editor, object, script, attributeName, newValue) {\n        Command.call(this, editor);\n        this.type = 'SetScriptValueCommand';\n        this.name = 'Set Script.' + attributeName;\n        this.updatable = true;\n        this.object = object;\n        this.script = script;\n        this.attributeName = attributeName;\n        this.oldValue = script !== undefined ? script[this.attributeName] : undefined;\n        this.newValue = newValue;\n    };\n    SetScriptValueCommand.prototype = {\n        execute: function () {\n            this.script[this.attributeName] = this.newValue;\n            this.editor.signals.scriptChanged.dispatch();\n        },\n        undo: function () {\n            this.script[this.attributeName] = this.oldValue;\n            this.editor.signals.scriptChanged.dispatch();\n        },\n        update: function (cmd) {\n            this.newValue = cmd.newValue;\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.index = this.editor.scripts[this.object.uuid].indexOf(this.script);\n            output.attributeName = this.attributeName;\n            output.oldValue = this.oldValue;\n            output.newValue = this.newValue;\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.oldValue = json.oldValue;\n            this.newValue = json.newValue;\n            this.attributeName = json.attributeName;\n            this.object = this.editor.objectByUuid(json.objectUuid);\n            this.script = this.editor.scripts[json.objectUuid][json.index];\n        }\n    };\n    return { SetScriptValueCommand };\n});"]}