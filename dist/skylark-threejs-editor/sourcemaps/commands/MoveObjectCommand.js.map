{"version":3,"sources":["commands/MoveObjectCommand.js"],"names":["define","Command","MoveObjectCommand","editor","object","newParent","newBefore","call","this","type","name","oldParent","undefined","parent","oldIndex","children","indexOf","newIndex","length","prototype","execute","remove","splice","signals","sceneGraphChanged","dispatch","undo","toJSON","output","objectUuid","uuid","newParentUuid","oldParentUuid","fromJSON","json","objectByUuid","scene"],"mappings":";;;;;;;AAAAA,QAAQ,cAAe,SAAUC,GAC7B,aACA,IAAIC,EAAoB,SAAUC,EAAQC,EAAQC,EAAWC,GACzDL,EAAQM,KAAKC,KAAML,GACnBK,KAAKC,KAAO,oBACZD,KAAKE,KAAO,cACZF,KAAKJ,OAASA,EACdI,KAAKG,eAAuBC,IAAXR,EAAuBA,EAAOS,YAASD,EACxDJ,KAAKM,cAA8BF,IAAnBJ,KAAKG,UAA0BH,KAAKG,UAAUI,SAASC,QAAQR,KAAKJ,aAAUQ,EAC9FJ,KAAKH,UAAYA,EAEbG,KAAKS,cADSL,IAAdN,OAC8BM,IAAdP,EAA0BA,EAAUU,SAASC,QAAQV,QAAaM,OAEpDA,IAAdP,EAA0BA,EAAUU,SAASG,YAASN,EAEtEJ,KAAKG,YAAcH,KAAKH,WAAaG,KAAKS,SAAWT,KAAKM,UAC1DN,KAAKS,WAETT,KAAKF,UAAYA,GAyCrB,OAvCAJ,EAAkBiB,WACdC,QAAS,WACLZ,KAAKG,UAAUU,OAAOb,KAAKJ,QACZI,KAAKH,UAAUU,SACrBO,OAAOd,KAAKS,SAAU,EAAGT,KAAKJ,QACvCI,KAAKJ,OAAOS,OAASL,KAAKH,UAC1BG,KAAKL,OAAOoB,QAAQC,kBAAkBC,YAE1CC,KAAM,WACFlB,KAAKH,UAAUgB,OAAOb,KAAKJ,QACZI,KAAKG,UAAUI,SACrBO,OAAOd,KAAKM,SAAU,EAAGN,KAAKJ,QACvCI,KAAKJ,OAAOS,OAASL,KAAKG,UAC1BH,KAAKL,OAAOoB,QAAQC,kBAAkBC,YAE1CE,OAAQ,WACJ,IAAIC,EAAS3B,EAAQkB,UAAUQ,OAAOpB,KAAKC,MAM3C,OALAoB,EAAOC,WAAarB,KAAKJ,OAAO0B,KAChCF,EAAOG,cAAgBvB,KAAKH,UAAUyB,KACtCF,EAAOI,cAAgBxB,KAAKG,UAAUmB,KACtCF,EAAOX,SAAWT,KAAKS,SACvBW,EAAOd,SAAWN,KAAKM,SAChBc,GAEXK,SAAU,SAAUC,GAChBjC,EAAQkB,UAAUc,SAAS1B,KAAKC,KAAM0B,GACtC1B,KAAKJ,OAASI,KAAKL,OAAOgC,aAAaD,EAAKL,YAC5CrB,KAAKG,UAAYH,KAAKL,OAAOgC,aAAaD,EAAKF,oBACxBpB,IAAnBJ,KAAKG,YACLH,KAAKG,UAAYH,KAAKL,OAAOiC,OAEjC5B,KAAKH,UAAYG,KAAKL,OAAOgC,aAAaD,EAAKH,oBACxBnB,IAAnBJ,KAAKH,YACLG,KAAKH,UAAYG,KAAKL,OAAOiC,OAEjC5B,KAAKS,SAAWiB,EAAKjB,SACrBT,KAAKM,SAAWoB,EAAKpB,WAGtBZ","file":"../../commands/MoveObjectCommand.js","sourcesContent":["define(['../Command'], function (Command) {\n    'use strict';\n    var MoveObjectCommand = function (editor, object, newParent, newBefore) {\n        Command.call(this, editor);\n        this.type = 'MoveObjectCommand';\n        this.name = 'Move Object';\n        this.object = object;\n        this.oldParent = object !== undefined ? object.parent : undefined;\n        this.oldIndex = this.oldParent !== undefined ? this.oldParent.children.indexOf(this.object) : undefined;\n        this.newParent = newParent;\n        if (newBefore !== undefined) {\n            this.newIndex = newParent !== undefined ? newParent.children.indexOf(newBefore) : undefined;\n        } else {\n            this.newIndex = newParent !== undefined ? newParent.children.length : undefined;\n        }\n        if (this.oldParent === this.newParent && this.newIndex > this.oldIndex) {\n            this.newIndex--;\n        }\n        this.newBefore = newBefore;\n    };\n    MoveObjectCommand.prototype = {\n        execute: function () {\n            this.oldParent.remove(this.object);\n            var children = this.newParent.children;\n            children.splice(this.newIndex, 0, this.object);\n            this.object.parent = this.newParent;\n            this.editor.signals.sceneGraphChanged.dispatch();\n        },\n        undo: function () {\n            this.newParent.remove(this.object);\n            var children = this.oldParent.children;\n            children.splice(this.oldIndex, 0, this.object);\n            this.object.parent = this.oldParent;\n            this.editor.signals.sceneGraphChanged.dispatch();\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.newParentUuid = this.newParent.uuid;\n            output.oldParentUuid = this.oldParent.uuid;\n            output.newIndex = this.newIndex;\n            output.oldIndex = this.oldIndex;\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.object = this.editor.objectByUuid(json.objectUuid);\n            this.oldParent = this.editor.objectByUuid(json.oldParentUuid);\n            if (this.oldParent === undefined) {\n                this.oldParent = this.editor.scene;\n            }\n            this.newParent = this.editor.objectByUuid(json.newParentUuid);\n            if (this.newParent === undefined) {\n                this.newParent = this.editor.scene;\n            }\n            this.newIndex = json.newIndex;\n            this.oldIndex = json.oldIndex;\n        }\n    };\n    return MoveObjectCommand;\n});"]}