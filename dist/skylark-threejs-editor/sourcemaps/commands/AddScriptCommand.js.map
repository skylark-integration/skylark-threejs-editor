{"version":3,"sources":["commands/AddScriptCommand.js"],"names":["define","Command","AddScriptCommand","editor","object","script","call","this","type","name","prototype","execute","undefined","scripts","uuid","push","signals","scriptAdded","dispatch","undo","index","indexOf","splice","scriptRemoved","toJSON","output","objectUuid","fromJSON","json","objectByUuid"],"mappings":";;;;;;;AAAAA,QAAQ,cAAe,SAAUC,GAC7B,aACA,IAAIC,EAAmB,SAAUC,EAAQC,EAAQC,GAC7CJ,EAAQK,KAAKC,KAAMJ,GACnBI,KAAKC,KAAO,mBACZD,KAAKE,KAAO,aACZF,KAAKH,OAASA,EACdG,KAAKF,OAASA,GA+BlB,OA7BAH,EAAiBQ,WACbC,QAAS,gBACyCC,IAA1CL,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,QAChCP,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,UAEpCP,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,MAAMC,KAAKR,KAAKF,QAChDE,KAAKJ,OAAOa,QAAQC,YAAYC,SAASX,KAAKF,SAElDc,KAAM,WACF,QAA8CP,IAA1CL,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,MAApC,CAEA,IAAIM,EAAQb,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,MAAMO,QAAQd,KAAKF,SAChD,IAAXe,GACAb,KAAKJ,OAAOU,QAAQN,KAAKH,OAAOU,MAAMQ,OAAOF,EAAO,GAExDb,KAAKJ,OAAOa,QAAQO,cAAcL,SAASX,KAAKF,UAEpDmB,OAAQ,WACJ,IAAIC,EAASxB,EAAQS,UAAUc,OAAOlB,KAAKC,MAG3C,OAFAkB,EAAOC,WAAanB,KAAKH,OAAOU,KAChCW,EAAOpB,OAASE,KAAKF,OACdoB,GAEXE,SAAU,SAAUC,GAChB3B,EAAQS,UAAUiB,SAASrB,KAAKC,KAAMqB,GACtCrB,KAAKF,OAASuB,EAAKvB,OACnBE,KAAKH,OAASG,KAAKJ,OAAO0B,aAAaD,EAAKF,cAG7CxB","file":"../../commands/AddScriptCommand.js","sourcesContent":["define(['../Command'], function (Command) {\n    'use strict';\n    var AddScriptCommand = function (editor, object, script) {\n        Command.call(this, editor);\n        this.type = 'AddScriptCommand';\n        this.name = 'Add Script';\n        this.object = object;\n        this.script = script;\n    };\n    AddScriptCommand.prototype = {\n        execute: function () {\n            if (this.editor.scripts[this.object.uuid] === undefined) {\n                this.editor.scripts[this.object.uuid] = [];\n            }\n            this.editor.scripts[this.object.uuid].push(this.script);\n            this.editor.signals.scriptAdded.dispatch(this.script);\n        },\n        undo: function () {\n            if (this.editor.scripts[this.object.uuid] === undefined)\n                return;\n            var index = this.editor.scripts[this.object.uuid].indexOf(this.script);\n            if (index !== -1) {\n                this.editor.scripts[this.object.uuid].splice(index, 1);\n            }\n            this.editor.signals.scriptRemoved.dispatch(this.script);\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.script = this.script;\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.script = json.script;\n            this.object = this.editor.objectByUuid(json.objectUuid);\n        }\n    };\n    return AddScriptCommand;\n});"]}