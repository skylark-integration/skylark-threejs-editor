{"version":3,"sources":["commands/SetMaterialValueCommand.js"],"names":["define","Command","SetMaterialValueCommand","editor","object","attributeName","newValue","materialSlot","call","this","type","name","updatable","material","getObjectMaterial","oldValue","undefined","prototype","execute","needsUpdate","signals","objectChanged","dispatch","materialChanged","undo","update","cmd","toJSON","output","objectUuid","uuid","fromJSON","json","objectByUuid"],"mappings":";;;;;;;AAAAA,QAAQ,cAAe,SAAUC,GAC7B,aACA,IAAIC,EAA0B,SAAUC,EAAQC,EAAQC,EAAeC,EAAUC,GAC7EN,EAAQO,KAAKC,KAAMN,GACnBM,KAAKC,KAAO,0BACZD,KAAKE,KAAO,gBAAkBN,EAC9BI,KAAKG,WAAY,EACjBH,KAAKL,OAASA,EACdK,KAAKI,SAAWJ,KAAKN,OAAOW,kBAAkBV,EAAQG,GACtDE,KAAKM,cAA6BC,IAAlBP,KAAKI,SAAyBJ,KAAKI,SAASR,QAAiBW,EAC7EP,KAAKH,SAAWA,EAChBG,KAAKJ,cAAgBA,GAkCzB,OAhCAH,EAAwBe,WACpBC,QAAS,WACLT,KAAKI,SAASJ,KAAKJ,eAAiBI,KAAKH,SACzCG,KAAKI,SAASM,aAAc,EAC5BV,KAAKN,OAAOiB,QAAQC,cAAcC,SAASb,KAAKL,QAChDK,KAAKN,OAAOiB,QAAQG,gBAAgBD,SAASb,KAAKI,WAEtDW,KAAM,WACFf,KAAKI,SAASJ,KAAKJ,eAAiBI,KAAKM,SACzCN,KAAKI,SAASM,aAAc,EAC5BV,KAAKN,OAAOiB,QAAQC,cAAcC,SAASb,KAAKL,QAChDK,KAAKN,OAAOiB,QAAQG,gBAAgBD,SAASb,KAAKI,WAEtDY,OAAQ,SAAUC,GACdjB,KAAKH,SAAWoB,EAAIpB,UAExBqB,OAAQ,WACJ,IAAIC,EAAS3B,EAAQgB,UAAUU,OAAOnB,KAAKC,MAK3C,OAJAmB,EAAOC,WAAapB,KAAKL,OAAO0B,KAChCF,EAAOvB,cAAgBI,KAAKJ,cAC5BuB,EAAOb,SAAWN,KAAKM,SACvBa,EAAOtB,SAAWG,KAAKH,SAChBsB,GAEXG,SAAU,SAAUC,GAChB/B,EAAQgB,UAAUc,SAASvB,KAAKC,KAAMuB,GACtCvB,KAAKJ,cAAgB2B,EAAK3B,cAC1BI,KAAKM,SAAWiB,EAAKjB,SACrBN,KAAKH,SAAW0B,EAAK1B,SACrBG,KAAKL,OAASK,KAAKN,OAAO8B,aAAaD,EAAKH,cAG7C3B","file":"../../commands/SetMaterialValueCommand.js","sourcesContent":["define(['../Command'], function (Command) {\n    'use strict';\n    var SetMaterialValueCommand = function (editor, object, attributeName, newValue, materialSlot) {\n        Command.call(this, editor);\n        this.type = 'SetMaterialValueCommand';\n        this.name = 'Set Material.' + attributeName;\n        this.updatable = true;\n        this.object = object;\n        this.material = this.editor.getObjectMaterial(object, materialSlot);\n        this.oldValue = this.material !== undefined ? this.material[attributeName] : undefined;\n        this.newValue = newValue;\n        this.attributeName = attributeName;\n    };\n    SetMaterialValueCommand.prototype = {\n        execute: function () {\n            this.material[this.attributeName] = this.newValue;\n            this.material.needsUpdate = true;\n            this.editor.signals.objectChanged.dispatch(this.object);\n            this.editor.signals.materialChanged.dispatch(this.material);\n        },\n        undo: function () {\n            this.material[this.attributeName] = this.oldValue;\n            this.material.needsUpdate = true;\n            this.editor.signals.objectChanged.dispatch(this.object);\n            this.editor.signals.materialChanged.dispatch(this.material);\n        },\n        update: function (cmd) {\n            this.newValue = cmd.newValue;\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.attributeName = this.attributeName;\n            output.oldValue = this.oldValue;\n            output.newValue = this.newValue;\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.attributeName = json.attributeName;\n            this.oldValue = json.oldValue;\n            this.newValue = json.newValue;\n            this.object = this.editor.objectByUuid(json.objectUuid);\n        }\n    };\n    return SetMaterialValueCommand;\n});"]}