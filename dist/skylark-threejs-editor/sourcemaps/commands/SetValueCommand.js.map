{"version":3,"sources":["commands/SetValueCommand.js"],"names":["define","Command","SetValueCommand","editor","object","attributeName","newValue","call","this","type","name","updatable","oldValue","undefined","prototype","execute","signals","objectChanged","dispatch","undo","update","cmd","toJSON","output","objectUuid","uuid","fromJSON","json","objectByUuid"],"mappings":";;;;;;;AAAAA,QAAQ,cAAe,SAAUC,GAC7B,aACA,IAAIC,EAAkB,SAAUC,EAAQC,EAAQC,EAAeC,GAC3DL,EAAQM,KAAKC,KAAML,GACnBK,KAAKC,KAAO,kBACZD,KAAKE,KAAO,OAASL,EACrBG,KAAKG,WAAY,EACjBH,KAAKJ,OAASA,EACdI,KAAKH,cAAgBA,EACrBG,KAAKI,cAAsBC,IAAXT,EAAuBA,EAAOC,QAAiBQ,EAC/DL,KAAKF,SAAWA,GA8BpB,OA5BAJ,EAAgBY,WACZC,QAAS,WACLP,KAAKJ,OAAOI,KAAKH,eAAiBG,KAAKF,SACvCE,KAAKL,OAAOa,QAAQC,cAAcC,SAASV,KAAKJ,SAEpDe,KAAM,WACFX,KAAKJ,OAAOI,KAAKH,eAAiBG,KAAKI,SACvCJ,KAAKL,OAAOa,QAAQC,cAAcC,SAASV,KAAKJ,SAEpDgB,OAAQ,SAAUC,GACdb,KAAKF,SAAWe,EAAIf,UAExBgB,OAAQ,WACJ,IAAIC,EAAStB,EAAQa,UAAUQ,OAAOf,KAAKC,MAK3C,OAJAe,EAAOC,WAAahB,KAAKJ,OAAOqB,KAChCF,EAAOlB,cAAgBG,KAAKH,cAC5BkB,EAAOX,SAAWJ,KAAKI,SACvBW,EAAOjB,SAAWE,KAAKF,SAChBiB,GAEXG,SAAU,SAAUC,GAChB1B,EAAQa,UAAUY,SAASnB,KAAKC,KAAMmB,GACtCnB,KAAKH,cAAgBsB,EAAKtB,cAC1BG,KAAKI,SAAWe,EAAKf,SACrBJ,KAAKF,SAAWqB,EAAKrB,SACrBE,KAAKJ,OAASI,KAAKL,OAAOyB,aAAaD,EAAKH,cAG7CtB","file":"../../commands/SetValueCommand.js","sourcesContent":["define(['../Command'], function (Command) {\n    'use strict';\n    var SetValueCommand = function (editor, object, attributeName, newValue) {\n        Command.call(this, editor);\n        this.type = 'SetValueCommand';\n        this.name = 'Set ' + attributeName;\n        this.updatable = true;\n        this.object = object;\n        this.attributeName = attributeName;\n        this.oldValue = object !== undefined ? object[attributeName] : undefined;\n        this.newValue = newValue;\n    };\n    SetValueCommand.prototype = {\n        execute: function () {\n            this.object[this.attributeName] = this.newValue;\n            this.editor.signals.objectChanged.dispatch(this.object);\n        },\n        undo: function () {\n            this.object[this.attributeName] = this.oldValue;\n            this.editor.signals.objectChanged.dispatch(this.object);\n        },\n        update: function (cmd) {\n            this.newValue = cmd.newValue;\n        },\n        toJSON: function () {\n            var output = Command.prototype.toJSON.call(this);\n            output.objectUuid = this.object.uuid;\n            output.attributeName = this.attributeName;\n            output.oldValue = this.oldValue;\n            output.newValue = this.newValue;\n            return output;\n        },\n        fromJSON: function (json) {\n            Command.prototype.fromJSON.call(this, json);\n            this.attributeName = json.attributeName;\n            this.oldValue = json.oldValue;\n            this.newValue = json.newValue;\n            this.object = this.editor.objectByUuid(json.objectUuid);\n        }\n    };\n    return SetValueCommand;\n});"]}