{"version":3,"sources":["Viewport.js"],"names":["define","THREE","TransformControls","mrdoobui","EditorControls","ViewportCameraCamera","ViewportInfoInfo","SetPositionCommand","SetRotationCommand","SetScaleCommand","editor","signals","container","UIPanel","setId","setPosition","add","d","ViewportCamera","e","ViewportInfo","renderer","pmremGenerator","camera","scene","sceneHelpers","objects","grid","GridHelper","array","geometry","attributes","color","i","length","j","box","Box3","selectionBox","BoxHelper","material","depthTest","transparent","visible","objectPositionOnDown","objectRotationOnDown","objectScaleOnDown","transformControls","a","dom","addEventListener","object","undefined","setFromObject","helper","helpers","id","isSkeletonHelper","update","refreshSidebarObject3D","dispatch","render","position","clone","rotation","scale","controls","enabled","getMode","equals","execute","f","g","h","raycaster","Raycaster","mouse","Vector2","getIntersects","point","set","x","y","setFromCamera","intersectObjects","onDownPosition","onUpPosition","onDoubleClickPosition","getMousePosition","rect","getBoundingClientRect","left","width","top","height","handleClick","distanceTo","intersects","userData","select","onMouseUp","event","clientX","clientY","fromArray","document","removeEventListener","onTouchEnd","touch","changedTouches","intersect","objectFocused","c","cameraChanged","editorCleared","center","currentBackgroundType","currentFogType","transformModeChanged","mode","setMode","snapChanged","dist","setTranslationSnap","spaceChanged","space","setSpace","rendererUpdated","rendererChanged","newRenderer","newPmremGenerator","removeChild","domElement","autoClear","autoUpdateScene","outputEncoding","sRGBEncoding","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","offsetHeight","appendChild","sceneGraphChanged","objectSelected","detach","isEmpty","attach","focus","geometryChanged","objectAdded","traverse","child","push","objectChanged","selected","isPerspectiveCamera","updateProjectionMatrix","objectRemoved","splice","indexOf","helperAdded","getObjectByName","helperRemoved","materialChanged","sceneBackgroundChanged","backgroundType","backgroundColor","backgroundTexture","backgroundCubeTexture","backgroundEquirectTexture","background","Color","environment","isHDRTexture","texture","fromCubemap","isPmremTexture","fromEquirectangular","sceneFogChanged","fogType","fogColor","fogNear","fogFar","fogDensity","fog","Fog","FogExp2","isFog","setHex","near","far","isFogExp2","density","viewportCameraChanged","viewportCamera","aspect","projectionMatrix","copy","isOrthographicCamera","windowResize","DEFAULT_CAMERA","showGridChanged","showGrid","clock","Clock","requestAnimationFrame","animate","mixer","stats","actions","inUse","getDelta","startTime","performance","now","updateMatrixWorld","frametime","sceneRendered"],"mappings":"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","file":"../Viewport.js","sourcesContent":["define([\n    'skylark-threejs',\n    'skylark-threejs-ex/controls/TransformControls',\n    'skylark-mrdoobui',\n    './EditorControls',\n    './viewports/Camera',\n    './viewports/Info',\n    './commands/SetPositionCommand',\n    './commands/SetRotationCommand',\n    './commands/SetScaleCommand'\n], function (\n    THREE, \n    TransformControls, \n    mrdoobui,\n    EditorControls,\n    ViewportCameraCamera, \n    ViewportInfoInfo, \n    SetPositionCommand, \n    SetRotationCommand,\n    SetScaleCommand\n) {\n    'use strict';\n    var Viewport = function (editor) {\n        var signals = editor.signals;\n        var container = new mrdoobui.UIPanel();\n        container.setId('viewport');\n        container.setPosition('absolute');\n        container.add(new d.ViewportCamera(editor));\n        container.add(new e.ViewportInfo(editor));\n        var renderer = null;\n        var pmremGenerator = null;\n        var camera = editor.camera;\n        var scene = editor.scene;\n        var sceneHelpers = editor.sceneHelpers;\n        var objects = [];\n        var grid = new THREE.GridHelper(30, 30, 4473924, 8947848);\n        sceneHelpers.add(grid);\n        var array = grid.geometry.attributes.color.array;\n        for (var i = 0; i < array.length; i += 60) {\n            for (var j = 0; j < 12; j++) {\n                array[i + j] = 0.26;\n            }\n        }\n        var box = new THREE.Box3();\n        var selectionBox = new THREE.BoxHelper();\n        selectionBox.material.depthTest = false;\n        selectionBox.material.transparent = true;\n        selectionBox.visible = false;\n        sceneHelpers.add(selectionBox);\n        var objectPositionOnDown = null;\n        var objectRotationOnDown = null;\n        var objectScaleOnDown = null;\n        var transformControls = new a.TransformControls(camera, container.dom);\n        transformControls.addEventListener('change', function () {\n            var object = transformControls.object;\n            if (object !== undefined) {\n                selectionBox.setFromObject(object);\n                var helper = editor.helpers[object.id];\n                if (helper !== undefined && helper.isSkeletonHelper !== true) {\n                    helper.update();\n                }\n                signals.refreshSidebarObject3D.dispatch(object);\n            }\n            render();\n        });\n        transformControls.addEventListener('mouseDown', function () {\n            var object = transformControls.object;\n            objectPositionOnDown = object.position.clone();\n            objectRotationOnDown = object.rotation.clone();\n            objectScaleOnDown = object.scale.clone();\n            controls.enabled = false;\n        });\n        transformControls.addEventListener('mouseUp', function () {\n            var object = transformControls.object;\n            if (object !== undefined) {\n                switch (transformControls.getMode()) {\n                case 'translate':\n                    if (!objectPositionOnDown.equals(object.position)) {\n                        editor.execute(new f.SetPositionCommand(editor, object, object.position, objectPositionOnDown));\n                    }\n                    break;\n                case 'rotate':\n                    if (!objectRotationOnDown.equals(object.rotation)) {\n                        editor.execute(new g.SetRotationCommand(editor, object, object.rotation, objectRotationOnDown));\n                    }\n                    break;\n                case 'scale':\n                    if (!objectScaleOnDown.equals(object.scale)) {\n                        editor.execute(new h.SetScaleCommand(editor, object, object.scale, objectScaleOnDown));\n                    }\n                    break;\n                }\n            }\n            controls.enabled = true;\n        });\n        sceneHelpers.add(transformControls);\n        var raycaster = new THREE.Raycaster();\n        var mouse = new THREE.Vector2();\n        function getIntersects(point, objects) {\n            mouse.set(point.x * 2 - 1, -(point.y * 2) + 1);\n            raycaster.setFromCamera(mouse, camera);\n            return raycaster.intersectObjects(objects);\n        }\n        var onDownPosition = new THREE.Vector2();\n        var onUpPosition = new THREE.Vector2();\n        var onDoubleClickPosition = new THREE.Vector2();\n        function getMousePosition(dom, x, y) {\n            var rect = dom.getBoundingClientRect();\n            return [\n                (x - rect.left) / rect.width,\n                (y - rect.top) / rect.height\n            ];\n        }\n        function handleClick() {\n            if (onDownPosition.distanceTo(onUpPosition) === 0) {\n                var intersects = getIntersects(onUpPosition, objects);\n                if (intersects.length > 0) {\n                    var object = intersects[0].object;\n                    if (object.userData.object !== undefined) {\n                        editor.select(object.userData.object);\n                    } else {\n                        editor.select(object);\n                    }\n                } else {\n                    editor.select(null);\n                }\n                render();\n            }\n        }\n        function onMouseDown(event) {\n            var array = getMousePosition(container.dom, event.clientX, event.clientY);\n            onDownPosition.fromArray(array);\n            document.addEventListener('mouseup', onMouseUp, false);\n        }\n        function onMouseUp(event) {\n            var array = getMousePosition(container.dom, event.clientX, event.clientY);\n            onUpPosition.fromArray(array);\n            handleClick();\n            document.removeEventListener('mouseup', onMouseUp, false);\n        }\n        function onTouchStart(event) {\n            var touch = event.changedTouches[0];\n            var array = getMousePosition(container.dom, touch.clientX, touch.clientY);\n            onDownPosition.fromArray(array);\n            document.addEventListener('touchend', onTouchEnd, false);\n        }\n        function onTouchEnd(event) {\n            var touch = event.changedTouches[0];\n            var array = getMousePosition(container.dom, touch.clientX, touch.clientY);\n            onUpPosition.fromArray(array);\n            handleClick();\n            document.removeEventListener('touchend', onTouchEnd, false);\n        }\n        function onDoubleClick(event) {\n            var array = getMousePosition(container.dom, event.clientX, event.clientY);\n            onDoubleClickPosition.fromArray(array);\n            var intersects = getIntersects(onDoubleClickPosition, objects);\n            if (intersects.length > 0) {\n                var intersect = intersects[0];\n                signals.objectFocused.dispatch(intersect.object);\n            }\n        }\n        container.dom.addEventListener('mousedown', onMouseDown, false);\n        container.dom.addEventListener('touchstart', onTouchStart, false);\n        container.dom.addEventListener('dblclick', onDoubleClick, false);\n        var controls = new c.EditorControls(camera, container.dom);\n        controls.addEventListener('change', function () {\n            signals.cameraChanged.dispatch(camera);\n        });\n        signals.editorCleared.add(function () {\n            controls.center.set(0, 0, 0);\n            currentBackgroundType = null;\n            currentFogType = null;\n            render();\n        });\n        signals.transformModeChanged.add(function (mode) {\n            transformControls.setMode(mode);\n        });\n        signals.snapChanged.add(function (dist) {\n            transformControls.setTranslationSnap(dist);\n        });\n        signals.spaceChanged.add(function (space) {\n            transformControls.setSpace(space);\n        });\n        signals.rendererUpdated.add(function () {\n            render();\n        });\n        signals.rendererChanged.add(function (newRenderer, newPmremGenerator) {\n            if (renderer !== null) {\n                container.dom.removeChild(renderer.domElement);\n            }\n            renderer = newRenderer;\n            pmremGenerator = newPmremGenerator;\n            renderer.autoClear = false;\n            renderer.autoUpdateScene = false;\n            renderer.outputEncoding = THREE.sRGBEncoding;\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(container.dom.offsetWidth, container.dom.offsetHeight);\n            container.dom.appendChild(renderer.domElement);\n            render();\n        });\n        signals.sceneGraphChanged.add(function () {\n            render();\n        });\n        signals.cameraChanged.add(function () {\n            render();\n        });\n        signals.objectSelected.add(function (object) {\n            selectionBox.visible = false;\n            transformControls.detach();\n            if (object !== null && object !== scene && object !== camera) {\n                box.setFromObject(object);\n                if (box.isEmpty() === false) {\n                    selectionBox.setFromObject(object);\n                    selectionBox.visible = true;\n                }\n                transformControls.attach(object);\n            }\n            render();\n        });\n        signals.objectFocused.add(function (object) {\n            controls.focus(object);\n        });\n        signals.geometryChanged.add(function (object) {\n            if (object !== undefined) {\n                selectionBox.setFromObject(object);\n            }\n            render();\n        });\n        signals.objectAdded.add(function (object) {\n            object.traverse(function (child) {\n                objects.push(child);\n            });\n        });\n        signals.objectChanged.add(function (object) {\n            if (editor.selected === object) {\n                selectionBox.setFromObject(object);\n            }\n            if (object.isPerspectiveCamera) {\n                object.updateProjectionMatrix();\n            }\n            if (editor.helpers[object.id] !== undefined) {\n                editor.helpers[object.id].update();\n            }\n            render();\n        });\n        signals.objectRemoved.add(function (object) {\n            controls.enabled = true;\n            if (object === transformControls.object) {\n                transformControls.detach();\n            }\n            object.traverse(function (child) {\n                objects.splice(objects.indexOf(child), 1);\n            });\n        });\n        signals.helperAdded.add(function (object) {\n            objects.push(object.getObjectByName('picker'));\n        });\n        signals.helperRemoved.add(function (object) {\n            objects.splice(objects.indexOf(object.getObjectByName('picker')), 1);\n        });\n        signals.materialChanged.add(function () {\n            render();\n        });\n        var currentBackgroundType = null;\n        signals.sceneBackgroundChanged.add(function (backgroundType, backgroundColor, backgroundTexture, backgroundCubeTexture, backgroundEquirectTexture) {\n            if (currentBackgroundType !== backgroundType) {\n                switch (backgroundType) {\n                case 'None':\n                    scene.background = null;\n                    break;\n                case 'Color':\n                    scene.background = new THREE.Color();\n                    break;\n                }\n            }\n            if (backgroundType === 'Color') {\n                scene.background.set(backgroundColor);\n                scene.environment = null;\n            } else if (backgroundType === 'Texture') {\n                scene.background = backgroundTexture;\n                scene.environment = null;\n            } else if (backgroundType === 'CubeTexture') {\n                if (backgroundCubeTexture && backgroundCubeTexture.isHDRTexture) {\n                    var texture = pmremGenerator.fromCubemap(backgroundCubeTexture).texture;\n                    texture.isPmremTexture = true;\n                    scene.background = texture;\n                    scene.environment = texture;\n                } else {\n                    scene.background = backgroundCubeTexture;\n                    scene.environment = null;\n                }\n            } else if (backgroundType === 'Equirect') {\n                if (backgroundEquirectTexture && backgroundEquirectTexture.isHDRTexture) {\n                    var texture = pmremGenerator.fromEquirectangular(backgroundEquirectTexture).texture;\n                    texture.isPmremTexture = true;\n                    scene.background = texture;\n                    scene.environment = texture;\n                } else {\n                    scene.background = null;\n                    scene.environment = null;\n                }\n            }\n            render();\n        });\n        var currentFogType = null;\n        signals.sceneFogChanged.add(function (fogType, fogColor, fogNear, fogFar, fogDensity) {\n            if (currentFogType !== fogType) {\n                switch (fogType) {\n                case 'None':\n                    scene.fog = null;\n                    break;\n                case 'Fog':\n                    scene.fog = new THREE.Fog();\n                    break;\n                case 'FogExp2':\n                    scene.fog = new THREE.FogExp2();\n                    break;\n                }\n                currentFogType = fogType;\n            }\n            if (scene.fog) {\n                if (scene.fog.isFog) {\n                    scene.fog.color.setHex(fogColor);\n                    scene.fog.near = fogNear;\n                    scene.fog.far = fogFar;\n                } else if (scene.fog.isFogExp2) {\n                    scene.fog.color.setHex(fogColor);\n                    scene.fog.density = fogDensity;\n                }\n            }\n            render();\n        });\n        signals.viewportCameraChanged.add(function (viewportCamera) {\n            if (viewportCamera.isPerspectiveCamera) {\n                viewportCamera.aspect = editor.camera.aspect;\n                viewportCamera.projectionMatrix.copy(editor.camera.projectionMatrix);\n            } else if (!viewportCamera.isOrthographicCamera) {\n                throw 'Invalid camera set as viewport';\n            }\n            camera = viewportCamera;\n            render();\n        });\n        signals.windowResize.add(function () {\n            editor.DEFAULT_CAMERA.aspect = container.dom.offsetWidth / container.dom.offsetHeight;\n            editor.DEFAULT_CAMERA.updateProjectionMatrix();\n            camera.aspect = container.dom.offsetWidth / container.dom.offsetHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(container.dom.offsetWidth, container.dom.offsetHeight);\n            render();\n        });\n        signals.showGridChanged.add(function (showGrid) {\n            grid.visible = showGrid;\n            render();\n        });\n        var clock = new THREE.Clock();\n        function animate() {\n            requestAnimationFrame(animate);\n            var mixer = editor.mixer;\n            if (mixer.stats.actions.inUse > 0) {\n                mixer.update(clock.getDelta());\n                render();\n            }\n        }\n        requestAnimationFrame(animate);\n        var startTime = 0;\n        var endTime = 0;\n        function render() {\n            startTime = performance.now();\n            scene.updateMatrixWorld();\n            renderer.render(scene, camera);\n            if (camera === editor.camera) {\n                sceneHelpers.updateMatrixWorld();\n                renderer.render(sceneHelpers, camera);\n            }\n            endTime = performance.now();\n            var frametime = endTime - startTime;\n            editor.signals.sceneRendered.dispatch(frametime);\n        }\n        return container;\n    };\n    return Viewport;\n});"]}